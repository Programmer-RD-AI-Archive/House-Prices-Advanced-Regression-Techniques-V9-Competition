diff --git a/.ipynb_checkpoints/00-checkpoint.ipynb b/.ipynb_checkpoints/00-checkpoint.ipynb
index 58a3956..4514644 100644
--- a/.ipynb_checkpoints/00-checkpoint.ipynb
+++ b/.ipynb_checkpoints/00-checkpoint.ipynb
@@ -37,7 +37,7 @@
     {
      "data": {
       "text/plain": [
-       "<torch._C.Generator at 0x7fe2469f8890>"
+       "<torch._C.Generator at 0x7fbbb7b4e890>"
       ]
      },
      "execution_count": 1,
@@ -116,8 +116,27 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "def make_submission(model):\n",
-    "    pass"
+    "def make_submission(model,name):\n",
+    "    data = pd.read_csv('./data/test.csv')\n",
+    "    ids = data['Id']\n",
+    "    str_cols = []\n",
+    "    int_cols = []\n",
+    "    for col_name,num_of_missing_rows,dtype in zip(list(data.columns),data.isna().sum(),data.dtypes):\n",
+    "        if dtype == object:\n",
+    "            str_cols.append(col_name)\n",
+    "        else:\n",
+    "            int_cols.append(col_name)\n",
+    "    for str_col in str_cols:\n",
+    "        data,idx,labels_and_int_index,new_data = object_to_int(data,str_col)\n",
+    "    nan_cols = []\n",
+    "    for col_name,num_of_missing_rows,dtype in zip(list(data.columns),data.isna().sum(),data.dtypes):\n",
+    "        if num_of_missing_rows > 0:\n",
+    "            nan_cols.append(col_name)\n",
+    "    for nan_col in nan_cols:\n",
+    "        data[nan_col].fillna(data[nan_col].median(),inplace=True)\n",
+    "    preds = model.predict(data)\n",
+    "    df = pd.DataFrame({'Id':ids,'SalePrice':preds})\n",
+    "    df.to_csv(f'./submission/{name}.csv',index=False)"
    ]
   },
   {
@@ -154,7 +173,7 @@
     "    model.fit(X_train,y_train)\n",
     "    wandb.log(valid(model,X_train,y_train))\n",
     "    wandb.log(valid(model,X_test,y_test,True))\n",
-    "    make_submission(model)\n",
+    "    make_submission(model,name)\n",
     "    return model"
    ]
   },
@@ -187,11 +206,13 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "def fe(data,col):\n",
-    "    max_num = data[col].quantile(0.95)\n",
-    "    min_num = data[col].quantile(0.05)\n",
-    "    data = data[data[col] > max_num]\n",
-    "    data = data[data[col] < min_num]\n",
+    "def fe(data,col,quantile_max_num=0.99,quantile_min_num=0.05):\n",
+    "    max_num = data[col].quantile(quantile_max_num)\n",
+    "    min_num = data[col].quantile(quantile_min_num)\n",
+    "    print(max_num)\n",
+    "    print(min_num)\n",
+    "    data = data[data[col] < max_num]\n",
+    "    data = data[data[col] > min_num]\n",
     "    return data"
    ]
   },
@@ -611,51 +632,363 @@
    "execution_count": 21,
    "id": "cc774b5c-864c-4ca1-98a5-9c15c3f34662",
    "metadata": {},
+   "outputs": [],
+   "source": [
+    "# train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
+   "id": "849a2c64-9035-4095-bd5c-06cf954803c0",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_old = X.copy()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "4d4e016e-2cb6-47b3-bb2c-f5303038fe9c",
+   "metadata": {},
+   "source": [
+    "## FE"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "id": "4a327805-8a37-4c22-880d-2154022c6900",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for col_name in list(X.columns):\n",
+    "#     try:\n",
+    "#         X = X_old.copy()\n",
+    "#         X = fe(X,col_name)\n",
+    "#         train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
+    "#     except:\n",
+    "#         print('*'*50)\n",
+    "#         print('*'*50)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "id": "18da7858-3bf4-4639-ab12-87cdd08abf78",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "id": "38925d4b-60a6-4f56-9032-71fca45b4b24",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_corr = X_old.corr()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 26,
+   "id": "6609b3f9-eb00-413a-9fa8-fca9412b0926",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "keep_cols = []"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "06f773a1-48c1-4363-9a49-d30ec7b0d8a5",
+   "metadata": {},
+   "source": [
+    "## Data.corr()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "id": "b98375e9-9c7d-4a25-96e3-0097f2a50134",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for key,val in zip(X_corr.to_dict().keys(),X_corr.to_dict().values()):\n",
+    "#     for val_key,val_vals in zip(val.keys(),val.values()):\n",
+    "#         if val_key == key:\n",
+    "#             pass\n",
+    "#         else:\n",
+    "#             if val_vals > 0.0:\n",
+    "#                 if val_key not in keep_cols:\n",
+    "#                     print(val_vals)\n",
+    "#                     keep_cols.append(val_key)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "id": "1eb9628b-e2d3-4813-a29d-21b69c433115",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# fig,ax = plt.subplots(figsize=(25,12))\n",
+    "# ax = sns.heatmap(X_corr,annot=True,linewidths=0.5,fmt='.2f',cmap='YlGnBu')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 29,
+   "id": "156dd7dd-42dc-49b7-b652-e24c264f5793",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# keep_cols"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "id": "78fa85e9-8b4c-48cd-9fdb-d75466353819",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# len(keep_cols)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "f6cac9c7-7a7d-4e73-94f0-88110636fbcc",
+   "metadata": {},
+   "source": [
+    "## Analytics"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "id": "38293ea8-66b4-47d6-8978-3c74717e3c58",
+   "metadata": {},
    "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mranuga-d\u001b[0m (use `wandb login --relogin` to force relogin)\n"
-     ]
-    },
     {
      "data": {
       "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
        "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-without-fe</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47</code><br/><br/>\n",
-       "            "
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Id</th>\n",
+       "      <th>MSSubClass</th>\n",
+       "      <th>MSZoning</th>\n",
+       "      <th>LotFrontage</th>\n",
+       "      <th>LotArea</th>\n",
+       "      <th>Street</th>\n",
+       "      <th>Alley</th>\n",
+       "      <th>LotShape</th>\n",
+       "      <th>LandContour</th>\n",
+       "      <th>Utilities</th>\n",
+       "      <th>...</th>\n",
+       "      <th>ScreenPorch</th>\n",
+       "      <th>PoolArea</th>\n",
+       "      <th>PoolQC</th>\n",
+       "      <th>Fence</th>\n",
+       "      <th>MiscFeature</th>\n",
+       "      <th>MiscVal</th>\n",
+       "      <th>MoSold</th>\n",
+       "      <th>YrSold</th>\n",
+       "      <th>SaleType</th>\n",
+       "      <th>SaleCondition</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>65.0</td>\n",
+       "      <td>8450</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>2</td>\n",
+       "      <td>20</td>\n",
+       "      <td>0</td>\n",
+       "      <td>80.0</td>\n",
+       "      <td>9600</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>5</td>\n",
+       "      <td>2007</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>3</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>68.0</td>\n",
+       "      <td>11250</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>4</td>\n",
+       "      <td>70</td>\n",
+       "      <td>0</td>\n",
+       "      <td>60.0</td>\n",
+       "      <td>9550</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2006</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>5</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>84.0</td>\n",
+       "      <td>14260</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>12</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>5 rows × 80 columns</p>\n",
+       "</div>"
       ],
       "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "GradientBoostingRegressor()"
+       "   Id  MSSubClass  MSZoning  LotFrontage  LotArea  Street  Alley  LotShape  \\\n",
+       "0   1          60         0         65.0     8450       0      0         0   \n",
+       "1   2          20         0         80.0     9600       0      0         0   \n",
+       "2   3          60         0         68.0    11250       0      0         1   \n",
+       "3   4          70         0         60.0     9550       0      0         1   \n",
+       "4   5          60         0         84.0    14260       0      0         1   \n",
+       "\n",
+       "   LandContour  Utilities  ...  ScreenPorch  PoolArea  PoolQC  Fence  \\\n",
+       "0            0          0  ...            0         0       0      0   \n",
+       "1            0          0  ...            0         0       0      0   \n",
+       "2            0          0  ...            0         0       0      0   \n",
+       "3            0          0  ...            0         0       0      0   \n",
+       "4            0          0  ...            0         0       0      0   \n",
+       "\n",
+       "   MiscFeature  MiscVal  MoSold  YrSold  SaleType  SaleCondition  \n",
+       "0            0        0       2    2008         0              0  \n",
+       "1            0        0       5    2007         0              0  \n",
+       "2            0        0       9    2008         0              0  \n",
+       "3            0        0       2    2006         0              1  \n",
+       "4            0        0      12    2008         0              0  \n",
+       "\n",
+       "[5 rows x 80 columns]"
       ]
      },
-     "execution_count": 21,
+     "execution_count": 31,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
+    "X.head()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "b1bbdd3b-7bdf-4952-837f-590aac4f4913",
+   "metadata": {},
+   "source": [
+    "## Preproccessing"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
-   "id": "849a2c64-9035-4095-bd5c-06cf954803c0",
+   "execution_count": 32,
+   "id": "55582a60-6b50-4c0e-9828-c447125cfacf",
    "metadata": {},
    "outputs": [],
    "source": [
@@ -664,14 +997,121 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "4a327805-8a37-4c22-880d-2154022c6900",
+   "execution_count": 33,
+   "id": "e91f6a7d-0428-4aba-943a-cfe85e427cd1",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for preproccessing in preproccessings:\n",
+    "#     X = X_old.copy()\n",
+    "#     preproccessing = preproccessing()\n",
+    "#     X = preproccessing.fit_transform(X)\n",
+    "#     train(GradientBoostingRegressor(),X,X,y,y,name=f'{preproccessing}-preproccessing')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 34,
+   "id": "dc4e18e1-db0c-4674-9223-3f58d448f5ca",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 35,
+   "id": "43c60d85-74d2-4483-89ab-a9ef94a8b00c",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 36,
+   "id": "6dd96d0f-dc01-4f26-863c-fbd6525cccf2",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=True,select_k_best=False,rfecv=False)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=True-select_k_best=False-rfecv=False-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 37,
+   "id": "e01142e6-681e-44bc-8e7f-26381af4020d",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 38,
+   "id": "d34c8787-9ef7-41ec-92f7-647484d7e207",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 39,
+   "id": "b583e5fa-ffea-4e58-a19e-8294848640a5",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=False,select_k_best=False,rfecv=True)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=False-select_k_best=False-rfecv=True-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 40,
+   "id": "e9deaaed-087d-4592-8a5e-dbaca167b3a6",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "fa280dec-4410-4986-9319-de078331dfe7",
+   "metadata": {},
+   "source": [
+    "## Modelling"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "id": "e9cb2055-bbee-41cc-a543-c1ae6b8df0d9",
    "metadata": {},
    "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mranuga-d\u001b[0m (use `wandb login --relogin` to force relogin)\n"
+     ]
+    },
     {
      "data": {
       "text/html": [
-       "Finishing last run (ID:2va7zg47) before initializing another..."
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">KNeighborsRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1tqqy092\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1tqqy092</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_143947-1tqqy092</code><br/><br/>\n",
+       "            "
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -683,7 +1123,19 @@
     {
      "data": {
       "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 107778<br/>Program ended successfully."
+       "Finishing last run (ID:1tqqy092) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 235408<br/>Program ended successfully."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -700,7 +1152,7 @@
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.04MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+       "VBox(children=(Label(value=' 0.08MB of 0.08MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
       ]
      },
      "metadata": {},
@@ -709,7 +1161,7 @@
     {
      "data": {
       "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug.log</code>"
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_143947-1tqqy092/logs/debug.log</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -721,7 +1173,7 @@
     {
      "data": {
       "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug-internal.log</code>"
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_143947-1tqqy092/logs/debug-internal.log</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -736,7 +1188,7 @@
        "<h3>Run summary:</h3><br/><style>\n",
        "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
        "    </style><table class=\"wandb\">\n",
-       "<tr><td>mean_absolute_error</td><td>10827.12407</td></tr><tr><td>mean_squared_error</td><td>226354142.17452</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629869143</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>10827.12407</td></tr><tr><td>val mean_squared_error</td><td>226354142.17452</td></tr></table>"
+       "<tr><td>mean_absolute_error</td><td>23969.50863</td></tr><tr><td>mean_squared_error</td><td>1422933124.74874</td></tr><tr><td>_runtime</td><td>8</td></tr><tr><td>_timestamp</td><td>1629882595</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>23969.50863</td></tr><tr><td>val mean_squared_error</td><td>1422933124.74874</td></tr></table>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -763,7 +1215,7 @@
     {
      "data": {
       "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+       "Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -776,7 +1228,7 @@
      "data": {
       "text/html": [
        "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-without-fe</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">KNeighborsRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1tqqy092\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1tqqy092</a><br/>\n",
        "                "
       ],
       "text/plain": [
@@ -789,7 +1241,7 @@
     {
      "data": {
       "text/html": [
-       "...Successfully finished last run (ID:2va7zg47). Initializing new run:<br/><br/>"
+       "...Successfully finished last run (ID:1tqqy092). Initializing new run:<br/><br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -803,10 +1255,10 @@
       "text/html": [
        "\n",
        "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">LogisticRegression</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
        "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom</code><br/><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2h33ad74\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2h33ad74</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_143956-2h33ad74</code><br/><br/>\n",
        "            "
       ],
       "text/plain": [
@@ -816,10 +1268,24 @@
      "metadata": {},
      "output_type": "display_data"
     },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
+     ]
+    },
     {
      "data": {
       "text/html": [
-       "Finishing last run (ID:5klsxrom) before initializing another..."
+       "Finishing last run (ID:2h33ad74) before initializing another..."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -831,7 +1297,7 @@
     {
      "data": {
       "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108219<br/>Program ended successfully."
+       "<br/>Waiting for W&B process to finish, PID 235847<br/>Program ended successfully."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -848,7 +1314,7 @@
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+       "VBox(children=(Label(value=' 0.00MB of 0.13MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.0, max=1.0)…"
       ]
      },
      "metadata": {},
@@ -857,7 +1323,7 @@
     {
      "data": {
       "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug.log</code>"
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_143956-2h33ad74/logs/debug.log</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -869,7 +1335,7 @@
     {
      "data": {
       "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug-internal.log</code>"
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_143956-2h33ad74/logs/debug-internal.log</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -881,7 +1347,10 @@
     {
      "data": {
       "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>37421.43288</td></tr><tr><td>mean_squared_error</td><td>3265112959.47808</td></tr><tr><td>_runtime</td><td>10</td></tr><tr><td>_timestamp</td><td>1629882625</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>37421.43288</td></tr><tr><td>val mean_squared_error</td><td>3265112959.47808</td></tr></table>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -893,9 +1362,10 @@
     {
      "data": {
       "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                "
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -907,7 +1377,7 @@
     {
      "data": {
       "text/html": [
-       "...Successfully finished last run (ID:5klsxrom). Initializing new run:<br/><br/>"
+       "Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -920,12 +1390,8 @@
      "data": {
       "text/html": [
        "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-MSSubClass</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105618-37zdocsk</code><br/><br/>\n",
-       "            "
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">LogisticRegression</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2h33ad74\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2h33ad74</a><br/>\n",
+       "                "
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -937,7 +1403,7 @@
     {
      "data": {
       "text/html": [
-       "Finishing last run (ID:37zdocsk) before initializing another..."
+       "...Successfully finished last run (ID:2h33ad74). Initializing new run:<br/><br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -949,7 +1415,13 @@
     {
      "data": {
       "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108461<br/>Program ended successfully."
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">LogisticRegressionCV</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/27qzns6b\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/27qzns6b</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_144025-27qzns6b</code><br/><br/>\n",
+       "            "
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -959,65 +1431,94 @@
      "output_type": "display_data"
     },
     {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "05c1906485ec4fb3b148b36707afae62",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.98653788321…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/_split.py:668: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=5.\n",
+      "  % (min_groups, self.n_splits)), UserWarning)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/numpy/core/_asarray.py:83: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
+      "  return array(a, dtype, copy=False, order=order)\n"
+     ]
+    },
+    {
+     "ename": "ValueError",
+     "evalue": "could not broadcast input array from shape (10,583,81) into shape (10)",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
+      "\u001b[0;32m<ipython-input-41-558bd25cd518>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmodels\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34mf'{model[0]}'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
+      "\u001b[0;32m<ipython-input-4-b4edc8d2c718>\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(model, X_train, X_test, y_train, y_test, name)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0mwandb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproject\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mPROJECT_NAME\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0mwandb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mwandb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m   1919\u001b[0m             coefs_paths = np.reshape(\n\u001b[1;32m   1920\u001b[0m                 \u001b[0mcoefs_paths\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1921\u001b[0;31m                 \u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfolds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ml1_ratios_\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCs_\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_classes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1922\u001b[0m             )\n\u001b[1;32m   1923\u001b[0m             \u001b[0;31m# equiv to coefs_paths = np.moveaxis(coefs_paths, (0, 1, 2, 3),\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mreshape\u001b[0;34m(*args, **kwargs)\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36mreshape\u001b[0;34m(a, newshape, order)\u001b[0m\n\u001b[1;32m    297\u001b[0m            [5, 6]])\n\u001b[1;32m    298\u001b[0m     \"\"\"\n\u001b[0;32m--> 299\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_wrapfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'reshape'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnewshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    300\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    301\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_wrapfunc\u001b[0;34m(obj, method, *args, **kwds)\u001b[0m\n\u001b[1;32m     53\u001b[0m     \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     54\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mbound\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 55\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_wrapit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     56\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_wrapit\u001b[0;34m(obj, method, *args, **kwds)\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m         \u001b[0mwrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mwrap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/numpy/core/_asarray.py\u001b[0m in \u001b[0;36masarray\u001b[0;34m(a, dtype, order)\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m     \"\"\"\n\u001b[0;32m---> 83\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     84\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;31mValueError\u001b[0m: could not broadcast input array from shape (10,583,81) into shape (10)"
+     ]
     }
    ],
    "source": [
-    "for col_name in list(X.columns):\n",
+    "for model in models:\n",
     "    try:\n",
-    "        X = X_old.copy()\n",
-    "        X = fe(X,col_name)\n",
-    "        train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
+    "        train(model[1](),X,X,y,y,name=f'{model[0]}')\n",
     "    except:\n",
     "        pass"
    ]
   },
   {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "18da7858-3bf4-4639-ab12-87cdd08abf78",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "X = X_old.copy()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "38925d4b-60a6-4f56-9032-71fca45b4b24",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "X_corr = X_old.corr()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "1eb9628b-e2d3-4813-a29d-21b69c433115",
+   "cell_type": "markdown",
+   "id": "3b8e70f7-b7bd-4f65-95b1-40cfad5ee1d6",
    "metadata": {},
-   "outputs": [],
    "source": [
-    "plt.figure(figsize=(12,7))\n",
-    "sns.heatmap(X_corr)"
+    "## Random Search"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "156dd7dd-42dc-49b7-b652-e24c264f5793",
+   "id": "e8494e9a-8189-4b03-a5ea-21ce23d014da",
    "metadata": {},
    "outputs": [],
    "source": []
diff --git a/00.ipynb b/00.ipynb
index 58a3956..2f89508 100644
--- a/00.ipynb
+++ b/00.ipynb
@@ -37,7 +37,7 @@
     {
      "data": {
       "text/plain": [
-       "<torch._C.Generator at 0x7fe2469f8890>"
+       "<torch._C.Generator at 0x7f9dadda6890>"
       ]
      },
      "execution_count": 1,
@@ -116,8 +116,27 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "def make_submission(model):\n",
-    "    pass"
+    "def make_submission(model,name):\n",
+    "    data = pd.read_csv('./data/test.csv')\n",
+    "    ids = data['Id']\n",
+    "    str_cols = []\n",
+    "    int_cols = []\n",
+    "    for col_name,num_of_missing_rows,dtype in zip(list(data.columns),data.isna().sum(),data.dtypes):\n",
+    "        if dtype == object:\n",
+    "            str_cols.append(col_name)\n",
+    "        else:\n",
+    "            int_cols.append(col_name)\n",
+    "    for str_col in str_cols:\n",
+    "        data,idx,labels_and_int_index,new_data = object_to_int(data,str_col)\n",
+    "    nan_cols = []\n",
+    "    for col_name,num_of_missing_rows,dtype in zip(list(data.columns),data.isna().sum(),data.dtypes):\n",
+    "        if num_of_missing_rows > 0:\n",
+    "            nan_cols.append(col_name)\n",
+    "    for nan_col in nan_cols:\n",
+    "        data[nan_col].fillna(data[nan_col].median(),inplace=True)\n",
+    "    preds = model.predict(data)\n",
+    "    df = pd.DataFrame({'Id':ids,'SalePrice':preds})\n",
+    "    df.to_csv(f'./submission/{name}.csv',index=False)"
    ]
   },
   {
@@ -154,7 +173,7 @@
     "    model.fit(X_train,y_train)\n",
     "    wandb.log(valid(model,X_train,y_train))\n",
     "    wandb.log(valid(model,X_test,y_test,True))\n",
-    "    make_submission(model)\n",
+    "    make_submission(model,name)\n",
     "    return model"
    ]
   },
@@ -187,11 +206,13 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "def fe(data,col):\n",
-    "    max_num = data[col].quantile(0.95)\n",
-    "    min_num = data[col].quantile(0.05)\n",
-    "    data = data[data[col] > max_num]\n",
-    "    data = data[data[col] < min_num]\n",
+    "def fe(data,col,quantile_max_num=0.99,quantile_min_num=0.05):\n",
+    "    max_num = data[col].quantile(quantile_max_num)\n",
+    "    min_num = data[col].quantile(quantile_min_num)\n",
+    "    print(max_num)\n",
+    "    print(min_num)\n",
+    "    data = data[data[col] < max_num]\n",
+    "    data = data[data[col] > min_num]\n",
     "    return data"
    ]
   },
@@ -611,23 +632,1703 @@
    "execution_count": 21,
    "id": "cc774b5c-864c-4ca1-98a5-9c15c3f34662",
    "metadata": {},
+   "outputs": [],
+   "source": [
+    "# train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
+   "id": "849a2c64-9035-4095-bd5c-06cf954803c0",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_old = X.copy()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "4d4e016e-2cb6-47b3-bb2c-f5303038fe9c",
+   "metadata": {},
+   "source": [
+    "## FE"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "id": "4a327805-8a37-4c22-880d-2154022c6900",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for col_name in list(X.columns):\n",
+    "#     try:\n",
+    "#         X = X_old.copy()\n",
+    "#         X = fe(X,col_name)\n",
+    "#         train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
+    "#     except:\n",
+    "#         print('*'*50)\n",
+    "#         print('*'*50)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "id": "18da7858-3bf4-4639-ab12-87cdd08abf78",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "id": "38925d4b-60a6-4f56-9032-71fca45b4b24",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_corr = X_old.corr()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 26,
+   "id": "6609b3f9-eb00-413a-9fa8-fca9412b0926",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "keep_cols = []"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "06f773a1-48c1-4363-9a49-d30ec7b0d8a5",
+   "metadata": {},
+   "source": [
+    "## Data.corr()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "id": "b98375e9-9c7d-4a25-96e3-0097f2a50134",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for key,val in zip(X_corr.to_dict().keys(),X_corr.to_dict().values()):\n",
+    "#     for val_key,val_vals in zip(val.keys(),val.values()):\n",
+    "#         if val_key == key:\n",
+    "#             pass\n",
+    "#         else:\n",
+    "#             if val_vals > 0.0:\n",
+    "#                 if val_key not in keep_cols:\n",
+    "#                     print(val_vals)\n",
+    "#                     keep_cols.append(val_key)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "id": "1eb9628b-e2d3-4813-a29d-21b69c433115",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# fig,ax = plt.subplots(figsize=(25,12))\n",
+    "# ax = sns.heatmap(X_corr,annot=True,linewidths=0.5,fmt='.2f',cmap='YlGnBu')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 29,
+   "id": "156dd7dd-42dc-49b7-b652-e24c264f5793",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# keep_cols"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "id": "78fa85e9-8b4c-48cd-9fdb-d75466353819",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# len(keep_cols)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "f6cac9c7-7a7d-4e73-94f0-88110636fbcc",
+   "metadata": {},
+   "source": [
+    "## Analytics"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "id": "38293ea8-66b4-47d6-8978-3c74717e3c58",
+   "metadata": {},
    "outputs": [
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mranuga-d\u001b[0m (use `wandb login --relogin` to force relogin)\n"
-     ]
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Id</th>\n",
+       "      <th>MSSubClass</th>\n",
+       "      <th>MSZoning</th>\n",
+       "      <th>LotFrontage</th>\n",
+       "      <th>LotArea</th>\n",
+       "      <th>Street</th>\n",
+       "      <th>Alley</th>\n",
+       "      <th>LotShape</th>\n",
+       "      <th>LandContour</th>\n",
+       "      <th>Utilities</th>\n",
+       "      <th>...</th>\n",
+       "      <th>ScreenPorch</th>\n",
+       "      <th>PoolArea</th>\n",
+       "      <th>PoolQC</th>\n",
+       "      <th>Fence</th>\n",
+       "      <th>MiscFeature</th>\n",
+       "      <th>MiscVal</th>\n",
+       "      <th>MoSold</th>\n",
+       "      <th>YrSold</th>\n",
+       "      <th>SaleType</th>\n",
+       "      <th>SaleCondition</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>65.0</td>\n",
+       "      <td>8450</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>2</td>\n",
+       "      <td>20</td>\n",
+       "      <td>0</td>\n",
+       "      <td>80.0</td>\n",
+       "      <td>9600</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>5</td>\n",
+       "      <td>2007</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>3</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>68.0</td>\n",
+       "      <td>11250</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>4</td>\n",
+       "      <td>70</td>\n",
+       "      <td>0</td>\n",
+       "      <td>60.0</td>\n",
+       "      <td>9550</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2006</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>5</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>84.0</td>\n",
+       "      <td>14260</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>12</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>5 rows × 80 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "   Id  MSSubClass  MSZoning  LotFrontage  LotArea  Street  Alley  LotShape  \\\n",
+       "0   1          60         0         65.0     8450       0      0         0   \n",
+       "1   2          20         0         80.0     9600       0      0         0   \n",
+       "2   3          60         0         68.0    11250       0      0         1   \n",
+       "3   4          70         0         60.0     9550       0      0         1   \n",
+       "4   5          60         0         84.0    14260       0      0         1   \n",
+       "\n",
+       "   LandContour  Utilities  ...  ScreenPorch  PoolArea  PoolQC  Fence  \\\n",
+       "0            0          0  ...            0         0       0      0   \n",
+       "1            0          0  ...            0         0       0      0   \n",
+       "2            0          0  ...            0         0       0      0   \n",
+       "3            0          0  ...            0         0       0      0   \n",
+       "4            0          0  ...            0         0       0      0   \n",
+       "\n",
+       "   MiscFeature  MiscVal  MoSold  YrSold  SaleType  SaleCondition  \n",
+       "0            0        0       2    2008         0              0  \n",
+       "1            0        0       5    2007         0              0  \n",
+       "2            0        0       9    2008         0              0  \n",
+       "3            0        0       2    2006         0              1  \n",
+       "4            0        0      12    2008         0              0  \n",
+       "\n",
+       "[5 rows x 80 columns]"
+      ]
+     },
+     "execution_count": 31,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "X.head()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "b1bbdd3b-7bdf-4952-837f-590aac4f4913",
+   "metadata": {},
+   "source": [
+    "## Preproccessing"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 32,
+   "id": "55582a60-6b50-4c0e-9828-c447125cfacf",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_old = X.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 33,
+   "id": "e91f6a7d-0428-4aba-943a-cfe85e427cd1",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for preproccessing in preproccessings:\n",
+    "#     X = X_old.copy()\n",
+    "#     preproccessing = preproccessing()\n",
+    "#     X = preproccessing.fit_transform(X)\n",
+    "#     train(GradientBoostingRegressor(),X,X,y,y,name=f'{preproccessing}-preproccessing')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 34,
+   "id": "dc4e18e1-db0c-4674-9223-3f58d448f5ca",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 35,
+   "id": "43c60d85-74d2-4483-89ab-a9ef94a8b00c",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 36,
+   "id": "6dd96d0f-dc01-4f26-863c-fbd6525cccf2",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=True,select_k_best=False,rfecv=False)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=True-select_k_best=False-rfecv=False-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 37,
+   "id": "e01142e6-681e-44bc-8e7f-26381af4020d",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 38,
+   "id": "d34c8787-9ef7-41ec-92f7-647484d7e207",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 39,
+   "id": "b583e5fa-ffea-4e58-a19e-8294848640a5",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=False,select_k_best=False,rfecv=True)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=False-select_k_best=False-rfecv=True-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 40,
+   "id": "e9deaaed-087d-4592-8a5e-dbaca167b3a6",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "fa280dec-4410-4986-9319-de078331dfe7",
+   "metadata": {},
+   "source": [
+    "## Modelling"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "e9cb2055-bbee-41cc-a543-c1ae6b8df0d9",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mranuga-d\u001b[0m (use `wandb login --relogin` to force relogin)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">KNeighborsRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ybwx41i\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ybwx41i</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145817-1ybwx41i</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:1ybwx41i) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 244382<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.08MB of 0.08MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.98912781156…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145817-1ybwx41i/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145817-1ybwx41i/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>23969.50863</td></tr><tr><td>mean_squared_error</td><td>1422933124.74874</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629883704</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>23969.50863</td></tr><tr><td>val mean_squared_error</td><td>1422933124.74874</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">KNeighborsRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ybwx41i\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ybwx41i</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:1ybwx41i). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">LogisticRegression</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/36ulnz8q\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/36ulnz8q</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145824-36ulnz8q</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:36ulnz8q) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 244650<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.11MB of 0.13MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.82137045485…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145824-36ulnz8q/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145824-36ulnz8q/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>37421.43288</td></tr><tr><td>mean_squared_error</td><td>3265112959.47808</td></tr><tr><td>_runtime</td><td>9</td></tr><tr><td>_timestamp</td><td>1629883731</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>37421.43288</td></tr><tr><td>val mean_squared_error</td><td>3265112959.47808</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">LogisticRegression</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/36ulnz8q\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/36ulnz8q</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:36ulnz8q). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">LogisticRegressionCV</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3ennlia9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3ennlia9</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145851-3ennlia9</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/_split.py:668: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=5.\n",
+      "  % (min_groups, self.n_splits)), UserWarning)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
+      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
+      "\n",
+      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
+      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
+      "Please also refer to the documentation for alternative solver options:\n",
+      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
+      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n",
+      "/home/indika/anaconda3/lib/python3.7/site-packages/numpy/core/_asarray.py:83: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
+      "  return array(a, dtype, copy=False, order=order)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:3ennlia9) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 244908<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.21MB of 0.21MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145851-3ennlia9/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_145851-3ennlia9/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 7 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">LogisticRegressionCV</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3ennlia9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3ennlia9</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:3ennlia9). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">DecisionTreeRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3sxjbq9h\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3sxjbq9h</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150047-3sxjbq9h</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:3sxjbq9h) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 245853<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150047-3sxjbq9h/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150047-3sxjbq9h/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>0.0</td></tr><tr><td>mean_squared_error</td><td>0.0</td></tr><tr><td>_runtime</td><td>6</td></tr><tr><td>_timestamp</td><td>1629883865</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>0.0</td></tr><tr><td>val mean_squared_error</td><td>0.0</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">DecisionTreeRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3sxjbq9h\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3sxjbq9h</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:3sxjbq9h). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">GradientBoostingRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/dv3o10co\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/dv3o10co</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150105-dv3o10co</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:dv3o10co) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 246198<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.07MB of 0.07MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150105-dv3o10co/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150105-dv3o10co/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>10827.12407</td></tr><tr><td>mean_squared_error</td><td>226354142.17452</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629883888</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>10827.12407</td></tr><tr><td>val mean_squared_error</td><td>226354142.17452</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">GradientBoostingRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/dv3o10co\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/dv3o10co</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:dv3o10co). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">AdaBoostRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/63p2daah\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/63p2daah</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150128-63p2daah</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:63p2daah) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 246466<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150128-63p2daah/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150128-63p2daah/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>21974.4248</td></tr><tr><td>mean_squared_error</td><td>801033376.33587</td></tr><tr><td>_runtime</td><td>6</td></tr><tr><td>_timestamp</td><td>1629883909</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>21974.4248</td></tr><tr><td>val mean_squared_error</td><td>801033376.33587</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">AdaBoostRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/63p2daah\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/63p2daah</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:63p2daah). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">RandomForestRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2l4ygz7m\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2l4ygz7m</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150149-2l4ygz7m</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:2l4ygz7m) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 246696<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.09MB of 0.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.99082811625…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150149-2l4ygz7m/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150149-2l4ygz7m/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>6448.70843</td></tr><tr><td>mean_squared_error</td><td>116758973.57947</td></tr><tr><td>_runtime</td><td>8</td></tr><tr><td>_timestamp</td><td>1629883932</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>6448.70843</td></tr><tr><td>val mean_squared_error</td><td>116758973.57947</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">RandomForestRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2l4ygz7m\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2l4ygz7m</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:2l4ygz7m). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">BaggingRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3s316oe0\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3s316oe0</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150212-3s316oe0</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:3s316oe0) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 246967<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150212-3s316oe0/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150212-3s316oe0/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>7577.59952</td></tr><tr><td>mean_squared_error</td><td>174444307.79175</td></tr><tr><td>_runtime</td><td>9</td></tr><tr><td>_timestamp</td><td>1629883955</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>7577.59952</td></tr><tr><td>val mean_squared_error</td><td>174444307.79175</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">BaggingRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3s316oe0\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/3s316oe0</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:3s316oe0). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
     },
     {
      "data": {
       "text/html": [
        "\n",
        "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-without-fe</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">GaussianNB</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
        "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47</code><br/><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1i4ozi7o\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1i4ozi7o</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150235-1i4ozi7o</code><br/><br/>\n",
        "            "
       ],
       "text/plain": [
@@ -639,39 +2340,156 @@
     },
     {
      "data": {
+      "text/html": [
+       "Finishing last run (ID:1i4ozi7o) before initializing another..."
+      ],
       "text/plain": [
-       "GradientBoostingRegressor()"
+       "<IPython.core.display.HTML object>"
       ]
      },
-     "execution_count": 21,
      "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 22,
-   "id": "849a2c64-9035-4095-bd5c-06cf954803c0",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "X_old = X.copy()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "4a327805-8a37-4c22-880d-2154022c6900",
-   "metadata": {},
-   "outputs": [
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<br/>Waiting for W&B process to finish, PID 247183<br/>Program ended successfully."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value=' 0.09MB of 0.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150235-1i4ozi7o/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150235-1i4ozi7o/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>4702.39726</td></tr><tr><td>mean_squared_error</td><td>171419089.0411</td></tr><tr><td>_runtime</td><td>6</td></tr><tr><td>_timestamp</td><td>1629883971</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>4702.39726</td></tr><tr><td>val mean_squared_error</td><td>171419089.0411</td></tr></table>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">GaussianNB</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1i4ozi7o\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1i4ozi7o</a><br/>\n",
+       "                "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "...Successfully finished last run (ID:1i4ozi7o). Initializing new run:<br/><br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "\n",
+       "                Tracking run with wandb version 0.12.0<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">ExtraTreesRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ksgb1tb\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ksgb1tb</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150252-1ksgb1tb</code><br/><br/>\n",
+       "            "
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
     {
      "data": {
       "text/html": [
-       "Finishing last run (ID:2va7zg47) before initializing another..."
+       "Finishing last run (ID:1ksgb1tb) before initializing another..."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -683,7 +2501,7 @@
     {
      "data": {
       "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 107778<br/>Program ended successfully."
+       "<br/>Waiting for W&B process to finish, PID 247393<br/>Program ended successfully."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -700,7 +2518,7 @@
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.04MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
       ]
      },
      "metadata": {},
@@ -709,7 +2527,7 @@
     {
      "data": {
       "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug.log</code>"
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150252-1ksgb1tb/logs/debug.log</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -721,7 +2539,7 @@
     {
      "data": {
       "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug-internal.log</code>"
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150252-1ksgb1tb/logs/debug-internal.log</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -736,7 +2554,7 @@
        "<h3>Run summary:</h3><br/><style>\n",
        "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
        "    </style><table class=\"wandb\">\n",
-       "<tr><td>mean_absolute_error</td><td>10827.12407</td></tr><tr><td>mean_squared_error</td><td>226354142.17452</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629869143</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>10827.12407</td></tr><tr><td>val mean_squared_error</td><td>226354142.17452</td></tr></table>"
+       "<tr><td>mean_absolute_error</td><td>0.0</td></tr><tr><td>mean_squared_error</td><td>0.0</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629883994</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>0.0</td></tr><tr><td>val mean_squared_error</td><td>0.0</td></tr></table>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -763,7 +2581,7 @@
     {
      "data": {
       "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
+       "Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -776,7 +2594,7 @@
      "data": {
       "text/html": [
        "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-without-fe</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">ExtraTreesRegressor</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ksgb1tb\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/1ksgb1tb</a><br/>\n",
        "                "
       ],
       "text/plain": [
@@ -789,7 +2607,7 @@
     {
      "data": {
       "text/html": [
-       "...Successfully finished last run (ID:2va7zg47). Initializing new run:<br/><br/>"
+       "...Successfully finished last run (ID:1ksgb1tb). Initializing new run:<br/><br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -803,10 +2621,10 @@
       "text/html": [
        "\n",
        "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">CatBoost</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
        "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom</code><br/><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/27jt3eyk\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/27jt3eyk</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150314-27jt3eyk</code><br/><br/>\n",
        "            "
       ],
       "text/plain": [
@@ -816,10 +2634,1017 @@
      "metadata": {},
      "output_type": "display_data"
     },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Learning rate set to 0.04175\n",
+      "0:\tlearn: 77253.4120105\ttotal: 50.6ms\tremaining: 50.6s\n",
+      "1:\tlearn: 75126.2315753\ttotal: 52.8ms\tremaining: 26.4s\n",
+      "2:\tlearn: 73334.8425187\ttotal: 54.6ms\tremaining: 18.2s\n",
+      "3:\tlearn: 71516.5156887\ttotal: 55.8ms\tremaining: 13.9s\n",
+      "4:\tlearn: 69677.4527552\ttotal: 57ms\tremaining: 11.3s\n",
+      "5:\tlearn: 67987.2714169\ttotal: 58.1ms\tremaining: 9.63s\n",
+      "6:\tlearn: 66182.9278829\ttotal: 59.3ms\tremaining: 8.41s\n",
+      "7:\tlearn: 64663.0575975\ttotal: 60.4ms\tremaining: 7.5s\n",
+      "8:\tlearn: 63037.8228057\ttotal: 61.6ms\tremaining: 6.79s\n",
+      "9:\tlearn: 61534.0939774\ttotal: 62.7ms\tremaining: 6.21s\n",
+      "10:\tlearn: 60010.6983004\ttotal: 63.9ms\tremaining: 5.74s\n",
+      "11:\tlearn: 58803.4989104\ttotal: 64.7ms\tremaining: 5.33s\n",
+      "12:\tlearn: 57358.3663402\ttotal: 65.9ms\tremaining: 5s\n",
+      "13:\tlearn: 56094.7111427\ttotal: 67ms\tremaining: 4.72s\n",
+      "14:\tlearn: 54835.9745769\ttotal: 68.1ms\tremaining: 4.47s\n",
+      "15:\tlearn: 53808.3736601\ttotal: 69.2ms\tremaining: 4.26s\n",
+      "16:\tlearn: 52589.5688537\ttotal: 70.3ms\tremaining: 4.07s\n",
+      "17:\tlearn: 51625.5887706\ttotal: 71.2ms\tremaining: 3.88s\n",
+      "18:\tlearn: 50618.6783929\ttotal: 72.3ms\tremaining: 3.73s\n",
+      "19:\tlearn: 49605.1479189\ttotal: 73.4ms\tremaining: 3.6s\n",
+      "20:\tlearn: 48585.2919612\ttotal: 74.5ms\tremaining: 3.48s\n",
+      "21:\tlearn: 47671.4188557\ttotal: 75.7ms\tremaining: 3.37s\n",
+      "22:\tlearn: 46872.5327867\ttotal: 76.9ms\tremaining: 3.27s\n",
+      "23:\tlearn: 45964.1542723\ttotal: 78ms\tremaining: 3.17s\n",
+      "24:\tlearn: 45063.4471889\ttotal: 79.2ms\tremaining: 3.09s\n",
+      "25:\tlearn: 44269.9279181\ttotal: 80.3ms\tremaining: 3.01s\n",
+      "26:\tlearn: 43442.0003544\ttotal: 81.5ms\tremaining: 2.94s\n",
+      "27:\tlearn: 42677.1291671\ttotal: 82.6ms\tremaining: 2.87s\n",
+      "28:\tlearn: 42005.6995409\ttotal: 83.9ms\tremaining: 2.81s\n",
+      "29:\tlearn: 41287.8556689\ttotal: 85.3ms\tremaining: 2.76s\n",
+      "30:\tlearn: 40581.4401519\ttotal: 86.6ms\tremaining: 2.71s\n",
+      "31:\tlearn: 39945.1085948\ttotal: 87.9ms\tremaining: 2.66s\n",
+      "32:\tlearn: 39277.6815760\ttotal: 89.6ms\tremaining: 2.63s\n",
+      "33:\tlearn: 38620.2502146\ttotal: 91.3ms\tremaining: 2.59s\n",
+      "34:\tlearn: 38103.6487030\ttotal: 92.4ms\tremaining: 2.55s\n",
+      "35:\tlearn: 37588.5034856\ttotal: 93.8ms\tremaining: 2.51s\n",
+      "36:\tlearn: 37039.7950405\ttotal: 94.9ms\tremaining: 2.47s\n",
+      "37:\tlearn: 36517.5608260\ttotal: 96.1ms\tremaining: 2.43s\n",
+      "38:\tlearn: 36014.7072507\ttotal: 97.2ms\tremaining: 2.39s\n",
+      "39:\tlearn: 35571.7907674\ttotal: 98.4ms\tremaining: 2.36s\n",
+      "40:\tlearn: 35128.3609481\ttotal: 99.5ms\tremaining: 2.33s\n",
+      "41:\tlearn: 34670.2588273\ttotal: 101ms\tremaining: 2.29s\n",
+      "42:\tlearn: 34265.4339325\ttotal: 103ms\tremaining: 2.29s\n",
+      "43:\tlearn: 33790.7927430\ttotal: 104ms\tremaining: 2.26s\n",
+      "44:\tlearn: 33435.1222398\ttotal: 105ms\tremaining: 2.23s\n",
+      "45:\tlearn: 32959.5055094\ttotal: 106ms\tremaining: 2.21s\n",
+      "46:\tlearn: 32605.4932062\ttotal: 108ms\tremaining: 2.18s\n",
+      "47:\tlearn: 32214.8180586\ttotal: 109ms\tremaining: 2.16s\n",
+      "48:\tlearn: 31848.8856923\ttotal: 110ms\tremaining: 2.13s\n",
+      "49:\tlearn: 31441.9857799\ttotal: 111ms\tremaining: 2.11s\n",
+      "50:\tlearn: 31095.1235317\ttotal: 112ms\tremaining: 2.09s\n",
+      "51:\tlearn: 30796.5477663\ttotal: 113ms\tremaining: 2.06s\n",
+      "52:\tlearn: 30429.2432778\ttotal: 114ms\tremaining: 2.04s\n",
+      "53:\tlearn: 30121.5092152\ttotal: 116ms\tremaining: 2.02s\n",
+      "54:\tlearn: 29861.4661155\ttotal: 117ms\tremaining: 2s\n",
+      "55:\tlearn: 29545.1354546\ttotal: 118ms\tremaining: 1.99s\n",
+      "56:\tlearn: 29269.4031866\ttotal: 119ms\tremaining: 1.97s\n",
+      "57:\tlearn: 28970.7635492\ttotal: 120ms\tremaining: 1.95s\n",
+      "58:\tlearn: 28707.3742610\ttotal: 121ms\tremaining: 1.93s\n",
+      "59:\tlearn: 28440.1931968\ttotal: 122ms\tremaining: 1.92s\n",
+      "60:\tlearn: 28162.8708024\ttotal: 124ms\tremaining: 1.9s\n",
+      "61:\tlearn: 27909.5196665\ttotal: 125ms\tremaining: 1.89s\n",
+      "62:\tlearn: 27656.7093846\ttotal: 126ms\tremaining: 1.87s\n",
+      "63:\tlearn: 27417.0847713\ttotal: 127ms\tremaining: 1.86s\n",
+      "64:\tlearn: 27208.8452926\ttotal: 128ms\tremaining: 1.84s\n",
+      "65:\tlearn: 27010.4567475\ttotal: 129ms\tremaining: 1.83s\n",
+      "66:\tlearn: 26789.9671540\ttotal: 130ms\tremaining: 1.81s\n",
+      "67:\tlearn: 26587.4079384\ttotal: 131ms\tremaining: 1.8s\n",
+      "68:\tlearn: 26435.0078515\ttotal: 133ms\tremaining: 1.79s\n",
+      "69:\tlearn: 26232.0319428\ttotal: 134ms\tremaining: 1.77s\n",
+      "70:\tlearn: 26056.7895950\ttotal: 135ms\tremaining: 1.76s\n",
+      "71:\tlearn: 25855.4511514\ttotal: 136ms\tremaining: 1.75s\n",
+      "72:\tlearn: 25680.0341635\ttotal: 137ms\tremaining: 1.74s\n",
+      "73:\tlearn: 25465.6610498\ttotal: 138ms\tremaining: 1.73s\n",
+      "74:\tlearn: 25298.6442104\ttotal: 139ms\tremaining: 1.72s\n",
+      "75:\tlearn: 25121.7738504\ttotal: 140ms\tremaining: 1.71s\n",
+      "76:\tlearn: 24947.7738334\ttotal: 142ms\tremaining: 1.7s\n",
+      "77:\tlearn: 24786.9787686\ttotal: 143ms\tremaining: 1.69s\n",
+      "78:\tlearn: 24606.1868911\ttotal: 144ms\tremaining: 1.68s\n",
+      "79:\tlearn: 24426.0573643\ttotal: 145ms\tremaining: 1.67s\n",
+      "80:\tlearn: 24250.3700477\ttotal: 146ms\tremaining: 1.66s\n",
+      "81:\tlearn: 24092.2400462\ttotal: 147ms\tremaining: 1.65s\n",
+      "82:\tlearn: 23923.1763068\ttotal: 148ms\tremaining: 1.64s\n",
+      "83:\tlearn: 23755.9937139\ttotal: 149ms\tremaining: 1.63s\n",
+      "84:\tlearn: 23589.6095473\ttotal: 151ms\tremaining: 1.62s\n",
+      "85:\tlearn: 23465.8972071\ttotal: 152ms\tremaining: 1.61s\n",
+      "86:\tlearn: 23341.3603647\ttotal: 153ms\tremaining: 1.6s\n",
+      "87:\tlearn: 23253.1154981\ttotal: 154ms\tremaining: 1.6s\n",
+      "88:\tlearn: 23130.8119195\ttotal: 155ms\tremaining: 1.59s\n",
+      "89:\tlearn: 23018.9883223\ttotal: 156ms\tremaining: 1.58s\n",
+      "90:\tlearn: 22898.5113244\ttotal: 158ms\tremaining: 1.57s\n",
+      "91:\tlearn: 22787.4669008\ttotal: 159ms\tremaining: 1.56s\n",
+      "92:\tlearn: 22690.8217532\ttotal: 160ms\tremaining: 1.56s\n",
+      "93:\tlearn: 22598.9752233\ttotal: 161ms\tremaining: 1.55s\n",
+      "94:\tlearn: 22499.2472066\ttotal: 162ms\tremaining: 1.54s\n",
+      "95:\tlearn: 22407.4804150\ttotal: 163ms\tremaining: 1.53s\n",
+      "96:\tlearn: 22326.1367979\ttotal: 164ms\tremaining: 1.53s\n",
+      "97:\tlearn: 22237.7099122\ttotal: 165ms\tremaining: 1.52s\n",
+      "98:\tlearn: 22173.7522192\ttotal: 166ms\tremaining: 1.51s\n",
+      "99:\tlearn: 22062.6320815\ttotal: 168ms\tremaining: 1.51s\n",
+      "100:\tlearn: 21982.5777371\ttotal: 169ms\tremaining: 1.5s\n",
+      "101:\tlearn: 21890.9102837\ttotal: 170ms\tremaining: 1.5s\n",
+      "102:\tlearn: 21808.6712327\ttotal: 171ms\tremaining: 1.49s\n",
+      "103:\tlearn: 21707.4258533\ttotal: 172ms\tremaining: 1.48s\n",
+      "104:\tlearn: 21602.2386142\ttotal: 173ms\tremaining: 1.48s\n",
+      "105:\tlearn: 21537.1590058\ttotal: 174ms\tremaining: 1.47s\n",
+      "106:\tlearn: 21475.3126049\ttotal: 175ms\tremaining: 1.46s\n",
+      "107:\tlearn: 21403.9143591\ttotal: 176ms\tremaining: 1.46s\n",
+      "108:\tlearn: 21321.6513657\ttotal: 178ms\tremaining: 1.45s\n",
+      "109:\tlearn: 21249.7394811\ttotal: 179ms\tremaining: 1.45s\n",
+      "110:\tlearn: 21184.2611784\ttotal: 180ms\tremaining: 1.44s\n",
+      "111:\tlearn: 21116.4207566\ttotal: 181ms\tremaining: 1.44s\n",
+      "112:\tlearn: 21034.9991226\ttotal: 182ms\tremaining: 1.43s\n",
+      "113:\tlearn: 20990.2244015\ttotal: 183ms\tremaining: 1.42s\n",
+      "114:\tlearn: 20918.0680507\ttotal: 184ms\tremaining: 1.42s\n",
+      "115:\tlearn: 20867.7713539\ttotal: 186ms\tremaining: 1.41s\n",
+      "116:\tlearn: 20803.9194499\ttotal: 187ms\tremaining: 1.41s\n",
+      "117:\tlearn: 20705.4907764\ttotal: 188ms\tremaining: 1.4s\n",
+      "118:\tlearn: 20646.9421135\ttotal: 189ms\tremaining: 1.4s\n",
+      "119:\tlearn: 20593.5760021\ttotal: 191ms\tremaining: 1.4s\n",
+      "120:\tlearn: 20519.0241688\ttotal: 192ms\tremaining: 1.39s\n",
+      "121:\tlearn: 20451.6547699\ttotal: 193ms\tremaining: 1.39s\n",
+      "122:\tlearn: 20378.6782219\ttotal: 194ms\tremaining: 1.39s\n",
+      "123:\tlearn: 20319.3303337\ttotal: 196ms\tremaining: 1.38s\n",
+      "124:\tlearn: 20275.7440427\ttotal: 197ms\tremaining: 1.38s\n",
+      "125:\tlearn: 20219.4273104\ttotal: 198ms\tremaining: 1.37s\n",
+      "126:\tlearn: 20154.9728187\ttotal: 199ms\tremaining: 1.37s\n",
+      "127:\tlearn: 20088.9137715\ttotal: 200ms\tremaining: 1.36s\n",
+      "128:\tlearn: 20019.4385091\ttotal: 202ms\tremaining: 1.36s\n",
+      "129:\tlearn: 19960.8619927\ttotal: 203ms\tremaining: 1.36s\n",
+      "130:\tlearn: 19923.6555048\ttotal: 204ms\tremaining: 1.35s\n",
+      "131:\tlearn: 19880.4963382\ttotal: 205ms\tremaining: 1.35s\n",
+      "132:\tlearn: 19830.6800653\ttotal: 207ms\tremaining: 1.35s\n",
+      "133:\tlearn: 19782.1216703\ttotal: 208ms\tremaining: 1.34s\n",
+      "134:\tlearn: 19744.6652594\ttotal: 209ms\tremaining: 1.34s\n",
+      "135:\tlearn: 19706.9266553\ttotal: 210ms\tremaining: 1.34s\n",
+      "136:\tlearn: 19652.8050158\ttotal: 212ms\tremaining: 1.33s\n",
+      "137:\tlearn: 19618.2839231\ttotal: 213ms\tremaining: 1.33s\n",
+      "138:\tlearn: 19567.8710954\ttotal: 214ms\tremaining: 1.32s\n",
+      "139:\tlearn: 19510.8543023\ttotal: 215ms\tremaining: 1.32s\n",
+      "140:\tlearn: 19446.2287690\ttotal: 216ms\tremaining: 1.32s\n",
+      "141:\tlearn: 19388.8281182\ttotal: 218ms\tremaining: 1.31s\n",
+      "142:\tlearn: 19343.7285519\ttotal: 219ms\tremaining: 1.31s\n",
+      "143:\tlearn: 19322.9366139\ttotal: 220ms\tremaining: 1.31s\n",
+      "144:\tlearn: 19261.9475568\ttotal: 221ms\tremaining: 1.3s\n",
+      "145:\tlearn: 19225.8227315\ttotal: 222ms\tremaining: 1.3s\n",
+      "146:\tlearn: 19185.9150158\ttotal: 223ms\tremaining: 1.3s\n",
+      "147:\tlearn: 19140.5626477\ttotal: 225ms\tremaining: 1.29s\n",
+      "148:\tlearn: 19101.7840315\ttotal: 226ms\tremaining: 1.29s\n",
+      "149:\tlearn: 19079.0728326\ttotal: 227ms\tremaining: 1.28s\n",
+      "150:\tlearn: 19010.2332584\ttotal: 228ms\tremaining: 1.28s\n",
+      "151:\tlearn: 18978.0513019\ttotal: 230ms\tremaining: 1.28s\n",
+      "152:\tlearn: 18923.2759494\ttotal: 232ms\tremaining: 1.28s\n",
+      "153:\tlearn: 18872.7174473\ttotal: 233ms\tremaining: 1.28s\n",
+      "154:\tlearn: 18831.3570495\ttotal: 234ms\tremaining: 1.27s\n",
+      "155:\tlearn: 18787.3490362\ttotal: 235ms\tremaining: 1.27s\n",
+      "156:\tlearn: 18740.9907960\ttotal: 236ms\tremaining: 1.27s\n",
+      "157:\tlearn: 18708.7429129\ttotal: 237ms\tremaining: 1.26s\n",
+      "158:\tlearn: 18688.0049045\ttotal: 239ms\tremaining: 1.26s\n",
+      "159:\tlearn: 18645.4549849\ttotal: 240ms\tremaining: 1.26s\n",
+      "160:\tlearn: 18596.9438575\ttotal: 241ms\tremaining: 1.25s\n",
+      "161:\tlearn: 18544.9391056\ttotal: 242ms\tremaining: 1.25s\n",
+      "162:\tlearn: 18508.9250032\ttotal: 243ms\tremaining: 1.25s\n",
+      "163:\tlearn: 18467.9081536\ttotal: 244ms\tremaining: 1.24s\n",
+      "164:\tlearn: 18442.3868172\ttotal: 245ms\tremaining: 1.24s\n",
+      "165:\tlearn: 18408.3095387\ttotal: 247ms\tremaining: 1.24s\n",
+      "166:\tlearn: 18384.7924275\ttotal: 248ms\tremaining: 1.24s\n",
+      "167:\tlearn: 18353.5215072\ttotal: 249ms\tremaining: 1.23s\n",
+      "168:\tlearn: 18318.2725231\ttotal: 250ms\tremaining: 1.23s\n",
+      "169:\tlearn: 18280.9473196\ttotal: 251ms\tremaining: 1.23s\n",
+      "170:\tlearn: 18249.4284589\ttotal: 252ms\tremaining: 1.22s\n",
+      "171:\tlearn: 18219.2376639\ttotal: 253ms\tremaining: 1.22s\n",
+      "172:\tlearn: 18179.9512846\ttotal: 254ms\tremaining: 1.22s\n",
+      "173:\tlearn: 18168.6499431\ttotal: 255ms\tremaining: 1.21s\n",
+      "174:\tlearn: 18144.0208351\ttotal: 257ms\tremaining: 1.21s\n",
+      "175:\tlearn: 18109.4502060\ttotal: 258ms\tremaining: 1.21s\n",
+      "176:\tlearn: 18079.7743534\ttotal: 259ms\tremaining: 1.2s\n",
+      "177:\tlearn: 18010.4181581\ttotal: 260ms\tremaining: 1.2s\n",
+      "178:\tlearn: 17976.9053982\ttotal: 261ms\tremaining: 1.2s\n",
+      "179:\tlearn: 17936.9539363\ttotal: 262ms\tremaining: 1.19s\n",
+      "180:\tlearn: 17882.3190779\ttotal: 263ms\tremaining: 1.19s\n",
+      "181:\tlearn: 17859.0321956\ttotal: 264ms\tremaining: 1.19s\n",
+      "182:\tlearn: 17812.3961603\ttotal: 265ms\tremaining: 1.18s\n",
+      "183:\tlearn: 17798.3132171\ttotal: 266ms\tremaining: 1.18s\n",
+      "184:\tlearn: 17778.5932682\ttotal: 268ms\tremaining: 1.18s\n",
+      "185:\tlearn: 17756.0364465\ttotal: 269ms\tremaining: 1.18s\n",
+      "186:\tlearn: 17736.1834861\ttotal: 270ms\tremaining: 1.17s\n",
+      "187:\tlearn: 17711.0993350\ttotal: 271ms\tremaining: 1.17s\n",
+      "188:\tlearn: 17689.2119806\ttotal: 272ms\tremaining: 1.17s\n",
+      "189:\tlearn: 17676.6634608\ttotal: 273ms\tremaining: 1.16s\n",
+      "190:\tlearn: 17659.8217341\ttotal: 274ms\tremaining: 1.16s\n",
+      "191:\tlearn: 17594.8900182\ttotal: 275ms\tremaining: 1.16s\n",
+      "192:\tlearn: 17564.5694647\ttotal: 276ms\tremaining: 1.16s\n",
+      "193:\tlearn: 17548.6119015\ttotal: 277ms\tremaining: 1.15s\n",
+      "194:\tlearn: 17536.5434047\ttotal: 279ms\tremaining: 1.15s\n",
+      "195:\tlearn: 17476.6855403\ttotal: 280ms\tremaining: 1.15s\n",
+      "196:\tlearn: 17442.6308401\ttotal: 282ms\tremaining: 1.15s\n",
+      "197:\tlearn: 17413.5495612\ttotal: 284ms\tremaining: 1.15s\n",
+      "198:\tlearn: 17371.3719048\ttotal: 285ms\tremaining: 1.15s\n",
+      "199:\tlearn: 17330.1779345\ttotal: 286ms\tremaining: 1.14s\n",
+      "200:\tlearn: 17296.5583885\ttotal: 287ms\tremaining: 1.14s\n",
+      "201:\tlearn: 17245.8748309\ttotal: 288ms\tremaining: 1.14s\n",
+      "202:\tlearn: 17223.8429385\ttotal: 289ms\tremaining: 1.14s\n",
+      "203:\tlearn: 17204.6869901\ttotal: 290ms\tremaining: 1.13s\n",
+      "204:\tlearn: 17157.3860495\ttotal: 291ms\tremaining: 1.13s\n",
+      "205:\tlearn: 17121.4376484\ttotal: 292ms\tremaining: 1.13s\n",
+      "206:\tlearn: 17083.1013866\ttotal: 294ms\tremaining: 1.12s\n",
+      "207:\tlearn: 17045.7691172\ttotal: 295ms\tremaining: 1.12s\n",
+      "208:\tlearn: 17033.3949697\ttotal: 296ms\tremaining: 1.12s\n",
+      "209:\tlearn: 16985.5047592\ttotal: 297ms\tremaining: 1.12s\n",
+      "210:\tlearn: 16943.8798965\ttotal: 298ms\tremaining: 1.11s\n",
+      "211:\tlearn: 16904.6694651\ttotal: 299ms\tremaining: 1.11s\n",
+      "212:\tlearn: 16862.7774843\ttotal: 300ms\tremaining: 1.11s\n",
+      "213:\tlearn: 16848.3591871\ttotal: 302ms\tremaining: 1.11s\n",
+      "214:\tlearn: 16828.7540753\ttotal: 303ms\tremaining: 1.1s\n",
+      "215:\tlearn: 16814.4766392\ttotal: 304ms\tremaining: 1.1s\n",
+      "216:\tlearn: 16749.1951903\ttotal: 305ms\tremaining: 1.1s\n",
+      "217:\tlearn: 16698.9629940\ttotal: 306ms\tremaining: 1.1s\n",
+      "218:\tlearn: 16688.7291303\ttotal: 307ms\tremaining: 1.09s\n",
+      "219:\tlearn: 16671.2430462\ttotal: 308ms\tremaining: 1.09s\n",
+      "220:\tlearn: 16652.8448607\ttotal: 309ms\tremaining: 1.09s\n",
+      "221:\tlearn: 16630.7141839\ttotal: 310ms\tremaining: 1.09s\n",
+      "222:\tlearn: 16609.4069906\ttotal: 311ms\tremaining: 1.08s\n",
+      "223:\tlearn: 16591.5779025\ttotal: 312ms\tremaining: 1.08s\n",
+      "224:\tlearn: 16567.9634540\ttotal: 314ms\tremaining: 1.08s\n",
+      "225:\tlearn: 16551.4515996\ttotal: 315ms\tremaining: 1.08s\n",
+      "226:\tlearn: 16497.8760024\ttotal: 316ms\tremaining: 1.07s\n",
+      "227:\tlearn: 16481.1509754\ttotal: 317ms\tremaining: 1.07s\n",
+      "228:\tlearn: 16451.2350826\ttotal: 318ms\tremaining: 1.07s\n",
+      "229:\tlearn: 16426.6615880\ttotal: 319ms\tremaining: 1.07s\n",
+      "230:\tlearn: 16387.3971532\ttotal: 320ms\tremaining: 1.07s\n",
+      "231:\tlearn: 16369.9282195\ttotal: 321ms\tremaining: 1.06s\n",
+      "232:\tlearn: 16346.2371097\ttotal: 322ms\tremaining: 1.06s\n",
+      "233:\tlearn: 16329.5360171\ttotal: 324ms\tremaining: 1.06s\n",
+      "234:\tlearn: 16301.8213245\ttotal: 325ms\tremaining: 1.06s\n",
+      "235:\tlearn: 16261.6256919\ttotal: 326ms\tremaining: 1.05s\n",
+      "236:\tlearn: 16252.1101365\ttotal: 327ms\tremaining: 1.05s\n",
+      "237:\tlearn: 16226.8483469\ttotal: 328ms\tremaining: 1.05s\n",
+      "238:\tlearn: 16192.1545521\ttotal: 329ms\tremaining: 1.05s\n",
+      "239:\tlearn: 16177.5659223\ttotal: 330ms\tremaining: 1.04s\n",
+      "240:\tlearn: 16153.0751982\ttotal: 331ms\tremaining: 1.04s\n",
+      "241:\tlearn: 16131.3357314\ttotal: 332ms\tremaining: 1.04s\n",
+      "242:\tlearn: 16098.2908926\ttotal: 333ms\tremaining: 1.04s\n",
+      "243:\tlearn: 16078.0570419\ttotal: 335ms\tremaining: 1.04s\n",
+      "244:\tlearn: 16055.7269945\ttotal: 336ms\tremaining: 1.03s\n",
+      "245:\tlearn: 16032.1344681\ttotal: 337ms\tremaining: 1.03s\n",
+      "246:\tlearn: 15997.2319989\ttotal: 338ms\tremaining: 1.03s\n",
+      "247:\tlearn: 15974.5239529\ttotal: 339ms\tremaining: 1.03s\n",
+      "248:\tlearn: 15951.2860600\ttotal: 340ms\tremaining: 1.02s\n",
+      "249:\tlearn: 15922.1150112\ttotal: 341ms\tremaining: 1.02s\n",
+      "250:\tlearn: 15885.1575994\ttotal: 342ms\tremaining: 1.02s\n",
+      "251:\tlearn: 15853.9334166\ttotal: 343ms\tremaining: 1.02s\n",
+      "252:\tlearn: 15842.3719221\ttotal: 345ms\tremaining: 1.02s\n",
+      "253:\tlearn: 15833.8455510\ttotal: 346ms\tremaining: 1.01s\n",
+      "254:\tlearn: 15788.8855126\ttotal: 347ms\tremaining: 1.01s\n",
+      "255:\tlearn: 15761.6190111\ttotal: 348ms\tremaining: 1.01s\n",
+      "256:\tlearn: 15755.3889040\ttotal: 349ms\tremaining: 1.01s\n",
+      "257:\tlearn: 15746.1724564\ttotal: 350ms\tremaining: 1.01s\n",
+      "258:\tlearn: 15736.3750141\ttotal: 351ms\tremaining: 1s\n",
+      "259:\tlearn: 15695.6524145\ttotal: 352ms\tremaining: 1s\n",
+      "260:\tlearn: 15684.2529117\ttotal: 353ms\tremaining: 1s\n",
+      "261:\tlearn: 15646.7990247\ttotal: 354ms\tremaining: 999ms\n",
+      "262:\tlearn: 15615.2297673\ttotal: 356ms\tremaining: 996ms\n",
+      "263:\tlearn: 15578.3892577\ttotal: 357ms\tremaining: 994ms\n",
+      "264:\tlearn: 15574.2747463\ttotal: 358ms\tremaining: 992ms\n",
+      "265:\tlearn: 15567.2711012\ttotal: 359ms\tremaining: 990ms\n",
+      "266:\tlearn: 15514.1336874\ttotal: 360ms\tremaining: 988ms\n",
+      "267:\tlearn: 15474.9415828\ttotal: 361ms\tremaining: 986ms\n",
+      "268:\tlearn: 15460.7920621\ttotal: 362ms\tremaining: 984ms\n",
+      "269:\tlearn: 15442.7777113\ttotal: 363ms\tremaining: 983ms\n",
+      "270:\tlearn: 15436.3537394\ttotal: 365ms\tremaining: 981ms\n",
+      "271:\tlearn: 15416.4454186\ttotal: 366ms\tremaining: 979ms\n",
+      "272:\tlearn: 15391.5907910\ttotal: 367ms\tremaining: 977ms\n",
+      "273:\tlearn: 15387.8349727\ttotal: 368ms\tremaining: 975ms\n",
+      "274:\tlearn: 15356.8685109\ttotal: 369ms\tremaining: 973ms\n",
+      "275:\tlearn: 15324.8947506\ttotal: 370ms\tremaining: 971ms\n",
+      "276:\tlearn: 15299.7982971\ttotal: 371ms\tremaining: 969ms\n",
+      "277:\tlearn: 15265.4011409\ttotal: 372ms\tremaining: 967ms\n",
+      "278:\tlearn: 15256.3180900\ttotal: 373ms\tremaining: 965ms\n",
+      "279:\tlearn: 15219.4428066\ttotal: 375ms\tremaining: 963ms\n",
+      "280:\tlearn: 15172.0567842\ttotal: 376ms\tremaining: 961ms\n",
+      "281:\tlearn: 15153.2248713\ttotal: 377ms\tremaining: 959ms\n",
+      "282:\tlearn: 15127.8306382\ttotal: 378ms\tremaining: 958ms\n",
+      "283:\tlearn: 15106.9621707\ttotal: 379ms\tremaining: 956ms\n",
+      "284:\tlearn: 15070.8735143\ttotal: 380ms\tremaining: 954ms\n",
+      "285:\tlearn: 15064.4267211\ttotal: 381ms\tremaining: 952ms\n",
+      "286:\tlearn: 15054.6943816\ttotal: 386ms\tremaining: 960ms\n",
+      "287:\tlearn: 15011.0082214\ttotal: 388ms\tremaining: 959ms\n",
+      "288:\tlearn: 14986.7260954\ttotal: 389ms\tremaining: 958ms\n",
+      "289:\tlearn: 14956.7896366\ttotal: 391ms\tremaining: 957ms\n",
+      "290:\tlearn: 14930.8325986\ttotal: 393ms\tremaining: 956ms\n",
+      "291:\tlearn: 14907.2938423\ttotal: 394ms\tremaining: 956ms\n",
+      "292:\tlearn: 14872.7043145\ttotal: 396ms\tremaining: 955ms\n",
+      "293:\tlearn: 14863.7625604\ttotal: 397ms\tremaining: 953ms\n",
+      "294:\tlearn: 14838.4306301\ttotal: 398ms\tremaining: 952ms\n",
+      "295:\tlearn: 14814.0037318\ttotal: 400ms\tremaining: 950ms\n",
+      "296:\tlearn: 14801.2410450\ttotal: 401ms\tremaining: 949ms\n",
+      "297:\tlearn: 14774.2757869\ttotal: 402ms\tremaining: 947ms\n",
+      "298:\tlearn: 14749.3547153\ttotal: 404ms\tremaining: 946ms\n",
+      "299:\tlearn: 14707.3870960\ttotal: 405ms\tremaining: 945ms\n",
+      "300:\tlearn: 14683.0479220\ttotal: 406ms\tremaining: 944ms\n",
+      "301:\tlearn: 14652.9722348\ttotal: 408ms\tremaining: 944ms\n",
+      "302:\tlearn: 14616.9715407\ttotal: 410ms\tremaining: 943ms\n",
+      "303:\tlearn: 14594.8058578\ttotal: 411ms\tremaining: 942ms\n",
+      "304:\tlearn: 14567.4111177\ttotal: 412ms\tremaining: 940ms\n",
+      "305:\tlearn: 14541.4267816\ttotal: 414ms\tremaining: 938ms\n",
+      "306:\tlearn: 14511.9287473\ttotal: 415ms\tremaining: 936ms\n",
+      "307:\tlearn: 14503.7289538\ttotal: 416ms\tremaining: 934ms\n",
+      "308:\tlearn: 14473.1588492\ttotal: 417ms\tremaining: 932ms\n",
+      "309:\tlearn: 14444.8492792\ttotal: 418ms\tremaining: 930ms\n",
+      "310:\tlearn: 14416.5885033\ttotal: 419ms\tremaining: 928ms\n",
+      "311:\tlearn: 14395.1594449\ttotal: 420ms\tremaining: 927ms\n",
+      "312:\tlearn: 14358.0560428\ttotal: 422ms\tremaining: 925ms\n",
+      "313:\tlearn: 14334.3699755\ttotal: 423ms\tremaining: 924ms\n",
+      "314:\tlearn: 14314.5649856\ttotal: 424ms\tremaining: 922ms\n",
+      "315:\tlearn: 14287.6021594\ttotal: 425ms\tremaining: 921ms\n",
+      "316:\tlearn: 14266.4556905\ttotal: 427ms\tremaining: 919ms\n",
+      "317:\tlearn: 14246.8853070\ttotal: 428ms\tremaining: 918ms\n",
+      "318:\tlearn: 14209.4835116\ttotal: 429ms\tremaining: 916ms\n",
+      "319:\tlearn: 14182.7104995\ttotal: 430ms\tremaining: 914ms\n",
+      "320:\tlearn: 14162.5027390\ttotal: 431ms\tremaining: 912ms\n",
+      "321:\tlearn: 14134.1030712\ttotal: 432ms\tremaining: 910ms\n",
+      "322:\tlearn: 14109.4028024\ttotal: 433ms\tremaining: 909ms\n",
+      "323:\tlearn: 14085.9550412\ttotal: 549ms\tremaining: 1.14s\n",
+      "324:\tlearn: 14064.3762202\ttotal: 559ms\tremaining: 1.16s\n",
+      "325:\tlearn: 14047.2974402\ttotal: 561ms\tremaining: 1.16s\n",
+      "326:\tlearn: 14028.4867649\ttotal: 563ms\tremaining: 1.16s\n",
+      "327:\tlearn: 14010.7707001\ttotal: 565ms\tremaining: 1.16s\n",
+      "328:\tlearn: 13985.7048824\ttotal: 566ms\tremaining: 1.15s\n",
+      "329:\tlearn: 13959.4192956\ttotal: 567ms\tremaining: 1.15s\n",
+      "330:\tlearn: 13934.4854701\ttotal: 569ms\tremaining: 1.15s\n",
+      "331:\tlearn: 13910.6104624\ttotal: 570ms\tremaining: 1.15s\n",
+      "332:\tlearn: 13890.4928842\ttotal: 571ms\tremaining: 1.14s\n",
+      "333:\tlearn: 13866.4049749\ttotal: 573ms\tremaining: 1.14s\n",
+      "334:\tlearn: 13840.7687645\ttotal: 574ms\tremaining: 1.14s\n",
+      "335:\tlearn: 13828.2670685\ttotal: 575ms\tremaining: 1.14s\n",
+      "336:\tlearn: 13802.2909672\ttotal: 576ms\tremaining: 1.13s\n",
+      "337:\tlearn: 13786.7316279\ttotal: 578ms\tremaining: 1.13s\n",
+      "338:\tlearn: 13764.8425454\ttotal: 579ms\tremaining: 1.13s\n",
+      "339:\tlearn: 13745.6376725\ttotal: 581ms\tremaining: 1.13s\n",
+      "340:\tlearn: 13723.6842566\ttotal: 582ms\tremaining: 1.12s\n",
+      "341:\tlearn: 13698.9449813\ttotal: 583ms\tremaining: 1.12s\n",
+      "342:\tlearn: 13679.9003039\ttotal: 584ms\tremaining: 1.12s\n",
+      "343:\tlearn: 13670.4824690\ttotal: 586ms\tremaining: 1.12s\n",
+      "344:\tlearn: 13668.2677462\ttotal: 587ms\tremaining: 1.11s\n",
+      "345:\tlearn: 13645.2159603\ttotal: 588ms\tremaining: 1.11s\n",
+      "346:\tlearn: 13613.1362073\ttotal: 590ms\tremaining: 1.11s\n",
+      "347:\tlearn: 13599.1991662\ttotal: 591ms\tremaining: 1.11s\n",
+      "348:\tlearn: 13588.8846885\ttotal: 592ms\tremaining: 1.1s\n",
+      "349:\tlearn: 13567.2923037\ttotal: 594ms\tremaining: 1.1s\n",
+      "350:\tlearn: 13543.9735747\ttotal: 595ms\tremaining: 1.1s\n",
+      "351:\tlearn: 13526.9321380\ttotal: 597ms\tremaining: 1.1s\n",
+      "352:\tlearn: 13524.8332007\ttotal: 598ms\tremaining: 1.1s\n",
+      "353:\tlearn: 13503.2900674\ttotal: 600ms\tremaining: 1.09s\n",
+      "354:\tlearn: 13484.7292519\ttotal: 601ms\tremaining: 1.09s\n",
+      "355:\tlearn: 13461.0941302\ttotal: 602ms\tremaining: 1.09s\n",
+      "356:\tlearn: 13442.5390841\ttotal: 603ms\tremaining: 1.09s\n",
+      "357:\tlearn: 13426.4016355\ttotal: 605ms\tremaining: 1.08s\n",
+      "358:\tlearn: 13401.2305315\ttotal: 606ms\tremaining: 1.08s\n",
+      "359:\tlearn: 13377.3239318\ttotal: 607ms\tremaining: 1.08s\n",
+      "360:\tlearn: 13359.7137366\ttotal: 609ms\tremaining: 1.08s\n",
+      "361:\tlearn: 13334.4895810\ttotal: 610ms\tremaining: 1.07s\n",
+      "362:\tlearn: 13323.6990721\ttotal: 611ms\tremaining: 1.07s\n",
+      "363:\tlearn: 13296.9148709\ttotal: 613ms\tremaining: 1.07s\n",
+      "364:\tlearn: 13272.4474116\ttotal: 615ms\tremaining: 1.07s\n",
+      "365:\tlearn: 13243.2915384\ttotal: 616ms\tremaining: 1.07s\n",
+      "366:\tlearn: 13227.5511985\ttotal: 617ms\tremaining: 1.06s\n",
+      "367:\tlearn: 13200.0537609\ttotal: 619ms\tremaining: 1.06s\n",
+      "368:\tlearn: 13178.6644011\ttotal: 620ms\tremaining: 1.06s\n",
+      "369:\tlearn: 13163.4538127\ttotal: 622ms\tremaining: 1.06s\n",
+      "370:\tlearn: 13161.5626780\ttotal: 623ms\tremaining: 1.06s\n",
+      "371:\tlearn: 13135.0294040\ttotal: 624ms\tremaining: 1.05s\n",
+      "372:\tlearn: 13113.1909409\ttotal: 626ms\tremaining: 1.05s\n",
+      "373:\tlearn: 13111.3058531\ttotal: 627ms\tremaining: 1.05s\n",
+      "374:\tlearn: 13075.2854878\ttotal: 628ms\tremaining: 1.05s\n",
+      "375:\tlearn: 13048.8813604\ttotal: 629ms\tremaining: 1.04s\n",
+      "376:\tlearn: 13025.9282349\ttotal: 631ms\tremaining: 1.04s\n",
+      "377:\tlearn: 13003.9506336\ttotal: 632ms\tremaining: 1.04s\n",
+      "378:\tlearn: 12984.7532116\ttotal: 633ms\tremaining: 1.04s\n",
+      "379:\tlearn: 12962.8396967\ttotal: 634ms\tremaining: 1.03s\n",
+      "380:\tlearn: 12942.5003551\ttotal: 636ms\tremaining: 1.03s\n",
+      "381:\tlearn: 12915.2681543\ttotal: 637ms\tremaining: 1.03s\n",
+      "382:\tlearn: 12895.2002279\ttotal: 638ms\tremaining: 1.03s\n",
+      "383:\tlearn: 12879.4610794\ttotal: 640ms\tremaining: 1.02s\n",
+      "384:\tlearn: 12852.9161629\ttotal: 641ms\tremaining: 1.02s\n",
+      "385:\tlearn: 12835.1156077\ttotal: 642ms\tremaining: 1.02s\n",
+      "386:\tlearn: 12810.4753559\ttotal: 643ms\tremaining: 1.02s\n",
+      "387:\tlearn: 12785.1738565\ttotal: 645ms\tremaining: 1.02s\n",
+      "388:\tlearn: 12768.3689388\ttotal: 646ms\tremaining: 1.01s\n",
+      "389:\tlearn: 12741.9595956\ttotal: 647ms\tremaining: 1.01s\n",
+      "390:\tlearn: 12722.7996125\ttotal: 648ms\tremaining: 1.01s\n",
+      "391:\tlearn: 12706.2503701\ttotal: 650ms\tremaining: 1.01s\n",
+      "392:\tlearn: 12686.8042151\ttotal: 651ms\tremaining: 1s\n",
+      "393:\tlearn: 12665.0591896\ttotal: 652ms\tremaining: 1s\n",
+      "394:\tlearn: 12640.2259842\ttotal: 653ms\tremaining: 1s\n",
+      "395:\tlearn: 12628.5332052\ttotal: 655ms\tremaining: 999ms\n",
+      "396:\tlearn: 12626.7813211\ttotal: 656ms\tremaining: 996ms\n",
+      "397:\tlearn: 12625.1120466\ttotal: 657ms\tremaining: 994ms\n",
+      "398:\tlearn: 12623.4442794\ttotal: 658ms\tremaining: 992ms\n",
+      "399:\tlearn: 12605.1522764\ttotal: 660ms\tremaining: 989ms\n",
+      "400:\tlearn: 12588.3468443\ttotal: 661ms\tremaining: 987ms\n",
+      "401:\tlearn: 12580.8477427\ttotal: 662ms\tremaining: 985ms\n",
+      "402:\tlearn: 12557.8000063\ttotal: 663ms\tremaining: 983ms\n",
+      "403:\tlearn: 12556.2445208\ttotal: 664ms\tremaining: 980ms\n",
+      "404:\tlearn: 12534.8865345\ttotal: 666ms\tremaining: 978ms\n",
+      "405:\tlearn: 12517.4753954\ttotal: 667ms\tremaining: 976ms\n",
+      "406:\tlearn: 12496.3239192\ttotal: 668ms\tremaining: 974ms\n",
+      "407:\tlearn: 12475.5049038\ttotal: 670ms\tremaining: 972ms\n",
+      "408:\tlearn: 12463.4544829\ttotal: 671ms\tremaining: 969ms\n",
+      "409:\tlearn: 12439.6044994\ttotal: 672ms\tremaining: 967ms\n",
+      "410:\tlearn: 12413.7833909\ttotal: 673ms\tremaining: 965ms\n",
+      "411:\tlearn: 12412.2250785\ttotal: 675ms\tremaining: 963ms\n",
+      "412:\tlearn: 12389.4843113\ttotal: 676ms\tremaining: 961ms\n",
+      "413:\tlearn: 12371.9538265\ttotal: 677ms\tremaining: 958ms\n",
+      "414:\tlearn: 12352.4179608\ttotal: 678ms\tremaining: 956ms\n",
+      "415:\tlearn: 12333.1881816\ttotal: 680ms\tremaining: 954ms\n",
+      "416:\tlearn: 12316.0621425\ttotal: 681ms\tremaining: 952ms\n",
+      "417:\tlearn: 12303.8932317\ttotal: 682ms\tremaining: 950ms\n",
+      "418:\tlearn: 12284.4339899\ttotal: 683ms\tremaining: 948ms\n",
+      "419:\tlearn: 12261.7799901\ttotal: 685ms\tremaining: 946ms\n",
+      "420:\tlearn: 12247.4449385\ttotal: 686ms\tremaining: 944ms\n",
+      "421:\tlearn: 12225.6253556\ttotal: 687ms\tremaining: 942ms\n",
+      "422:\tlearn: 12207.0822627\ttotal: 689ms\tremaining: 939ms\n",
+      "423:\tlearn: 12188.2215919\ttotal: 690ms\tremaining: 937ms\n",
+      "424:\tlearn: 12165.5300213\ttotal: 691ms\tremaining: 935ms\n",
+      "425:\tlearn: 12139.5948067\ttotal: 693ms\tremaining: 933ms\n",
+      "426:\tlearn: 12123.7583369\ttotal: 694ms\tremaining: 931ms\n",
+      "427:\tlearn: 12122.3112327\ttotal: 695ms\tremaining: 929ms\n",
+      "428:\tlearn: 12120.8994750\ttotal: 696ms\tremaining: 927ms\n",
+      "429:\tlearn: 12099.7274431\ttotal: 698ms\tremaining: 925ms\n",
+      "430:\tlearn: 12074.5620472\ttotal: 699ms\tremaining: 923ms\n",
+      "431:\tlearn: 12047.8525900\ttotal: 700ms\tremaining: 921ms\n",
+      "432:\tlearn: 12031.0324407\ttotal: 702ms\tremaining: 919ms\n",
+      "433:\tlearn: 12029.8873458\ttotal: 703ms\tremaining: 917ms\n",
+      "434:\tlearn: 12028.4816838\ttotal: 704ms\tremaining: 914ms\n",
+      "435:\tlearn: 12009.3785848\ttotal: 705ms\tremaining: 912ms\n",
+      "436:\tlearn: 11986.6629706\ttotal: 707ms\tremaining: 911ms\n",
+      "437:\tlearn: 11975.9768926\ttotal: 708ms\tremaining: 909ms\n",
+      "438:\tlearn: 11974.6644550\ttotal: 710ms\tremaining: 907ms\n",
+      "439:\tlearn: 11959.1269779\ttotal: 711ms\tremaining: 905ms\n",
+      "440:\tlearn: 11938.5312842\ttotal: 712ms\tremaining: 903ms\n",
+      "441:\tlearn: 11920.4705843\ttotal: 714ms\tremaining: 901ms\n",
+      "442:\tlearn: 11919.1541636\ttotal: 715ms\tremaining: 899ms\n",
+      "443:\tlearn: 11905.3219869\ttotal: 716ms\tremaining: 897ms\n",
+      "444:\tlearn: 11886.5585358\ttotal: 717ms\tremaining: 895ms\n",
+      "445:\tlearn: 11885.2645048\ttotal: 718ms\tremaining: 892ms\n",
+      "446:\tlearn: 11869.5958886\ttotal: 720ms\tremaining: 890ms\n",
+      "447:\tlearn: 11841.7383069\ttotal: 721ms\tremaining: 888ms\n",
+      "448:\tlearn: 11832.1954107\ttotal: 722ms\tremaining: 886ms\n",
+      "449:\tlearn: 11813.9434128\ttotal: 724ms\tremaining: 884ms\n",
+      "450:\tlearn: 11808.3215353\ttotal: 725ms\tremaining: 882ms\n",
+      "451:\tlearn: 11798.0733180\ttotal: 726ms\tremaining: 880ms\n",
+      "452:\tlearn: 11781.2337216\ttotal: 727ms\tremaining: 878ms\n",
+      "453:\tlearn: 11758.6703526\ttotal: 729ms\tremaining: 876ms\n",
+      "454:\tlearn: 11757.4711840\ttotal: 730ms\tremaining: 874ms\n",
+      "455:\tlearn: 11734.2938982\ttotal: 731ms\tremaining: 872ms\n",
+      "456:\tlearn: 11718.4614734\ttotal: 732ms\tremaining: 870ms\n",
+      "457:\tlearn: 11695.8001153\ttotal: 734ms\tremaining: 868ms\n",
+      "458:\tlearn: 11671.4534579\ttotal: 735ms\tremaining: 866ms\n",
+      "459:\tlearn: 11655.9818494\ttotal: 736ms\tremaining: 864ms\n",
+      "460:\tlearn: 11638.3331150\ttotal: 737ms\tremaining: 862ms\n",
+      "461:\tlearn: 11620.3479225\ttotal: 739ms\tremaining: 860ms\n",
+      "462:\tlearn: 11597.5756371\ttotal: 740ms\tremaining: 858ms\n",
+      "463:\tlearn: 11576.7995765\ttotal: 741ms\tremaining: 856ms\n",
+      "464:\tlearn: 11552.9633857\ttotal: 742ms\tremaining: 854ms\n",
+      "465:\tlearn: 11526.9588952\ttotal: 743ms\tremaining: 852ms\n",
+      "466:\tlearn: 11504.6003166\ttotal: 745ms\tremaining: 850ms\n",
+      "467:\tlearn: 11503.4238968\ttotal: 746ms\tremaining: 848ms\n",
+      "468:\tlearn: 11502.2163051\ttotal: 747ms\tremaining: 846ms\n",
+      "469:\tlearn: 11501.0338233\ttotal: 748ms\tremaining: 843ms\n",
+      "470:\tlearn: 11485.0453149\ttotal: 749ms\tremaining: 841ms\n",
+      "471:\tlearn: 11483.9306416\ttotal: 750ms\tremaining: 839ms\n",
+      "472:\tlearn: 11466.2420262\ttotal: 751ms\tremaining: 837ms\n",
+      "473:\tlearn: 11454.2141913\ttotal: 753ms\tremaining: 835ms\n",
+      "474:\tlearn: 11433.8235552\ttotal: 754ms\tremaining: 833ms\n",
+      "475:\tlearn: 11412.8740945\ttotal: 755ms\tremaining: 831ms\n",
+      "476:\tlearn: 11399.9557191\ttotal: 756ms\tremaining: 829ms\n",
+      "477:\tlearn: 11387.7555007\ttotal: 757ms\tremaining: 827ms\n",
+      "478:\tlearn: 11361.7917910\ttotal: 758ms\tremaining: 825ms\n",
+      "479:\tlearn: 11347.4236171\ttotal: 759ms\tremaining: 823ms\n",
+      "480:\tlearn: 11346.2832538\ttotal: 761ms\tremaining: 821ms\n",
+      "481:\tlearn: 11334.7751484\ttotal: 762ms\tremaining: 819ms\n",
+      "482:\tlearn: 11310.6215350\ttotal: 763ms\tremaining: 817ms\n",
+      "483:\tlearn: 11294.5161961\ttotal: 765ms\tremaining: 815ms\n",
+      "484:\tlearn: 11271.7019917\ttotal: 766ms\tremaining: 813ms\n",
+      "485:\tlearn: 11251.1381199\ttotal: 767ms\tremaining: 811ms\n",
+      "486:\tlearn: 11238.0141349\ttotal: 768ms\tremaining: 809ms\n",
+      "487:\tlearn: 11221.2319698\ttotal: 770ms\tremaining: 808ms\n",
+      "488:\tlearn: 11201.9585584\ttotal: 771ms\tremaining: 806ms\n",
+      "489:\tlearn: 11188.5883147\ttotal: 772ms\tremaining: 804ms\n",
+      "490:\tlearn: 11170.7305953\ttotal: 774ms\tremaining: 802ms\n",
+      "491:\tlearn: 11158.5365729\ttotal: 775ms\tremaining: 800ms\n",
+      "492:\tlearn: 11133.3113729\ttotal: 776ms\tremaining: 798ms\n",
+      "493:\tlearn: 11132.1849065\ttotal: 778ms\tremaining: 797ms\n",
+      "494:\tlearn: 11117.0108027\ttotal: 779ms\tremaining: 795ms\n",
+      "495:\tlearn: 11115.9055252\ttotal: 780ms\tremaining: 793ms\n",
+      "496:\tlearn: 11114.8576221\ttotal: 782ms\tremaining: 791ms\n",
+      "497:\tlearn: 11110.1374333\ttotal: 783ms\tremaining: 789ms\n",
+      "498:\tlearn: 11095.4348789\ttotal: 784ms\tremaining: 787ms\n",
+      "499:\tlearn: 11092.9616087\ttotal: 786ms\tremaining: 786ms\n",
+      "500:\tlearn: 11082.3909670\ttotal: 787ms\tremaining: 784ms\n",
+      "501:\tlearn: 11066.2002147\ttotal: 788ms\tremaining: 782ms\n",
+      "502:\tlearn: 11041.5579642\ttotal: 790ms\tremaining: 780ms\n",
+      "503:\tlearn: 11028.5531919\ttotal: 791ms\tremaining: 778ms\n",
+      "504:\tlearn: 11027.5394607\ttotal: 792ms\tremaining: 777ms\n",
+      "505:\tlearn: 11007.4090884\ttotal: 794ms\tremaining: 775ms\n",
+      "506:\tlearn: 10994.5272624\ttotal: 795ms\tremaining: 773ms\n",
+      "507:\tlearn: 10993.5390340\ttotal: 796ms\tremaining: 771ms\n",
+      "508:\tlearn: 10992.6355554\ttotal: 797ms\tremaining: 769ms\n",
+      "509:\tlearn: 10978.1789427\ttotal: 798ms\tremaining: 767ms\n",
+      "510:\tlearn: 10957.9777745\ttotal: 800ms\tremaining: 765ms\n",
+      "511:\tlearn: 10938.6801856\ttotal: 801ms\tremaining: 763ms\n",
+      "512:\tlearn: 10917.3196726\ttotal: 802ms\tremaining: 761ms\n",
+      "513:\tlearn: 10905.5553620\ttotal: 803ms\tremaining: 759ms\n",
+      "514:\tlearn: 10892.3750448\ttotal: 804ms\tremaining: 757ms\n",
+      "515:\tlearn: 10872.7152892\ttotal: 805ms\tremaining: 756ms\n",
+      "516:\tlearn: 10851.3276338\ttotal: 807ms\tremaining: 754ms\n",
+      "517:\tlearn: 10836.7173699\ttotal: 808ms\tremaining: 752ms\n",
+      "518:\tlearn: 10835.7567090\ttotal: 810ms\tremaining: 750ms\n",
+      "519:\tlearn: 10823.3670082\ttotal: 811ms\tremaining: 748ms\n",
+      "520:\tlearn: 10808.4736825\ttotal: 812ms\tremaining: 747ms\n",
+      "521:\tlearn: 10778.2099198\ttotal: 813ms\tremaining: 745ms\n",
+      "522:\tlearn: 10760.1923614\ttotal: 814ms\tremaining: 743ms\n",
+      "523:\tlearn: 10734.8633278\ttotal: 815ms\tremaining: 741ms\n",
+      "524:\tlearn: 10722.2412774\ttotal: 817ms\tremaining: 739ms\n",
+      "525:\tlearn: 10710.4001685\ttotal: 818ms\tremaining: 737ms\n",
+      "526:\tlearn: 10693.0745271\ttotal: 819ms\tremaining: 735ms\n",
+      "527:\tlearn: 10681.3373441\ttotal: 820ms\tremaining: 733ms\n",
+      "528:\tlearn: 10665.6653008\ttotal: 821ms\tremaining: 731ms\n",
+      "529:\tlearn: 10651.9920806\ttotal: 822ms\tremaining: 729ms\n",
+      "530:\tlearn: 10632.8409025\ttotal: 824ms\tremaining: 727ms\n",
+      "531:\tlearn: 10614.5409510\ttotal: 825ms\tremaining: 725ms\n",
+      "532:\tlearn: 10606.1455515\ttotal: 826ms\tremaining: 723ms\n",
+      "533:\tlearn: 10590.5095634\ttotal: 827ms\tremaining: 722ms\n",
+      "534:\tlearn: 10575.4853333\ttotal: 828ms\tremaining: 720ms\n",
+      "535:\tlearn: 10558.4905203\ttotal: 829ms\tremaining: 718ms\n",
+      "536:\tlearn: 10534.7423627\ttotal: 830ms\tremaining: 716ms\n",
+      "537:\tlearn: 10517.4806015\ttotal: 831ms\tremaining: 714ms\n",
+      "538:\tlearn: 10501.7710119\ttotal: 833ms\tremaining: 712ms\n",
+      "539:\tlearn: 10500.3114321\ttotal: 834ms\tremaining: 710ms\n",
+      "540:\tlearn: 10487.1937557\ttotal: 835ms\tremaining: 708ms\n",
+      "541:\tlearn: 10469.8020266\ttotal: 836ms\tremaining: 706ms\n",
+      "542:\tlearn: 10450.9558167\ttotal: 837ms\tremaining: 704ms\n",
+      "543:\tlearn: 10430.6815160\ttotal: 838ms\tremaining: 703ms\n",
+      "544:\tlearn: 10429.8953188\ttotal: 839ms\tremaining: 701ms\n",
+      "545:\tlearn: 10414.1911829\ttotal: 840ms\tremaining: 699ms\n",
+      "546:\tlearn: 10400.7177437\ttotal: 841ms\tremaining: 697ms\n",
+      "547:\tlearn: 10379.4510621\ttotal: 843ms\tremaining: 695ms\n",
+      "548:\tlearn: 10376.7185857\ttotal: 844ms\tremaining: 693ms\n",
+      "549:\tlearn: 10365.3713360\ttotal: 845ms\tremaining: 691ms\n",
+      "550:\tlearn: 10355.2418162\ttotal: 846ms\tremaining: 689ms\n",
+      "551:\tlearn: 10354.4906451\ttotal: 847ms\tremaining: 687ms\n",
+      "552:\tlearn: 10343.4705966\ttotal: 848ms\tremaining: 685ms\n",
+      "553:\tlearn: 10328.8575741\ttotal: 849ms\tremaining: 684ms\n",
+      "554:\tlearn: 10315.2108357\ttotal: 850ms\tremaining: 682ms\n",
+      "555:\tlearn: 10314.3342909\ttotal: 851ms\tremaining: 680ms\n",
+      "556:\tlearn: 10300.5294069\ttotal: 852ms\tremaining: 678ms\n",
+      "557:\tlearn: 10287.8560672\ttotal: 853ms\tremaining: 676ms\n",
+      "558:\tlearn: 10272.0362849\ttotal: 855ms\tremaining: 674ms\n",
+      "559:\tlearn: 10262.7933043\ttotal: 856ms\tremaining: 672ms\n",
+      "560:\tlearn: 10245.5749346\ttotal: 857ms\tremaining: 670ms\n",
+      "561:\tlearn: 10231.1777488\ttotal: 858ms\tremaining: 669ms\n",
+      "562:\tlearn: 10216.1049825\ttotal: 859ms\tremaining: 667ms\n",
+      "563:\tlearn: 10215.0529308\ttotal: 860ms\tremaining: 665ms\n",
+      "564:\tlearn: 10204.3246821\ttotal: 861ms\tremaining: 663ms\n",
+      "565:\tlearn: 10190.7409341\ttotal: 862ms\tremaining: 661ms\n",
+      "566:\tlearn: 10189.3305032\ttotal: 863ms\tremaining: 659ms\n",
+      "567:\tlearn: 10174.3980659\ttotal: 864ms\tremaining: 657ms\n",
+      "568:\tlearn: 10157.5127432\ttotal: 866ms\tremaining: 656ms\n",
+      "569:\tlearn: 10156.7590214\ttotal: 867ms\tremaining: 654ms\n",
+      "570:\tlearn: 10144.8567001\ttotal: 868ms\tremaining: 652ms\n",
+      "571:\tlearn: 10133.2642019\ttotal: 869ms\tremaining: 650ms\n",
+      "572:\tlearn: 10118.4002567\ttotal: 870ms\tremaining: 648ms\n",
+      "573:\tlearn: 10105.5297454\ttotal: 871ms\tremaining: 646ms\n",
+      "574:\tlearn: 10084.9902359\ttotal: 872ms\tremaining: 645ms\n",
+      "575:\tlearn: 10083.6733856\ttotal: 873ms\tremaining: 643ms\n",
+      "576:\tlearn: 10069.3410607\ttotal: 874ms\tremaining: 641ms\n",
+      "577:\tlearn: 10050.5479738\ttotal: 876ms\tremaining: 639ms\n",
+      "578:\tlearn: 10033.7047288\ttotal: 877ms\tremaining: 637ms\n",
+      "579:\tlearn: 10017.9971461\ttotal: 878ms\tremaining: 636ms\n",
+      "580:\tlearn: 10002.2052600\ttotal: 879ms\tremaining: 634ms\n",
+      "581:\tlearn: 9990.6793443\ttotal: 880ms\tremaining: 632ms\n",
+      "582:\tlearn: 9978.5470481\ttotal: 881ms\tremaining: 630ms\n",
+      "583:\tlearn: 9966.2528121\ttotal: 882ms\tremaining: 628ms\n",
+      "584:\tlearn: 9952.9502169\ttotal: 883ms\tremaining: 627ms\n",
+      "585:\tlearn: 9939.3140783\ttotal: 885ms\tremaining: 625ms\n",
+      "586:\tlearn: 9927.1599247\ttotal: 886ms\tremaining: 623ms\n",
+      "587:\tlearn: 9915.0286051\ttotal: 887ms\tremaining: 621ms\n",
+      "588:\tlearn: 9901.7645443\ttotal: 888ms\tremaining: 620ms\n",
+      "589:\tlearn: 9892.7023129\ttotal: 889ms\tremaining: 618ms\n",
+      "590:\tlearn: 9883.6738125\ttotal: 890ms\tremaining: 616ms\n",
+      "591:\tlearn: 9871.3992651\ttotal: 891ms\tremaining: 614ms\n",
+      "592:\tlearn: 9856.9010611\ttotal: 892ms\tremaining: 612ms\n",
+      "593:\tlearn: 9856.1160124\ttotal: 893ms\tremaining: 611ms\n",
+      "594:\tlearn: 9848.9270886\ttotal: 894ms\tremaining: 609ms\n",
+      "595:\tlearn: 9838.8519421\ttotal: 895ms\tremaining: 607ms\n",
+      "596:\tlearn: 9825.3874295\ttotal: 896ms\tremaining: 605ms\n",
+      "597:\tlearn: 9810.6573282\ttotal: 898ms\tremaining: 603ms\n",
+      "598:\tlearn: 9809.8960638\ttotal: 899ms\tremaining: 602ms\n",
+      "599:\tlearn: 9798.8503414\ttotal: 900ms\tremaining: 600ms\n",
+      "600:\tlearn: 9791.0188071\ttotal: 901ms\tremaining: 598ms\n",
+      "601:\tlearn: 9775.7752943\ttotal: 902ms\tremaining: 596ms\n",
+      "602:\tlearn: 9759.7587800\ttotal: 903ms\tremaining: 595ms\n",
+      "603:\tlearn: 9745.2603960\ttotal: 905ms\tremaining: 593ms\n",
+      "604:\tlearn: 9744.5407412\ttotal: 906ms\tremaining: 591ms\n",
+      "605:\tlearn: 9730.0427179\ttotal: 907ms\tremaining: 590ms\n",
+      "606:\tlearn: 9719.7788921\ttotal: 908ms\tremaining: 588ms\n",
+      "607:\tlearn: 9704.4881338\ttotal: 909ms\tremaining: 586ms\n",
+      "608:\tlearn: 9694.4588488\ttotal: 910ms\tremaining: 584ms\n",
+      "609:\tlearn: 9677.3624030\ttotal: 911ms\tremaining: 583ms\n",
+      "610:\tlearn: 9672.1469755\ttotal: 913ms\tremaining: 581ms\n",
+      "611:\tlearn: 9654.9759254\ttotal: 914ms\tremaining: 579ms\n",
+      "612:\tlearn: 9639.6531062\ttotal: 915ms\tremaining: 578ms\n",
+      "613:\tlearn: 9625.9456460\ttotal: 916ms\tremaining: 576ms\n",
+      "614:\tlearn: 9616.7556653\ttotal: 917ms\tremaining: 574ms\n",
+      "615:\tlearn: 9608.3287209\ttotal: 918ms\tremaining: 572ms\n",
+      "616:\tlearn: 9594.3513513\ttotal: 919ms\tremaining: 571ms\n",
+      "617:\tlearn: 9579.3395970\ttotal: 920ms\tremaining: 569ms\n",
+      "618:\tlearn: 9578.1432400\ttotal: 921ms\tremaining: 567ms\n",
+      "619:\tlearn: 9555.8986786\ttotal: 923ms\tremaining: 565ms\n",
+      "620:\tlearn: 9547.6357981\ttotal: 924ms\tremaining: 564ms\n",
+      "621:\tlearn: 9537.6761400\ttotal: 925ms\tremaining: 562ms\n",
+      "622:\tlearn: 9519.4755458\ttotal: 926ms\tremaining: 560ms\n",
+      "623:\tlearn: 9500.8395371\ttotal: 927ms\tremaining: 559ms\n",
+      "624:\tlearn: 9489.3170032\ttotal: 928ms\tremaining: 557ms\n",
+      "625:\tlearn: 9479.9493479\ttotal: 929ms\tremaining: 555ms\n",
+      "626:\tlearn: 9478.6036171\ttotal: 930ms\tremaining: 553ms\n",
+      "627:\tlearn: 9458.6502453\ttotal: 932ms\tremaining: 552ms\n",
+      "628:\tlearn: 9441.6684980\ttotal: 933ms\tremaining: 550ms\n",
+      "629:\tlearn: 9426.2217527\ttotal: 934ms\tremaining: 548ms\n",
+      "630:\tlearn: 9417.6690140\ttotal: 935ms\tremaining: 547ms\n",
+      "631:\tlearn: 9399.4584696\ttotal: 936ms\tremaining: 545ms\n",
+      "632:\tlearn: 9398.1527160\ttotal: 937ms\tremaining: 543ms\n",
+      "633:\tlearn: 9384.4385248\ttotal: 938ms\tremaining: 542ms\n",
+      "634:\tlearn: 9369.6338675\ttotal: 939ms\tremaining: 540ms\n",
+      "635:\tlearn: 9359.1657220\ttotal: 941ms\tremaining: 538ms\n",
+      "636:\tlearn: 9347.5997867\ttotal: 942ms\tremaining: 537ms\n",
+      "637:\tlearn: 9338.7870894\ttotal: 943ms\tremaining: 535ms\n",
+      "638:\tlearn: 9327.3048591\ttotal: 944ms\tremaining: 533ms\n",
+      "639:\tlearn: 9309.2437011\ttotal: 945ms\tremaining: 532ms\n",
+      "640:\tlearn: 9299.1973100\ttotal: 946ms\tremaining: 530ms\n",
+      "641:\tlearn: 9282.7627603\ttotal: 947ms\tremaining: 528ms\n",
+      "642:\tlearn: 9273.8936711\ttotal: 948ms\tremaining: 527ms\n",
+      "643:\tlearn: 9262.0722888\ttotal: 950ms\tremaining: 525ms\n",
+      "644:\tlearn: 9247.2907430\ttotal: 954ms\tremaining: 525ms\n",
+      "645:\tlearn: 9229.5579671\ttotal: 956ms\tremaining: 524ms\n",
+      "646:\tlearn: 9210.7685150\ttotal: 957ms\tremaining: 522ms\n",
+      "647:\tlearn: 9199.2259964\ttotal: 958ms\tremaining: 521ms\n",
+      "648:\tlearn: 9197.9521636\ttotal: 960ms\tremaining: 519ms\n",
+      "649:\tlearn: 9196.5375159\ttotal: 961ms\tremaining: 517ms\n",
+      "650:\tlearn: 9188.7495646\ttotal: 962ms\tremaining: 516ms\n",
+      "651:\tlearn: 9176.3150549\ttotal: 963ms\tremaining: 514ms\n",
+      "652:\tlearn: 9165.7253312\ttotal: 965ms\tremaining: 513ms\n",
+      "653:\tlearn: 9154.0392849\ttotal: 967ms\tremaining: 511ms\n",
+      "654:\tlearn: 9143.4919641\ttotal: 968ms\tremaining: 510ms\n",
+      "655:\tlearn: 9131.1876742\ttotal: 969ms\tremaining: 508ms\n",
+      "656:\tlearn: 9115.2594383\ttotal: 971ms\tremaining: 507ms\n",
+      "657:\tlearn: 9100.0727897\ttotal: 972ms\tremaining: 505ms\n",
+      "658:\tlearn: 9089.1681158\ttotal: 974ms\tremaining: 504ms\n",
+      "659:\tlearn: 9072.6507459\ttotal: 976ms\tremaining: 503ms\n",
+      "660:\tlearn: 9066.2377221\ttotal: 977ms\tremaining: 501ms\n",
+      "661:\tlearn: 9065.1809279\ttotal: 979ms\tremaining: 500ms\n",
+      "662:\tlearn: 9053.7255232\ttotal: 980ms\tremaining: 498ms\n",
+      "663:\tlearn: 9034.1495900\ttotal: 982ms\tremaining: 497ms\n",
+      "664:\tlearn: 9020.5218903\ttotal: 983ms\tremaining: 495ms\n",
+      "665:\tlearn: 9005.1900319\ttotal: 984ms\tremaining: 494ms\n",
+      "666:\tlearn: 8991.3256081\ttotal: 986ms\tremaining: 492ms\n",
+      "667:\tlearn: 8985.0346026\ttotal: 988ms\tremaining: 491ms\n",
+      "668:\tlearn: 8968.5017761\ttotal: 989ms\tremaining: 489ms\n",
+      "669:\tlearn: 8961.2314167\ttotal: 990ms\tremaining: 488ms\n",
+      "670:\tlearn: 8951.5184338\ttotal: 992ms\tremaining: 486ms\n",
+      "671:\tlearn: 8940.0040378\ttotal: 993ms\tremaining: 485ms\n",
+      "672:\tlearn: 8932.7897672\ttotal: 994ms\tremaining: 483ms\n",
+      "673:\tlearn: 8922.0524388\ttotal: 995ms\tremaining: 481ms\n",
+      "674:\tlearn: 8917.8916161\ttotal: 996ms\tremaining: 480ms\n",
+      "675:\tlearn: 8902.5692835\ttotal: 998ms\tremaining: 479ms\n",
+      "676:\tlearn: 8893.4145511\ttotal: 1000ms\tremaining: 477ms\n",
+      "677:\tlearn: 8881.9397334\ttotal: 1s\tremaining: 475ms\n",
+      "678:\tlearn: 8868.0057111\ttotal: 1s\tremaining: 474ms\n",
+      "679:\tlearn: 8847.8459188\ttotal: 1s\tremaining: 472ms\n",
+      "680:\tlearn: 8847.1047970\ttotal: 1s\tremaining: 470ms\n",
+      "681:\tlearn: 8837.4460018\ttotal: 1s\tremaining: 469ms\n",
+      "682:\tlearn: 8826.0029136\ttotal: 1.01s\tremaining: 467ms\n",
+      "683:\tlearn: 8824.7891974\ttotal: 1.01s\tremaining: 466ms\n",
+      "684:\tlearn: 8809.2488966\ttotal: 1.01s\tremaining: 464ms\n",
+      "685:\tlearn: 8795.1270670\ttotal: 1.01s\tremaining: 462ms\n",
+      "686:\tlearn: 8789.1223211\ttotal: 1.01s\tremaining: 461ms\n",
+      "687:\tlearn: 8777.6076218\ttotal: 1.01s\tremaining: 459ms\n",
+      "688:\tlearn: 8772.5352749\ttotal: 1.01s\tremaining: 457ms\n",
+      "689:\tlearn: 8756.2918781\ttotal: 1.01s\tremaining: 456ms\n",
+      "690:\tlearn: 8754.7699452\ttotal: 1.01s\tremaining: 454ms\n",
+      "691:\tlearn: 8745.9066553\ttotal: 1.02s\tremaining: 453ms\n",
+      "692:\tlearn: 8738.4041196\ttotal: 1.02s\tremaining: 451ms\n",
+      "693:\tlearn: 8725.8142000\ttotal: 1.02s\tremaining: 449ms\n",
+      "694:\tlearn: 8703.9117446\ttotal: 1.02s\tremaining: 448ms\n",
+      "695:\tlearn: 8685.3404967\ttotal: 1.02s\tremaining: 446ms\n",
+      "696:\tlearn: 8684.6831625\ttotal: 1.02s\tremaining: 445ms\n",
+      "697:\tlearn: 8675.7440412\ttotal: 1.02s\tremaining: 443ms\n",
+      "698:\tlearn: 8667.3168239\ttotal: 1.02s\tremaining: 441ms\n",
+      "699:\tlearn: 8655.7487094\ttotal: 1.03s\tremaining: 440ms\n",
+      "700:\tlearn: 8631.7114576\ttotal: 1.03s\tremaining: 438ms\n",
+      "701:\tlearn: 8623.5895063\ttotal: 1.03s\tremaining: 437ms\n",
+      "702:\tlearn: 8611.0113334\ttotal: 1.03s\tremaining: 435ms\n",
+      "703:\tlearn: 8599.4838623\ttotal: 1.04s\tremaining: 438ms\n",
+      "704:\tlearn: 8590.8325219\ttotal: 1.07s\tremaining: 448ms\n",
+      "705:\tlearn: 8581.4011424\ttotal: 1.07s\tremaining: 447ms\n",
+      "706:\tlearn: 8570.5003173\ttotal: 1.07s\tremaining: 445ms\n",
+      "707:\tlearn: 8569.5188481\ttotal: 1.08s\tremaining: 444ms\n",
+      "708:\tlearn: 8552.1446437\ttotal: 1.08s\tremaining: 442ms\n",
+      "709:\tlearn: 8544.1649340\ttotal: 1.08s\tremaining: 441ms\n",
+      "710:\tlearn: 8532.3533866\ttotal: 1.08s\tremaining: 439ms\n",
+      "711:\tlearn: 8522.1010596\ttotal: 1.08s\tremaining: 438ms\n",
+      "712:\tlearn: 8511.9430637\ttotal: 1.08s\tremaining: 436ms\n",
+      "713:\tlearn: 8504.0312162\ttotal: 1.08s\tremaining: 434ms\n",
+      "714:\tlearn: 8494.6415071\ttotal: 1.08s\tremaining: 433ms\n",
+      "715:\tlearn: 8493.6254698\ttotal: 1.09s\tremaining: 431ms\n",
+      "716:\tlearn: 8481.9463079\ttotal: 1.09s\tremaining: 429ms\n",
+      "717:\tlearn: 8471.5257750\ttotal: 1.09s\tremaining: 428ms\n",
+      "718:\tlearn: 8460.8739797\ttotal: 1.09s\tremaining: 426ms\n",
+      "719:\tlearn: 8460.0191178\ttotal: 1.09s\tremaining: 424ms\n",
+      "720:\tlearn: 8448.0721044\ttotal: 1.09s\tremaining: 422ms\n",
+      "721:\tlearn: 8429.4900585\ttotal: 1.09s\tremaining: 421ms\n",
+      "722:\tlearn: 8419.7271251\ttotal: 1.09s\tremaining: 419ms\n",
+      "723:\tlearn: 8418.8398260\ttotal: 1.09s\tremaining: 418ms\n",
+      "724:\tlearn: 8403.8096463\ttotal: 1.1s\tremaining: 416ms\n",
+      "725:\tlearn: 8395.9345451\ttotal: 1.1s\tremaining: 414ms\n",
+      "726:\tlearn: 8384.5703843\ttotal: 1.1s\tremaining: 413ms\n",
+      "727:\tlearn: 8372.9568715\ttotal: 1.1s\tremaining: 411ms\n",
+      "728:\tlearn: 8366.2903049\ttotal: 1.1s\tremaining: 409ms\n",
+      "729:\tlearn: 8350.9039514\ttotal: 1.1s\tremaining: 408ms\n",
+      "730:\tlearn: 8340.7340077\ttotal: 1.1s\tremaining: 406ms\n",
+      "731:\tlearn: 8329.7575990\ttotal: 1.1s\tremaining: 404ms\n",
+      "732:\tlearn: 8318.4694848\ttotal: 1.1s\tremaining: 403ms\n",
+      "733:\tlearn: 8297.3725416\ttotal: 1.11s\tremaining: 401ms\n",
+      "734:\tlearn: 8287.7054647\ttotal: 1.11s\tremaining: 399ms\n",
+      "735:\tlearn: 8278.1809733\ttotal: 1.11s\tremaining: 398ms\n",
+      "736:\tlearn: 8262.4571523\ttotal: 1.11s\tremaining: 396ms\n",
+      "737:\tlearn: 8254.1932652\ttotal: 1.11s\tremaining: 395ms\n",
+      "738:\tlearn: 8242.8572241\ttotal: 1.11s\tremaining: 393ms\n",
+      "739:\tlearn: 8235.4114466\ttotal: 1.11s\tremaining: 391ms\n",
+      "740:\tlearn: 8224.0995507\ttotal: 1.11s\tremaining: 390ms\n",
+      "741:\tlearn: 8214.1896076\ttotal: 1.11s\tremaining: 388ms\n",
+      "742:\tlearn: 8206.8605839\ttotal: 1.12s\tremaining: 386ms\n",
+      "743:\tlearn: 8204.3951557\ttotal: 1.12s\tremaining: 385ms\n",
+      "744:\tlearn: 8191.9129774\ttotal: 1.12s\tremaining: 383ms\n",
+      "745:\tlearn: 8178.5939325\ttotal: 1.12s\tremaining: 381ms\n",
+      "746:\tlearn: 8165.7283828\ttotal: 1.12s\tremaining: 380ms\n",
+      "747:\tlearn: 8155.4172535\ttotal: 1.12s\tremaining: 378ms\n",
+      "748:\tlearn: 8141.7033317\ttotal: 1.12s\tremaining: 377ms\n",
+      "749:\tlearn: 8129.7535821\ttotal: 1.13s\tremaining: 375ms\n",
+      "750:\tlearn: 8119.9007696\ttotal: 1.13s\tremaining: 373ms\n",
+      "751:\tlearn: 8111.0394419\ttotal: 1.13s\tremaining: 372ms\n",
+      "752:\tlearn: 8100.9492272\ttotal: 1.13s\tremaining: 370ms\n",
+      "753:\tlearn: 8100.1453158\ttotal: 1.13s\tremaining: 369ms\n",
+      "754:\tlearn: 8092.1680490\ttotal: 1.13s\tremaining: 367ms\n",
+      "755:\tlearn: 8081.4905267\ttotal: 1.13s\tremaining: 366ms\n",
+      "756:\tlearn: 8066.8777993\ttotal: 1.14s\tremaining: 364ms\n",
+      "757:\tlearn: 8054.4255471\ttotal: 1.14s\tremaining: 363ms\n",
+      "758:\tlearn: 8038.7559880\ttotal: 1.14s\tremaining: 361ms\n",
+      "759:\tlearn: 8029.8718028\ttotal: 1.14s\tremaining: 360ms\n",
+      "760:\tlearn: 8019.5481297\ttotal: 1.14s\tremaining: 358ms\n",
+      "761:\tlearn: 8004.5016145\ttotal: 1.14s\tremaining: 357ms\n",
+      "762:\tlearn: 7988.6922507\ttotal: 1.14s\tremaining: 355ms\n",
+      "763:\tlearn: 7973.7864266\ttotal: 1.14s\tremaining: 354ms\n",
+      "764:\tlearn: 7960.5746237\ttotal: 1.15s\tremaining: 352ms\n",
+      "765:\tlearn: 7953.6163421\ttotal: 1.15s\tremaining: 350ms\n",
+      "766:\tlearn: 7948.6319346\ttotal: 1.15s\tremaining: 349ms\n",
+      "767:\tlearn: 7942.0550639\ttotal: 1.15s\tremaining: 347ms\n",
+      "768:\tlearn: 7927.4413703\ttotal: 1.15s\tremaining: 346ms\n",
+      "769:\tlearn: 7914.2728393\ttotal: 1.15s\tremaining: 344ms\n",
+      "770:\tlearn: 7905.7689187\ttotal: 1.15s\tremaining: 343ms\n",
+      "771:\tlearn: 7897.7235976\ttotal: 1.16s\tremaining: 341ms\n",
+      "772:\tlearn: 7885.1211408\ttotal: 1.16s\tremaining: 340ms\n",
+      "773:\tlearn: 7871.5807810\ttotal: 1.16s\tremaining: 338ms\n",
+      "774:\tlearn: 7866.0734753\ttotal: 1.16s\tremaining: 337ms\n",
+      "775:\tlearn: 7856.0181839\ttotal: 1.16s\tremaining: 335ms\n",
+      "776:\tlearn: 7843.4970612\ttotal: 1.16s\tremaining: 333ms\n",
+      "777:\tlearn: 7834.6179920\ttotal: 1.16s\tremaining: 332ms\n",
+      "778:\tlearn: 7820.1299016\ttotal: 1.16s\tremaining: 330ms\n",
+      "779:\tlearn: 7804.5746766\ttotal: 1.17s\tremaining: 329ms\n",
+      "780:\tlearn: 7800.1194394\ttotal: 1.17s\tremaining: 327ms\n",
+      "781:\tlearn: 7789.5989858\ttotal: 1.17s\tremaining: 326ms\n",
+      "782:\tlearn: 7771.2688589\ttotal: 1.17s\tremaining: 324ms\n",
+      "783:\tlearn: 7763.1028260\ttotal: 1.17s\tremaining: 323ms\n",
+      "784:\tlearn: 7750.3757201\ttotal: 1.17s\tremaining: 321ms\n",
+      "785:\tlearn: 7738.1249289\ttotal: 1.17s\tremaining: 320ms\n",
+      "786:\tlearn: 7729.3033931\ttotal: 1.18s\tremaining: 318ms\n",
+      "787:\tlearn: 7719.1386759\ttotal: 1.18s\tremaining: 316ms\n",
+      "788:\tlearn: 7703.4297920\ttotal: 1.18s\tremaining: 315ms\n",
+      "789:\tlearn: 7691.7709654\ttotal: 1.18s\tremaining: 313ms\n",
+      "790:\tlearn: 7682.5536368\ttotal: 1.18s\tremaining: 312ms\n",
+      "791:\tlearn: 7674.5609898\ttotal: 1.18s\tremaining: 311ms\n",
+      "792:\tlearn: 7663.5867036\ttotal: 1.18s\tremaining: 309ms\n",
+      "793:\tlearn: 7654.9458809\ttotal: 1.19s\tremaining: 308ms\n",
+      "794:\tlearn: 7644.2657015\ttotal: 1.19s\tremaining: 306ms\n",
+      "795:\tlearn: 7632.3713693\ttotal: 1.19s\tremaining: 304ms\n",
+      "796:\tlearn: 7626.9285778\ttotal: 1.19s\tremaining: 303ms\n",
+      "797:\tlearn: 7619.4777701\ttotal: 1.19s\tremaining: 301ms\n",
+      "798:\tlearn: 7599.2815307\ttotal: 1.19s\tremaining: 300ms\n",
+      "799:\tlearn: 7592.5861677\ttotal: 1.19s\tremaining: 298ms\n",
+      "800:\tlearn: 7576.5027502\ttotal: 1.19s\tremaining: 296ms\n",
+      "801:\tlearn: 7565.4497721\ttotal: 1.19s\tremaining: 295ms\n",
+      "802:\tlearn: 7558.1688337\ttotal: 1.2s\tremaining: 293ms\n",
+      "803:\tlearn: 7553.0135011\ttotal: 1.2s\tremaining: 292ms\n",
+      "804:\tlearn: 7537.8708981\ttotal: 1.2s\tremaining: 290ms\n",
+      "805:\tlearn: 7537.0629573\ttotal: 1.2s\tremaining: 289ms\n",
+      "806:\tlearn: 7527.5715575\ttotal: 1.2s\tremaining: 287ms\n",
+      "807:\tlearn: 7518.4173652\ttotal: 1.2s\tremaining: 285ms\n",
+      "808:\tlearn: 7512.0439060\ttotal: 1.2s\tremaining: 284ms\n",
+      "809:\tlearn: 7507.3952182\ttotal: 1.2s\tremaining: 282ms\n",
+      "810:\tlearn: 7494.6608823\ttotal: 1.2s\tremaining: 281ms\n",
+      "811:\tlearn: 7485.0488719\ttotal: 1.21s\tremaining: 279ms\n",
+      "812:\tlearn: 7483.7597985\ttotal: 1.21s\tremaining: 278ms\n",
+      "813:\tlearn: 7474.5382892\ttotal: 1.21s\tremaining: 276ms\n",
+      "814:\tlearn: 7463.7623945\ttotal: 1.21s\tremaining: 274ms\n",
+      "815:\tlearn: 7461.8040922\ttotal: 1.21s\tremaining: 273ms\n",
+      "816:\tlearn: 7450.9823837\ttotal: 1.21s\tremaining: 271ms\n",
+      "817:\tlearn: 7438.0749689\ttotal: 1.21s\tremaining: 270ms\n",
+      "818:\tlearn: 7426.1461952\ttotal: 1.21s\tremaining: 268ms\n",
+      "819:\tlearn: 7420.8100921\ttotal: 1.21s\tremaining: 267ms\n",
+      "820:\tlearn: 7416.8759052\ttotal: 1.22s\tremaining: 265ms\n",
+      "821:\tlearn: 7406.1797654\ttotal: 1.22s\tremaining: 264ms\n",
+      "822:\tlearn: 7397.5914192\ttotal: 1.22s\tremaining: 262ms\n",
+      "823:\tlearn: 7390.2504478\ttotal: 1.22s\tremaining: 260ms\n",
+      "824:\tlearn: 7381.6743031\ttotal: 1.22s\tremaining: 259ms\n",
+      "825:\tlearn: 7370.4551705\ttotal: 1.22s\tremaining: 257ms\n",
+      "826:\tlearn: 7360.7739058\ttotal: 1.22s\tremaining: 256ms\n",
+      "827:\tlearn: 7351.8954370\ttotal: 1.22s\tremaining: 254ms\n",
+      "828:\tlearn: 7345.8400711\ttotal: 1.22s\tremaining: 253ms\n",
+      "829:\tlearn: 7332.6057696\ttotal: 1.23s\tremaining: 251ms\n",
+      "830:\tlearn: 7324.3040778\ttotal: 1.23s\tremaining: 250ms\n",
+      "831:\tlearn: 7315.7806606\ttotal: 1.23s\tremaining: 248ms\n",
+      "832:\tlearn: 7308.5627576\ttotal: 1.23s\tremaining: 246ms\n",
+      "833:\tlearn: 7300.7140927\ttotal: 1.23s\tremaining: 245ms\n",
+      "834:\tlearn: 7294.2186730\ttotal: 1.23s\tremaining: 243ms\n",
+      "835:\tlearn: 7285.1889469\ttotal: 1.23s\tremaining: 242ms\n",
+      "836:\tlearn: 7279.1405173\ttotal: 1.23s\tremaining: 240ms\n",
+      "837:\tlearn: 7268.4303701\ttotal: 1.24s\tremaining: 239ms\n",
+      "838:\tlearn: 7259.1690496\ttotal: 1.24s\tremaining: 237ms\n",
+      "839:\tlearn: 7256.1805373\ttotal: 1.24s\tremaining: 236ms\n",
+      "840:\tlearn: 7247.3922603\ttotal: 1.24s\tremaining: 234ms\n",
+      "841:\tlearn: 7236.0187187\ttotal: 1.24s\tremaining: 233ms\n",
+      "842:\tlearn: 7228.5048543\ttotal: 1.24s\tremaining: 231ms\n",
+      "843:\tlearn: 7220.2009787\ttotal: 1.24s\tremaining: 230ms\n",
+      "844:\tlearn: 7218.8875408\ttotal: 1.24s\tremaining: 228ms\n",
+      "845:\tlearn: 7209.2681474\ttotal: 1.24s\tremaining: 226ms\n",
+      "846:\tlearn: 7203.2779582\ttotal: 1.25s\tremaining: 225ms\n",
+      "847:\tlearn: 7193.1807955\ttotal: 1.25s\tremaining: 223ms\n",
+      "848:\tlearn: 7191.2365189\ttotal: 1.25s\tremaining: 222ms\n",
+      "849:\tlearn: 7187.2976628\ttotal: 1.25s\tremaining: 220ms\n",
+      "850:\tlearn: 7176.8288274\ttotal: 1.25s\tremaining: 219ms\n",
+      "851:\tlearn: 7167.9087942\ttotal: 1.25s\tremaining: 217ms\n",
+      "852:\tlearn: 7160.4963676\ttotal: 1.25s\tremaining: 216ms\n",
+      "853:\tlearn: 7150.6507944\ttotal: 1.25s\tremaining: 214ms\n",
+      "854:\tlearn: 7138.4010495\ttotal: 1.25s\tremaining: 213ms\n",
+      "855:\tlearn: 7133.1858647\ttotal: 1.25s\tremaining: 211ms\n",
+      "856:\tlearn: 7123.3993661\ttotal: 1.26s\tremaining: 210ms\n",
+      "857:\tlearn: 7112.5879073\ttotal: 1.26s\tremaining: 208ms\n",
+      "858:\tlearn: 7103.9491346\ttotal: 1.26s\tremaining: 207ms\n",
+      "859:\tlearn: 7097.0598901\ttotal: 1.26s\tremaining: 205ms\n",
+      "860:\tlearn: 7087.9132083\ttotal: 1.26s\tremaining: 204ms\n",
+      "861:\tlearn: 7079.1807502\ttotal: 1.26s\tremaining: 202ms\n",
+      "862:\tlearn: 7069.3976734\ttotal: 1.26s\tremaining: 201ms\n",
+      "863:\tlearn: 7063.2595792\ttotal: 1.26s\tremaining: 199ms\n",
+      "864:\tlearn: 7053.6867590\ttotal: 1.26s\tremaining: 198ms\n",
+      "865:\tlearn: 7044.2992512\ttotal: 1.27s\tremaining: 196ms\n",
+      "866:\tlearn: 7032.0035446\ttotal: 1.27s\tremaining: 195ms\n",
+      "867:\tlearn: 7020.3721691\ttotal: 1.27s\tremaining: 193ms\n",
+      "868:\tlearn: 7012.7066396\ttotal: 1.27s\tremaining: 191ms\n",
+      "869:\tlearn: 7004.4152427\ttotal: 1.27s\tremaining: 190ms\n",
+      "870:\tlearn: 6993.1503718\ttotal: 1.27s\tremaining: 188ms\n",
+      "871:\tlearn: 6987.1329720\ttotal: 1.27s\tremaining: 187ms\n",
+      "872:\tlearn: 6980.8377835\ttotal: 1.27s\tremaining: 185ms\n",
+      "873:\tlearn: 6971.3363723\ttotal: 1.27s\tremaining: 184ms\n",
+      "874:\tlearn: 6965.5850075\ttotal: 1.28s\tremaining: 182ms\n",
+      "875:\tlearn: 6955.9882381\ttotal: 1.28s\tremaining: 181ms\n",
+      "876:\tlearn: 6951.7906696\ttotal: 1.28s\tremaining: 179ms\n",
+      "877:\tlearn: 6944.3112749\ttotal: 1.28s\tremaining: 178ms\n",
+      "878:\tlearn: 6938.0158237\ttotal: 1.28s\tremaining: 176ms\n",
+      "879:\tlearn: 6925.2695180\ttotal: 1.28s\tremaining: 175ms\n",
+      "880:\tlearn: 6915.2234674\ttotal: 1.28s\tremaining: 173ms\n",
+      "881:\tlearn: 6904.8187586\ttotal: 1.28s\tremaining: 172ms\n",
+      "882:\tlearn: 6895.6183944\ttotal: 1.29s\tremaining: 170ms\n",
+      "883:\tlearn: 6889.0549715\ttotal: 1.29s\tremaining: 169ms\n",
+      "884:\tlearn: 6882.3989847\ttotal: 1.29s\tremaining: 167ms\n",
+      "885:\tlearn: 6872.2113802\ttotal: 1.29s\tremaining: 166ms\n",
+      "886:\tlearn: 6865.2703273\ttotal: 1.29s\tremaining: 164ms\n",
+      "887:\tlearn: 6855.1988666\ttotal: 1.29s\tremaining: 163ms\n",
+      "888:\tlearn: 6849.7604874\ttotal: 1.29s\tremaining: 161ms\n",
+      "889:\tlearn: 6844.9557949\ttotal: 1.29s\tremaining: 160ms\n",
+      "890:\tlearn: 6835.3144077\ttotal: 1.29s\tremaining: 158ms\n",
+      "891:\tlearn: 6829.9190796\ttotal: 1.3s\tremaining: 157ms\n",
+      "892:\tlearn: 6817.6960176\ttotal: 1.3s\tremaining: 155ms\n",
+      "893:\tlearn: 6805.8956028\ttotal: 1.3s\tremaining: 154ms\n",
+      "894:\tlearn: 6797.7919863\ttotal: 1.3s\tremaining: 152ms\n",
+      "895:\tlearn: 6786.2765742\ttotal: 1.3s\tremaining: 151ms\n",
+      "896:\tlearn: 6776.9365246\ttotal: 1.3s\tremaining: 150ms\n",
+      "897:\tlearn: 6767.1241241\ttotal: 1.3s\tremaining: 148ms\n",
+      "898:\tlearn: 6763.8496955\ttotal: 1.3s\tremaining: 147ms\n",
+      "899:\tlearn: 6749.5090743\ttotal: 1.3s\tremaining: 145ms\n",
+      "900:\tlearn: 6747.1423205\ttotal: 1.31s\tremaining: 144ms\n",
+      "901:\tlearn: 6742.3457406\ttotal: 1.31s\tremaining: 142ms\n",
+      "902:\tlearn: 6730.9019836\ttotal: 1.31s\tremaining: 141ms\n",
+      "903:\tlearn: 6730.3459960\ttotal: 1.31s\tremaining: 139ms\n",
+      "904:\tlearn: 6717.4439767\ttotal: 1.31s\tremaining: 138ms\n",
+      "905:\tlearn: 6710.8917808\ttotal: 1.31s\tremaining: 136ms\n",
+      "906:\tlearn: 6704.8088544\ttotal: 1.31s\tremaining: 135ms\n",
+      "907:\tlearn: 6695.0519901\ttotal: 1.31s\tremaining: 133ms\n",
+      "908:\tlearn: 6689.1681022\ttotal: 1.32s\tremaining: 132ms\n",
+      "909:\tlearn: 6685.3632058\ttotal: 1.32s\tremaining: 130ms\n",
+      "910:\tlearn: 6678.7059703\ttotal: 1.32s\tremaining: 129ms\n",
+      "911:\tlearn: 6672.7351774\ttotal: 1.32s\tremaining: 127ms\n",
+      "912:\tlearn: 6670.2427513\ttotal: 1.32s\tremaining: 126ms\n",
+      "913:\tlearn: 6665.2009351\ttotal: 1.32s\tremaining: 124ms\n",
+      "914:\tlearn: 6656.4643673\ttotal: 1.32s\tremaining: 123ms\n",
+      "915:\tlearn: 6645.5616055\ttotal: 1.32s\tremaining: 121ms\n",
+      "916:\tlearn: 6637.7110120\ttotal: 1.32s\tremaining: 120ms\n",
+      "917:\tlearn: 6627.3629520\ttotal: 1.33s\tremaining: 119ms\n",
+      "918:\tlearn: 6622.0924727\ttotal: 1.33s\tremaining: 117ms\n",
+      "919:\tlearn: 6610.3315336\ttotal: 1.33s\tremaining: 116ms\n",
+      "920:\tlearn: 6604.2241306\ttotal: 1.33s\tremaining: 114ms\n",
+      "921:\tlearn: 6597.4373323\ttotal: 1.33s\tremaining: 113ms\n",
+      "922:\tlearn: 6588.7407895\ttotal: 1.33s\tremaining: 111ms\n",
+      "923:\tlearn: 6582.3289793\ttotal: 1.33s\tremaining: 110ms\n",
+      "924:\tlearn: 6577.7093877\ttotal: 1.34s\tremaining: 108ms\n",
+      "925:\tlearn: 6573.2801961\ttotal: 1.34s\tremaining: 107ms\n",
+      "926:\tlearn: 6565.4768570\ttotal: 1.34s\tremaining: 105ms\n",
+      "927:\tlearn: 6556.2790277\ttotal: 1.34s\tremaining: 104ms\n",
+      "928:\tlearn: 6545.1797991\ttotal: 1.34s\tremaining: 103ms\n",
+      "929:\tlearn: 6535.4815432\ttotal: 1.34s\tremaining: 101ms\n",
+      "930:\tlearn: 6534.0335310\ttotal: 1.34s\tremaining: 99.6ms\n",
+      "931:\tlearn: 6526.6083619\ttotal: 1.34s\tremaining: 98.2ms\n",
+      "932:\tlearn: 6517.8203695\ttotal: 1.35s\tremaining: 96.7ms\n",
+      "933:\tlearn: 6506.3244364\ttotal: 1.35s\tremaining: 95.3ms\n",
+      "934:\tlearn: 6496.5196795\ttotal: 1.35s\tremaining: 93.8ms\n",
+      "935:\tlearn: 6491.2095743\ttotal: 1.35s\tremaining: 92.3ms\n",
+      "936:\tlearn: 6485.5866188\ttotal: 1.35s\tremaining: 90.9ms\n",
+      "937:\tlearn: 6474.7648012\ttotal: 1.35s\tremaining: 89.4ms\n",
+      "938:\tlearn: 6467.6438066\ttotal: 1.35s\tremaining: 88ms\n",
+      "939:\tlearn: 6458.9823049\ttotal: 1.35s\tremaining: 86.5ms\n",
+      "940:\tlearn: 6453.9713146\ttotal: 1.36s\tremaining: 85.1ms\n",
+      "941:\tlearn: 6445.2775888\ttotal: 1.36s\tremaining: 83.6ms\n",
+      "942:\tlearn: 6438.8608398\ttotal: 1.36s\tremaining: 82.2ms\n",
+      "943:\tlearn: 6430.0119008\ttotal: 1.36s\tremaining: 80.7ms\n",
+      "944:\tlearn: 6423.3820413\ttotal: 1.36s\tremaining: 79.3ms\n",
+      "945:\tlearn: 6415.6201188\ttotal: 1.36s\tremaining: 77.8ms\n",
+      "946:\tlearn: 6410.5162578\ttotal: 1.36s\tremaining: 76.4ms\n",
+      "947:\tlearn: 6404.5849646\ttotal: 1.37s\tremaining: 74.9ms\n",
+      "948:\tlearn: 6398.1275677\ttotal: 1.37s\tremaining: 73.5ms\n",
+      "949:\tlearn: 6390.0094696\ttotal: 1.37s\tremaining: 72ms\n",
+      "950:\tlearn: 6380.4997392\ttotal: 1.37s\tremaining: 70.6ms\n",
+      "951:\tlearn: 6370.8354868\ttotal: 1.37s\tremaining: 69.2ms\n",
+      "952:\tlearn: 6364.6799363\ttotal: 1.37s\tremaining: 67.8ms\n",
+      "953:\tlearn: 6355.4052333\ttotal: 1.38s\tremaining: 66.3ms\n",
+      "954:\tlearn: 6347.5124313\ttotal: 1.38s\tremaining: 64.9ms\n",
+      "955:\tlearn: 6339.9327603\ttotal: 1.38s\tremaining: 63.4ms\n",
+      "956:\tlearn: 6331.3383855\ttotal: 1.38s\tremaining: 62ms\n",
+      "957:\tlearn: 6330.9572635\ttotal: 1.38s\tremaining: 60.5ms\n",
+      "958:\tlearn: 6330.2665697\ttotal: 1.38s\tremaining: 59.1ms\n",
+      "959:\tlearn: 6320.7585423\ttotal: 1.38s\tremaining: 57.6ms\n",
+      "960:\tlearn: 6316.9367863\ttotal: 1.38s\tremaining: 56.2ms\n",
+      "961:\tlearn: 6305.9665433\ttotal: 1.39s\tremaining: 54.7ms\n",
+      "962:\tlearn: 6295.7829613\ttotal: 1.39s\tremaining: 53.3ms\n",
+      "963:\tlearn: 6286.7316400\ttotal: 1.39s\tremaining: 51.8ms\n",
+      "964:\tlearn: 6280.6179405\ttotal: 1.39s\tremaining: 50.4ms\n",
+      "965:\tlearn: 6271.0846240\ttotal: 1.39s\tremaining: 48.9ms\n",
+      "966:\tlearn: 6265.6089616\ttotal: 1.39s\tremaining: 47.5ms\n",
+      "967:\tlearn: 6258.4067024\ttotal: 1.39s\tremaining: 46ms\n",
+      "968:\tlearn: 6252.0546347\ttotal: 1.39s\tremaining: 44.6ms\n",
+      "969:\tlearn: 6240.2716763\ttotal: 1.39s\tremaining: 43.1ms\n",
+      "970:\tlearn: 6237.6141029\ttotal: 1.4s\tremaining: 41.7ms\n",
+      "971:\tlearn: 6231.1637922\ttotal: 1.4s\tremaining: 40.2ms\n",
+      "972:\tlearn: 6224.2049094\ttotal: 1.4s\tremaining: 38.8ms\n",
+      "973:\tlearn: 6220.1043889\ttotal: 1.4s\tremaining: 37.4ms\n",
+      "974:\tlearn: 6212.0830355\ttotal: 1.4s\tremaining: 35.9ms\n",
+      "975:\tlearn: 6206.6198126\ttotal: 1.4s\tremaining: 34.5ms\n",
+      "976:\tlearn: 6199.4668787\ttotal: 1.4s\tremaining: 33ms\n",
+      "977:\tlearn: 6193.3445984\ttotal: 1.4s\tremaining: 31.6ms\n",
+      "978:\tlearn: 6185.2858031\ttotal: 1.41s\tremaining: 30.1ms\n",
+      "979:\tlearn: 6176.4350292\ttotal: 1.41s\tremaining: 28.7ms\n",
+      "980:\tlearn: 6174.9165040\ttotal: 1.41s\tremaining: 27.3ms\n",
+      "981:\tlearn: 6169.5612371\ttotal: 1.41s\tremaining: 25.8ms\n",
+      "982:\tlearn: 6162.3769541\ttotal: 1.41s\tremaining: 24.4ms\n",
+      "983:\tlearn: 6155.4632066\ttotal: 1.41s\tremaining: 22.9ms\n",
+      "984:\tlearn: 6147.4709298\ttotal: 1.41s\tremaining: 21.5ms\n",
+      "985:\tlearn: 6137.8897793\ttotal: 1.41s\tremaining: 20.1ms\n",
+      "986:\tlearn: 6133.6333416\ttotal: 1.41s\tremaining: 18.6ms\n",
+      "987:\tlearn: 6125.8396440\ttotal: 1.42s\tremaining: 17.2ms\n",
+      "988:\tlearn: 6118.9306186\ttotal: 1.42s\tremaining: 15.8ms\n",
+      "989:\tlearn: 6112.1254087\ttotal: 1.42s\tremaining: 14.3ms\n",
+      "990:\tlearn: 6106.8206628\ttotal: 1.42s\tremaining: 12.9ms\n",
+      "991:\tlearn: 6099.1192698\ttotal: 1.42s\tremaining: 11.5ms\n",
+      "992:\tlearn: 6094.3557838\ttotal: 1.42s\tremaining: 10ms\n",
+      "993:\tlearn: 6087.2310912\ttotal: 1.42s\tremaining: 8.59ms\n",
+      "994:\tlearn: 6079.5095364\ttotal: 1.42s\tremaining: 7.15ms\n",
+      "995:\tlearn: 6073.4962157\ttotal: 1.42s\tremaining: 5.72ms\n",
+      "996:\tlearn: 6065.7144217\ttotal: 1.43s\tremaining: 4.29ms\n",
+      "997:\tlearn: 6056.9512733\ttotal: 1.43s\tremaining: 2.86ms\n",
+      "998:\tlearn: 6049.9622604\ttotal: 1.43s\tremaining: 1.43ms\n",
+      "999:\tlearn: 6046.2216818\ttotal: 1.43s\tremaining: 0us\n"
+     ]
+    },
     {
      "data": {
       "text/html": [
-       "Finishing last run (ID:5klsxrom) before initializing another..."
+       "Finishing last run (ID:27jt3eyk) before initializing another..."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -831,7 +3656,7 @@
     {
      "data": {
       "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108219<br/>Program ended successfully."
+       "<br/>Waiting for W&B process to finish, PID 247633<br/>Program ended successfully."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -848,7 +3673,31 @@
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+       "VBox(children=(Label(value=' 0.09MB of 0.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150314-27jt3eyk/logs/debug.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150314-27jt3eyk/logs/debug-internal.log</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
       ]
      },
      "metadata": {},
@@ -857,7 +3706,10 @@
     {
      "data": {
       "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug.log</code>"
+       "<h3>Run summary:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>4636.31604</td></tr><tr><td>mean_squared_error</td><td>36556796.62535</td></tr><tr><td>_runtime</td><td>8</td></tr><tr><td>_timestamp</td><td>1629884013</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>4636.31604</td></tr><tr><td>val mean_squared_error</td><td>36556796.62535</td></tr></table>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -869,7 +3721,10 @@
     {
      "data": {
       "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug-internal.log</code>"
+       "<h3>Run history:</h3><br/><style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
+       "    </style><table class=\"wandb\">\n",
+       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -881,7 +3736,7 @@
     {
      "data": {
       "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
+       "Synced 7 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -894,7 +3749,7 @@
      "data": {
       "text/html": [
        "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
+       "                    <br/>Synced <strong style=\"color:#cdcd00\">CatBoost</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/27jt3eyk\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/27jt3eyk</a><br/>\n",
        "                "
       ],
       "text/plain": [
@@ -907,7 +3762,7 @@
     {
      "data": {
       "text/html": [
-       "...Successfully finished last run (ID:5klsxrom). Initializing new run:<br/><br/>"
+       "...Successfully finished last run (ID:27jt3eyk). Initializing new run:<br/><br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -921,10 +3776,10 @@
       "text/html": [
        "\n",
        "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-MSSubClass</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
+       "                Syncing run <strong style=\"color:#cdcd00\">CatBoostRegressor</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
        "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105618-37zdocsk</code><br/><br/>\n",
+       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/urhpx3kj\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/urhpx3kj</a><br/>\n",
+       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_150333-urhpx3kj</code><br/><br/>\n",
        "            "
       ],
       "text/plain": [
@@ -934,10 +3789,1017 @@
      "metadata": {},
      "output_type": "display_data"
     },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Learning rate set to 0.04175\n",
+      "0:\tlearn: 77253.4120105\ttotal: 2.05ms\tremaining: 2.04s\n",
+      "1:\tlearn: 75126.2315753\ttotal: 3.69ms\tremaining: 1.84s\n",
+      "2:\tlearn: 73334.8425187\ttotal: 4.98ms\tremaining: 1.65s\n",
+      "3:\tlearn: 71516.5156887\ttotal: 6.22ms\tremaining: 1.55s\n",
+      "4:\tlearn: 69677.4527552\ttotal: 7.58ms\tremaining: 1.51s\n",
+      "5:\tlearn: 67987.2714169\ttotal: 8.82ms\tremaining: 1.46s\n",
+      "6:\tlearn: 66182.9278829\ttotal: 10ms\tremaining: 1.42s\n",
+      "7:\tlearn: 64663.0575975\ttotal: 11.3ms\tremaining: 1.41s\n",
+      "8:\tlearn: 63037.8228057\ttotal: 12.5ms\tremaining: 1.38s\n",
+      "9:\tlearn: 61534.0939774\ttotal: 13.7ms\tremaining: 1.36s\n",
+      "10:\tlearn: 60010.6983004\ttotal: 15ms\tremaining: 1.35s\n",
+      "11:\tlearn: 58803.4989104\ttotal: 15.8ms\tremaining: 1.3s\n",
+      "12:\tlearn: 57358.3663402\ttotal: 18ms\tremaining: 1.37s\n",
+      "13:\tlearn: 56094.7111427\ttotal: 19.3ms\tremaining: 1.36s\n",
+      "14:\tlearn: 54835.9745769\ttotal: 20.5ms\tremaining: 1.34s\n",
+      "15:\tlearn: 53808.3736601\ttotal: 21.6ms\tremaining: 1.33s\n",
+      "16:\tlearn: 52589.5688537\ttotal: 22.7ms\tremaining: 1.31s\n",
+      "17:\tlearn: 51625.5887706\ttotal: 23.5ms\tremaining: 1.28s\n",
+      "18:\tlearn: 50618.6783929\ttotal: 24.6ms\tremaining: 1.27s\n",
+      "19:\tlearn: 49605.1479189\ttotal: 25.8ms\tremaining: 1.26s\n",
+      "20:\tlearn: 48585.2919612\ttotal: 27ms\tremaining: 1.26s\n",
+      "21:\tlearn: 47671.4188557\ttotal: 28.1ms\tremaining: 1.25s\n",
+      "22:\tlearn: 46872.5327867\ttotal: 29.3ms\tremaining: 1.24s\n",
+      "23:\tlearn: 45964.1542723\ttotal: 30.4ms\tremaining: 1.24s\n",
+      "24:\tlearn: 45063.4471889\ttotal: 31.5ms\tremaining: 1.23s\n",
+      "25:\tlearn: 44269.9279181\ttotal: 32.7ms\tremaining: 1.22s\n",
+      "26:\tlearn: 43442.0003544\ttotal: 33.8ms\tremaining: 1.22s\n",
+      "27:\tlearn: 42677.1291671\ttotal: 34.9ms\tremaining: 1.21s\n",
+      "28:\tlearn: 42005.6995409\ttotal: 36ms\tremaining: 1.21s\n",
+      "29:\tlearn: 41287.8556689\ttotal: 37.2ms\tremaining: 1.2s\n",
+      "30:\tlearn: 40581.4401519\ttotal: 38.3ms\tremaining: 1.2s\n",
+      "31:\tlearn: 39945.1085948\ttotal: 39.4ms\tremaining: 1.19s\n",
+      "32:\tlearn: 39277.6815760\ttotal: 40.5ms\tremaining: 1.19s\n",
+      "33:\tlearn: 38620.2502146\ttotal: 41.7ms\tremaining: 1.18s\n",
+      "34:\tlearn: 38103.6487030\ttotal: 42.8ms\tremaining: 1.18s\n",
+      "35:\tlearn: 37588.5034856\ttotal: 43.9ms\tremaining: 1.18s\n",
+      "36:\tlearn: 37039.7950405\ttotal: 45ms\tremaining: 1.17s\n",
+      "37:\tlearn: 36517.5608260\ttotal: 46.1ms\tremaining: 1.17s\n",
+      "38:\tlearn: 36014.7072507\ttotal: 47.2ms\tremaining: 1.16s\n",
+      "39:\tlearn: 35571.7907674\ttotal: 48.4ms\tremaining: 1.16s\n",
+      "40:\tlearn: 35128.3609481\ttotal: 49.5ms\tremaining: 1.16s\n",
+      "41:\tlearn: 34670.2588273\ttotal: 50.6ms\tremaining: 1.15s\n",
+      "42:\tlearn: 34265.4339325\ttotal: 51.7ms\tremaining: 1.15s\n",
+      "43:\tlearn: 33790.7927430\ttotal: 52.9ms\tremaining: 1.15s\n",
+      "44:\tlearn: 33435.1222398\ttotal: 54ms\tremaining: 1.15s\n",
+      "45:\tlearn: 32959.5055094\ttotal: 55.1ms\tremaining: 1.14s\n",
+      "46:\tlearn: 32605.4932062\ttotal: 56.2ms\tremaining: 1.14s\n",
+      "47:\tlearn: 32214.8180586\ttotal: 57.3ms\tremaining: 1.14s\n",
+      "48:\tlearn: 31848.8856923\ttotal: 58.4ms\tremaining: 1.13s\n",
+      "49:\tlearn: 31441.9857799\ttotal: 59.5ms\tremaining: 1.13s\n",
+      "50:\tlearn: 31095.1235317\ttotal: 60.6ms\tremaining: 1.13s\n",
+      "51:\tlearn: 30796.5477663\ttotal: 61.9ms\tremaining: 1.13s\n",
+      "52:\tlearn: 30429.2432778\ttotal: 63ms\tremaining: 1.13s\n",
+      "53:\tlearn: 30121.5092152\ttotal: 64.1ms\tremaining: 1.12s\n",
+      "54:\tlearn: 29861.4661155\ttotal: 65.3ms\tremaining: 1.12s\n",
+      "55:\tlearn: 29545.1354546\ttotal: 66.5ms\tremaining: 1.12s\n",
+      "56:\tlearn: 29269.4031866\ttotal: 67.6ms\tremaining: 1.12s\n",
+      "57:\tlearn: 28970.7635492\ttotal: 68.7ms\tremaining: 1.11s\n",
+      "58:\tlearn: 28707.3742610\ttotal: 69.7ms\tremaining: 1.11s\n",
+      "59:\tlearn: 28440.1931968\ttotal: 70.9ms\tremaining: 1.11s\n",
+      "60:\tlearn: 28162.8708024\ttotal: 72ms\tremaining: 1.11s\n",
+      "61:\tlearn: 27909.5196665\ttotal: 73.2ms\tremaining: 1.11s\n",
+      "62:\tlearn: 27656.7093846\ttotal: 74.4ms\tremaining: 1.11s\n",
+      "63:\tlearn: 27417.0847713\ttotal: 75.5ms\tremaining: 1.1s\n",
+      "64:\tlearn: 27208.8452926\ttotal: 76.6ms\tremaining: 1.1s\n",
+      "65:\tlearn: 27010.4567475\ttotal: 77.7ms\tremaining: 1.1s\n",
+      "66:\tlearn: 26789.9671540\ttotal: 78.8ms\tremaining: 1.1s\n",
+      "67:\tlearn: 26587.4079384\ttotal: 79.9ms\tremaining: 1.09s\n",
+      "68:\tlearn: 26435.0078515\ttotal: 81ms\tremaining: 1.09s\n",
+      "69:\tlearn: 26232.0319428\ttotal: 82.1ms\tremaining: 1.09s\n",
+      "70:\tlearn: 26056.7895950\ttotal: 83.2ms\tremaining: 1.09s\n",
+      "71:\tlearn: 25855.4511514\ttotal: 84.3ms\tremaining: 1.08s\n",
+      "72:\tlearn: 25680.0341635\ttotal: 85.3ms\tremaining: 1.08s\n",
+      "73:\tlearn: 25465.6610498\ttotal: 86.4ms\tremaining: 1.08s\n",
+      "74:\tlearn: 25298.6442104\ttotal: 87.5ms\tremaining: 1.08s\n",
+      "75:\tlearn: 25121.7738504\ttotal: 88.7ms\tremaining: 1.08s\n",
+      "76:\tlearn: 24947.7738334\ttotal: 89.8ms\tremaining: 1.08s\n",
+      "77:\tlearn: 24786.9787686\ttotal: 90.9ms\tremaining: 1.07s\n",
+      "78:\tlearn: 24606.1868911\ttotal: 92ms\tremaining: 1.07s\n",
+      "79:\tlearn: 24426.0573643\ttotal: 93.1ms\tremaining: 1.07s\n",
+      "80:\tlearn: 24250.3700477\ttotal: 94.2ms\tremaining: 1.07s\n",
+      "81:\tlearn: 24092.2400462\ttotal: 95.4ms\tremaining: 1.07s\n",
+      "82:\tlearn: 23923.1763068\ttotal: 96.5ms\tremaining: 1.06s\n",
+      "83:\tlearn: 23755.9937139\ttotal: 97.6ms\tremaining: 1.06s\n",
+      "84:\tlearn: 23589.6095473\ttotal: 98.7ms\tremaining: 1.06s\n",
+      "85:\tlearn: 23465.8972071\ttotal: 99.7ms\tremaining: 1.06s\n",
+      "86:\tlearn: 23341.3603647\ttotal: 101ms\tremaining: 1.06s\n",
+      "87:\tlearn: 23253.1154981\ttotal: 102ms\tremaining: 1.06s\n",
+      "88:\tlearn: 23130.8119195\ttotal: 103ms\tremaining: 1.05s\n",
+      "89:\tlearn: 23018.9883223\ttotal: 104ms\tremaining: 1.05s\n",
+      "90:\tlearn: 22898.5113244\ttotal: 105ms\tremaining: 1.05s\n",
+      "91:\tlearn: 22787.4669008\ttotal: 106ms\tremaining: 1.05s\n",
+      "92:\tlearn: 22690.8217532\ttotal: 108ms\tremaining: 1.05s\n",
+      "93:\tlearn: 22598.9752233\ttotal: 109ms\tremaining: 1.05s\n",
+      "94:\tlearn: 22499.2472066\ttotal: 110ms\tremaining: 1.04s\n",
+      "95:\tlearn: 22407.4804150\ttotal: 111ms\tremaining: 1.04s\n",
+      "96:\tlearn: 22326.1367979\ttotal: 112ms\tremaining: 1.04s\n",
+      "97:\tlearn: 22237.7099122\ttotal: 113ms\tremaining: 1.04s\n",
+      "98:\tlearn: 22173.7522192\ttotal: 114ms\tremaining: 1.04s\n",
+      "99:\tlearn: 22062.6320815\ttotal: 115ms\tremaining: 1.04s\n",
+      "100:\tlearn: 21982.5777371\ttotal: 116ms\tremaining: 1.03s\n",
+      "101:\tlearn: 21890.9102837\ttotal: 118ms\tremaining: 1.03s\n",
+      "102:\tlearn: 21808.6712327\ttotal: 119ms\tremaining: 1.03s\n",
+      "103:\tlearn: 21707.4258533\ttotal: 120ms\tremaining: 1.03s\n",
+      "104:\tlearn: 21602.2386142\ttotal: 121ms\tremaining: 1.03s\n",
+      "105:\tlearn: 21537.1590058\ttotal: 122ms\tremaining: 1.03s\n",
+      "106:\tlearn: 21475.3126049\ttotal: 123ms\tremaining: 1.03s\n",
+      "107:\tlearn: 21403.9143591\ttotal: 124ms\tremaining: 1.02s\n",
+      "108:\tlearn: 21321.6513657\ttotal: 125ms\tremaining: 1.02s\n",
+      "109:\tlearn: 21249.7394811\ttotal: 126ms\tremaining: 1.02s\n",
+      "110:\tlearn: 21184.2611784\ttotal: 128ms\tremaining: 1.02s\n",
+      "111:\tlearn: 21116.4207566\ttotal: 129ms\tremaining: 1.02s\n",
+      "112:\tlearn: 21034.9991226\ttotal: 130ms\tremaining: 1.02s\n",
+      "113:\tlearn: 20990.2244015\ttotal: 131ms\tremaining: 1.02s\n",
+      "114:\tlearn: 20918.0680507\ttotal: 132ms\tremaining: 1.01s\n",
+      "115:\tlearn: 20867.7713539\ttotal: 133ms\tremaining: 1.01s\n",
+      "116:\tlearn: 20803.9194499\ttotal: 134ms\tremaining: 1.01s\n",
+      "117:\tlearn: 20705.4907764\ttotal: 135ms\tremaining: 1.01s\n",
+      "118:\tlearn: 20646.9421135\ttotal: 136ms\tremaining: 1.01s\n",
+      "119:\tlearn: 20593.5760021\ttotal: 138ms\tremaining: 1.01s\n",
+      "120:\tlearn: 20519.0241688\ttotal: 139ms\tremaining: 1.01s\n",
+      "121:\tlearn: 20451.6547699\ttotal: 140ms\tremaining: 1s\n",
+      "122:\tlearn: 20378.6782219\ttotal: 141ms\tremaining: 1s\n",
+      "123:\tlearn: 20319.3303337\ttotal: 142ms\tremaining: 1s\n",
+      "124:\tlearn: 20275.7440427\ttotal: 143ms\tremaining: 1s\n",
+      "125:\tlearn: 20219.4273104\ttotal: 144ms\tremaining: 999ms\n",
+      "126:\tlearn: 20154.9728187\ttotal: 145ms\tremaining: 998ms\n",
+      "127:\tlearn: 20088.9137715\ttotal: 146ms\tremaining: 996ms\n",
+      "128:\tlearn: 20019.4385091\ttotal: 147ms\tremaining: 995ms\n",
+      "129:\tlearn: 19960.8619927\ttotal: 148ms\tremaining: 994ms\n",
+      "130:\tlearn: 19923.6555048\ttotal: 150ms\tremaining: 992ms\n",
+      "131:\tlearn: 19880.4963382\ttotal: 151ms\tremaining: 991ms\n",
+      "132:\tlearn: 19830.6800653\ttotal: 152ms\tremaining: 990ms\n",
+      "133:\tlearn: 19782.1216703\ttotal: 153ms\tremaining: 988ms\n",
+      "134:\tlearn: 19744.6652594\ttotal: 154ms\tremaining: 987ms\n",
+      "135:\tlearn: 19706.9266553\ttotal: 155ms\tremaining: 985ms\n",
+      "136:\tlearn: 19652.8050158\ttotal: 156ms\tremaining: 984ms\n",
+      "137:\tlearn: 19618.2839231\ttotal: 157ms\tremaining: 982ms\n",
+      "138:\tlearn: 19567.8710954\ttotal: 158ms\tremaining: 981ms\n",
+      "139:\tlearn: 19510.8543023\ttotal: 159ms\tremaining: 979ms\n",
+      "140:\tlearn: 19446.2287690\ttotal: 160ms\tremaining: 978ms\n",
+      "141:\tlearn: 19388.8281182\ttotal: 162ms\tremaining: 976ms\n",
+      "142:\tlearn: 19343.7285519\ttotal: 163ms\tremaining: 975ms\n",
+      "143:\tlearn: 19322.9366139\ttotal: 164ms\tremaining: 973ms\n",
+      "144:\tlearn: 19261.9475568\ttotal: 165ms\tremaining: 972ms\n",
+      "145:\tlearn: 19225.8227315\ttotal: 166ms\tremaining: 970ms\n",
+      "146:\tlearn: 19185.9150158\ttotal: 167ms\tremaining: 969ms\n",
+      "147:\tlearn: 19140.5626477\ttotal: 168ms\tremaining: 967ms\n",
+      "148:\tlearn: 19101.7840315\ttotal: 169ms\tremaining: 966ms\n",
+      "149:\tlearn: 19079.0728326\ttotal: 170ms\tremaining: 965ms\n",
+      "150:\tlearn: 19010.2332584\ttotal: 171ms\tremaining: 964ms\n",
+      "151:\tlearn: 18978.0513019\ttotal: 173ms\tremaining: 963ms\n",
+      "152:\tlearn: 18923.2759494\ttotal: 174ms\tremaining: 961ms\n",
+      "153:\tlearn: 18872.7174473\ttotal: 175ms\tremaining: 960ms\n",
+      "154:\tlearn: 18831.3570495\ttotal: 176ms\tremaining: 960ms\n",
+      "155:\tlearn: 18787.3490362\ttotal: 180ms\tremaining: 972ms\n",
+      "156:\tlearn: 18740.9907960\ttotal: 181ms\tremaining: 972ms\n",
+      "157:\tlearn: 18708.7429129\ttotal: 182ms\tremaining: 972ms\n",
+      "158:\tlearn: 18688.0049045\ttotal: 184ms\tremaining: 971ms\n",
+      "159:\tlearn: 18645.4549849\ttotal: 185ms\tremaining: 970ms\n",
+      "160:\tlearn: 18596.9438575\ttotal: 186ms\tremaining: 969ms\n",
+      "161:\tlearn: 18544.9391056\ttotal: 187ms\tremaining: 969ms\n",
+      "162:\tlearn: 18508.9250032\ttotal: 188ms\tremaining: 968ms\n",
+      "163:\tlearn: 18467.9081536\ttotal: 190ms\tremaining: 967ms\n",
+      "164:\tlearn: 18442.3868172\ttotal: 191ms\tremaining: 966ms\n",
+      "165:\tlearn: 18408.3095387\ttotal: 192ms\tremaining: 966ms\n",
+      "166:\tlearn: 18384.7924275\ttotal: 193ms\tremaining: 965ms\n",
+      "167:\tlearn: 18353.5215072\ttotal: 195ms\tremaining: 964ms\n",
+      "168:\tlearn: 18318.2725231\ttotal: 196ms\tremaining: 963ms\n",
+      "169:\tlearn: 18280.9473196\ttotal: 197ms\tremaining: 962ms\n",
+      "170:\tlearn: 18249.4284589\ttotal: 198ms\tremaining: 961ms\n",
+      "171:\tlearn: 18219.2376639\ttotal: 199ms\tremaining: 960ms\n",
+      "172:\tlearn: 18179.9512846\ttotal: 201ms\tremaining: 959ms\n",
+      "173:\tlearn: 18168.6499431\ttotal: 202ms\tremaining: 958ms\n",
+      "174:\tlearn: 18144.0208351\ttotal: 203ms\tremaining: 957ms\n",
+      "175:\tlearn: 18109.4502060\ttotal: 204ms\tremaining: 956ms\n",
+      "176:\tlearn: 18079.7743534\ttotal: 205ms\tremaining: 955ms\n",
+      "177:\tlearn: 18010.4181581\ttotal: 207ms\tremaining: 954ms\n",
+      "178:\tlearn: 17976.9053982\ttotal: 208ms\tremaining: 953ms\n",
+      "179:\tlearn: 17936.9539363\ttotal: 209ms\tremaining: 952ms\n",
+      "180:\tlearn: 17882.3190779\ttotal: 210ms\tremaining: 951ms\n",
+      "181:\tlearn: 17859.0321956\ttotal: 211ms\tremaining: 950ms\n",
+      "182:\tlearn: 17812.3961603\ttotal: 213ms\tremaining: 949ms\n",
+      "183:\tlearn: 17798.3132171\ttotal: 214ms\tremaining: 948ms\n",
+      "184:\tlearn: 17778.5932682\ttotal: 215ms\tremaining: 946ms\n",
+      "185:\tlearn: 17756.0364465\ttotal: 216ms\tremaining: 945ms\n",
+      "186:\tlearn: 17736.1834861\ttotal: 217ms\tremaining: 944ms\n",
+      "187:\tlearn: 17711.0993350\ttotal: 218ms\tremaining: 943ms\n",
+      "188:\tlearn: 17689.2119806\ttotal: 219ms\tremaining: 942ms\n",
+      "189:\tlearn: 17676.6634608\ttotal: 221ms\tremaining: 941ms\n",
+      "190:\tlearn: 17659.8217341\ttotal: 222ms\tremaining: 940ms\n",
+      "191:\tlearn: 17594.8900182\ttotal: 223ms\tremaining: 938ms\n",
+      "192:\tlearn: 17564.5694647\ttotal: 224ms\tremaining: 937ms\n",
+      "193:\tlearn: 17548.6119015\ttotal: 225ms\tremaining: 936ms\n",
+      "194:\tlearn: 17536.5434047\ttotal: 226ms\tremaining: 934ms\n",
+      "195:\tlearn: 17476.6855403\ttotal: 227ms\tremaining: 933ms\n",
+      "196:\tlearn: 17442.6308401\ttotal: 229ms\tremaining: 932ms\n",
+      "197:\tlearn: 17413.5495612\ttotal: 230ms\tremaining: 930ms\n",
+      "198:\tlearn: 17371.3719048\ttotal: 231ms\tremaining: 929ms\n",
+      "199:\tlearn: 17330.1779345\ttotal: 232ms\tremaining: 928ms\n",
+      "200:\tlearn: 17296.5583885\ttotal: 233ms\tremaining: 927ms\n",
+      "201:\tlearn: 17245.8748309\ttotal: 234ms\tremaining: 925ms\n",
+      "202:\tlearn: 17223.8429385\ttotal: 235ms\tremaining: 924ms\n",
+      "203:\tlearn: 17204.6869901\ttotal: 236ms\tremaining: 922ms\n",
+      "204:\tlearn: 17157.3860495\ttotal: 238ms\tremaining: 921ms\n",
+      "205:\tlearn: 17121.4376484\ttotal: 239ms\tremaining: 920ms\n",
+      "206:\tlearn: 17083.1013866\ttotal: 240ms\tremaining: 919ms\n",
+      "207:\tlearn: 17045.7691172\ttotal: 241ms\tremaining: 918ms\n",
+      "208:\tlearn: 17033.3949697\ttotal: 242ms\tremaining: 917ms\n",
+      "209:\tlearn: 16985.5047592\ttotal: 243ms\tremaining: 916ms\n",
+      "210:\tlearn: 16943.8798965\ttotal: 245ms\tremaining: 915ms\n",
+      "211:\tlearn: 16904.6694651\ttotal: 246ms\tremaining: 913ms\n",
+      "212:\tlearn: 16862.7774843\ttotal: 247ms\tremaining: 912ms\n",
+      "213:\tlearn: 16848.3591871\ttotal: 248ms\tremaining: 911ms\n",
+      "214:\tlearn: 16828.7540753\ttotal: 249ms\tremaining: 909ms\n",
+      "215:\tlearn: 16814.4766392\ttotal: 250ms\tremaining: 908ms\n",
+      "216:\tlearn: 16749.1951903\ttotal: 251ms\tremaining: 907ms\n",
+      "217:\tlearn: 16698.9629940\ttotal: 253ms\tremaining: 907ms\n",
+      "218:\tlearn: 16688.7291303\ttotal: 254ms\tremaining: 905ms\n",
+      "219:\tlearn: 16671.2430462\ttotal: 255ms\tremaining: 904ms\n",
+      "220:\tlearn: 16652.8448607\ttotal: 256ms\tremaining: 903ms\n",
+      "221:\tlearn: 16630.7141839\ttotal: 257ms\tremaining: 901ms\n",
+      "222:\tlearn: 16609.4069906\ttotal: 258ms\tremaining: 900ms\n",
+      "223:\tlearn: 16591.5779025\ttotal: 259ms\tremaining: 898ms\n",
+      "224:\tlearn: 16567.9634540\ttotal: 260ms\tremaining: 897ms\n",
+      "225:\tlearn: 16551.4515996\ttotal: 261ms\tremaining: 895ms\n",
+      "226:\tlearn: 16497.8760024\ttotal: 262ms\tremaining: 894ms\n",
+      "227:\tlearn: 16481.1509754\ttotal: 264ms\tremaining: 893ms\n",
+      "228:\tlearn: 16451.2350826\ttotal: 265ms\tremaining: 891ms\n",
+      "229:\tlearn: 16426.6615880\ttotal: 266ms\tremaining: 890ms\n",
+      "230:\tlearn: 16387.3971532\ttotal: 267ms\tremaining: 888ms\n",
+      "231:\tlearn: 16369.9282195\ttotal: 268ms\tremaining: 887ms\n",
+      "232:\tlearn: 16346.2371097\ttotal: 269ms\tremaining: 886ms\n",
+      "233:\tlearn: 16329.5360171\ttotal: 270ms\tremaining: 884ms\n",
+      "234:\tlearn: 16301.8213245\ttotal: 271ms\tremaining: 883ms\n",
+      "235:\tlearn: 16261.6256919\ttotal: 272ms\tremaining: 882ms\n",
+      "236:\tlearn: 16252.1101365\ttotal: 273ms\tremaining: 880ms\n",
+      "237:\tlearn: 16226.8483469\ttotal: 275ms\tremaining: 879ms\n",
+      "238:\tlearn: 16192.1545521\ttotal: 276ms\tremaining: 878ms\n",
+      "239:\tlearn: 16177.5659223\ttotal: 277ms\tremaining: 876ms\n",
+      "240:\tlearn: 16153.0751982\ttotal: 278ms\tremaining: 875ms\n",
+      "241:\tlearn: 16131.3357314\ttotal: 279ms\tremaining: 873ms\n",
+      "242:\tlearn: 16098.2908926\ttotal: 280ms\tremaining: 872ms\n",
+      "243:\tlearn: 16078.0570419\ttotal: 281ms\tremaining: 871ms\n",
+      "244:\tlearn: 16055.7269945\ttotal: 282ms\tremaining: 869ms\n",
+      "245:\tlearn: 16032.1344681\ttotal: 283ms\tremaining: 868ms\n",
+      "246:\tlearn: 15997.2319989\ttotal: 284ms\tremaining: 867ms\n",
+      "247:\tlearn: 15974.5239529\ttotal: 285ms\tremaining: 865ms\n",
+      "248:\tlearn: 15951.2860600\ttotal: 286ms\tremaining: 864ms\n",
+      "249:\tlearn: 15922.1150112\ttotal: 288ms\tremaining: 863ms\n",
+      "250:\tlearn: 15885.1575994\ttotal: 289ms\tremaining: 862ms\n",
+      "251:\tlearn: 15853.9334166\ttotal: 290ms\tremaining: 860ms\n",
+      "252:\tlearn: 15842.3719221\ttotal: 291ms\tremaining: 859ms\n",
+      "253:\tlearn: 15833.8455510\ttotal: 292ms\tremaining: 858ms\n",
+      "254:\tlearn: 15788.8855126\ttotal: 293ms\tremaining: 857ms\n",
+      "255:\tlearn: 15761.6190111\ttotal: 294ms\tremaining: 855ms\n",
+      "256:\tlearn: 15755.3889040\ttotal: 295ms\tremaining: 854ms\n",
+      "257:\tlearn: 15746.1724564\ttotal: 296ms\tremaining: 853ms\n",
+      "258:\tlearn: 15736.3750141\ttotal: 298ms\tremaining: 851ms\n",
+      "259:\tlearn: 15695.6524145\ttotal: 299ms\tremaining: 850ms\n",
+      "260:\tlearn: 15684.2529117\ttotal: 300ms\tremaining: 848ms\n",
+      "261:\tlearn: 15646.7990247\ttotal: 301ms\tremaining: 847ms\n",
+      "262:\tlearn: 15615.2297673\ttotal: 302ms\tremaining: 846ms\n",
+      "263:\tlearn: 15578.3892577\ttotal: 303ms\tremaining: 845ms\n",
+      "264:\tlearn: 15574.2747463\ttotal: 304ms\tremaining: 843ms\n",
+      "265:\tlearn: 15567.2711012\ttotal: 305ms\tremaining: 842ms\n",
+      "266:\tlearn: 15514.1336874\ttotal: 306ms\tremaining: 841ms\n",
+      "267:\tlearn: 15474.9415828\ttotal: 307ms\tremaining: 839ms\n",
+      "268:\tlearn: 15460.7920621\ttotal: 308ms\tremaining: 838ms\n",
+      "269:\tlearn: 15442.7777113\ttotal: 310ms\tremaining: 837ms\n",
+      "270:\tlearn: 15436.3537394\ttotal: 311ms\tremaining: 835ms\n",
+      "271:\tlearn: 15416.4454186\ttotal: 312ms\tremaining: 834ms\n",
+      "272:\tlearn: 15391.5907910\ttotal: 313ms\tremaining: 833ms\n",
+      "273:\tlearn: 15387.8349727\ttotal: 314ms\tremaining: 832ms\n",
+      "274:\tlearn: 15356.8685109\ttotal: 315ms\tremaining: 831ms\n",
+      "275:\tlearn: 15324.8947506\ttotal: 316ms\tremaining: 829ms\n",
+      "276:\tlearn: 15299.7982971\ttotal: 317ms\tremaining: 828ms\n",
+      "277:\tlearn: 15265.4011409\ttotal: 318ms\tremaining: 827ms\n",
+      "278:\tlearn: 15256.3180900\ttotal: 319ms\tremaining: 825ms\n",
+      "279:\tlearn: 15219.4428066\ttotal: 321ms\tremaining: 824ms\n",
+      "280:\tlearn: 15172.0567842\ttotal: 322ms\tremaining: 823ms\n",
+      "281:\tlearn: 15153.2248713\ttotal: 323ms\tremaining: 822ms\n",
+      "282:\tlearn: 15127.8306382\ttotal: 324ms\tremaining: 821ms\n",
+      "283:\tlearn: 15106.9621707\ttotal: 325ms\tremaining: 819ms\n",
+      "284:\tlearn: 15070.8735143\ttotal: 326ms\tremaining: 818ms\n",
+      "285:\tlearn: 15064.4267211\ttotal: 327ms\tremaining: 817ms\n",
+      "286:\tlearn: 15054.6943816\ttotal: 328ms\tremaining: 816ms\n",
+      "287:\tlearn: 15011.0082214\ttotal: 329ms\tremaining: 815ms\n",
+      "288:\tlearn: 14986.7260954\ttotal: 331ms\tremaining: 813ms\n",
+      "289:\tlearn: 14956.7896366\ttotal: 332ms\tremaining: 812ms\n",
+      "290:\tlearn: 14930.8325986\ttotal: 333ms\tremaining: 811ms\n",
+      "291:\tlearn: 14907.2938423\ttotal: 334ms\tremaining: 809ms\n",
+      "292:\tlearn: 14872.7043145\ttotal: 335ms\tremaining: 808ms\n",
+      "293:\tlearn: 14863.7625604\ttotal: 336ms\tremaining: 807ms\n",
+      "294:\tlearn: 14838.4306301\ttotal: 337ms\tremaining: 806ms\n",
+      "295:\tlearn: 14814.0037318\ttotal: 338ms\tremaining: 804ms\n",
+      "296:\tlearn: 14801.2410450\ttotal: 339ms\tremaining: 803ms\n",
+      "297:\tlearn: 14774.2757869\ttotal: 340ms\tremaining: 802ms\n",
+      "298:\tlearn: 14749.3547153\ttotal: 342ms\tremaining: 801ms\n",
+      "299:\tlearn: 14707.3870960\ttotal: 343ms\tremaining: 800ms\n",
+      "300:\tlearn: 14683.0479220\ttotal: 344ms\tremaining: 799ms\n",
+      "301:\tlearn: 14652.9722348\ttotal: 345ms\tremaining: 797ms\n",
+      "302:\tlearn: 14616.9715407\ttotal: 346ms\tremaining: 796ms\n",
+      "303:\tlearn: 14594.8058578\ttotal: 347ms\tremaining: 795ms\n",
+      "304:\tlearn: 14567.4111177\ttotal: 348ms\tremaining: 794ms\n",
+      "305:\tlearn: 14541.4267816\ttotal: 350ms\tremaining: 793ms\n",
+      "306:\tlearn: 14511.9287473\ttotal: 351ms\tremaining: 792ms\n",
+      "307:\tlearn: 14503.7289538\ttotal: 352ms\tremaining: 790ms\n",
+      "308:\tlearn: 14473.1588492\ttotal: 353ms\tremaining: 789ms\n",
+      "309:\tlearn: 14444.8492792\ttotal: 354ms\tremaining: 788ms\n",
+      "310:\tlearn: 14416.5885033\ttotal: 355ms\tremaining: 787ms\n",
+      "311:\tlearn: 14395.1594449\ttotal: 356ms\tremaining: 785ms\n",
+      "312:\tlearn: 14358.0560428\ttotal: 357ms\tremaining: 784ms\n",
+      "313:\tlearn: 14334.3699755\ttotal: 359ms\tremaining: 784ms\n",
+      "314:\tlearn: 14314.5649856\ttotal: 360ms\tremaining: 783ms\n",
+      "315:\tlearn: 14287.6021594\ttotal: 361ms\tremaining: 782ms\n",
+      "316:\tlearn: 14266.4556905\ttotal: 362ms\tremaining: 781ms\n",
+      "317:\tlearn: 14246.8853070\ttotal: 363ms\tremaining: 779ms\n",
+      "318:\tlearn: 14209.4835116\ttotal: 365ms\tremaining: 778ms\n",
+      "319:\tlearn: 14182.7104995\ttotal: 366ms\tremaining: 777ms\n",
+      "320:\tlearn: 14162.5027390\ttotal: 367ms\tremaining: 776ms\n",
+      "321:\tlearn: 14134.1030712\ttotal: 368ms\tremaining: 775ms\n",
+      "322:\tlearn: 14109.4028024\ttotal: 370ms\tremaining: 775ms\n",
+      "323:\tlearn: 14085.9550412\ttotal: 371ms\tremaining: 774ms\n",
+      "324:\tlearn: 14064.3762202\ttotal: 372ms\tremaining: 773ms\n",
+      "325:\tlearn: 14047.2974402\ttotal: 373ms\tremaining: 772ms\n",
+      "326:\tlearn: 14028.4867649\ttotal: 374ms\tremaining: 771ms\n",
+      "327:\tlearn: 14010.7707001\ttotal: 376ms\tremaining: 769ms\n",
+      "328:\tlearn: 13985.7048824\ttotal: 377ms\tremaining: 768ms\n",
+      "329:\tlearn: 13959.4192956\ttotal: 378ms\tremaining: 768ms\n",
+      "330:\tlearn: 13934.4854701\ttotal: 379ms\tremaining: 767ms\n",
+      "331:\tlearn: 13910.6104624\ttotal: 380ms\tremaining: 766ms\n",
+      "332:\tlearn: 13890.4928842\ttotal: 382ms\tremaining: 764ms\n",
+      "333:\tlearn: 13866.4049749\ttotal: 383ms\tremaining: 763ms\n",
+      "334:\tlearn: 13840.7687645\ttotal: 384ms\tremaining: 762ms\n",
+      "335:\tlearn: 13828.2670685\ttotal: 385ms\tremaining: 761ms\n",
+      "336:\tlearn: 13802.2909672\ttotal: 386ms\tremaining: 760ms\n",
+      "337:\tlearn: 13786.7316279\ttotal: 388ms\tremaining: 759ms\n",
+      "338:\tlearn: 13764.8425454\ttotal: 389ms\tremaining: 758ms\n",
+      "339:\tlearn: 13745.6376725\ttotal: 390ms\tremaining: 757ms\n",
+      "340:\tlearn: 13723.6842566\ttotal: 391ms\tremaining: 756ms\n",
+      "341:\tlearn: 13698.9449813\ttotal: 393ms\tremaining: 755ms\n",
+      "342:\tlearn: 13679.9003039\ttotal: 394ms\tremaining: 754ms\n",
+      "343:\tlearn: 13670.4824690\ttotal: 395ms\tremaining: 753ms\n",
+      "344:\tlearn: 13668.2677462\ttotal: 396ms\tremaining: 752ms\n",
+      "345:\tlearn: 13645.2159603\ttotal: 397ms\tremaining: 751ms\n",
+      "346:\tlearn: 13613.1362073\ttotal: 399ms\tremaining: 750ms\n",
+      "347:\tlearn: 13599.1991662\ttotal: 400ms\tremaining: 749ms\n",
+      "348:\tlearn: 13588.8846885\ttotal: 401ms\tremaining: 748ms\n",
+      "349:\tlearn: 13567.2923037\ttotal: 402ms\tremaining: 747ms\n",
+      "350:\tlearn: 13543.9735747\ttotal: 403ms\tremaining: 745ms\n",
+      "351:\tlearn: 13526.9321380\ttotal: 404ms\tremaining: 744ms\n",
+      "352:\tlearn: 13524.8332007\ttotal: 405ms\tremaining: 743ms\n",
+      "353:\tlearn: 13503.2900674\ttotal: 406ms\tremaining: 742ms\n",
+      "354:\tlearn: 13484.7292519\ttotal: 408ms\tremaining: 741ms\n",
+      "355:\tlearn: 13461.0941302\ttotal: 409ms\tremaining: 739ms\n",
+      "356:\tlearn: 13442.5390841\ttotal: 410ms\tremaining: 738ms\n",
+      "357:\tlearn: 13426.4016355\ttotal: 411ms\tremaining: 737ms\n",
+      "358:\tlearn: 13401.2305315\ttotal: 412ms\tremaining: 736ms\n",
+      "359:\tlearn: 13377.3239318\ttotal: 413ms\tremaining: 735ms\n",
+      "360:\tlearn: 13359.7137366\ttotal: 415ms\tremaining: 735ms\n",
+      "361:\tlearn: 13334.4895810\ttotal: 416ms\tremaining: 734ms\n",
+      "362:\tlearn: 13323.6990721\ttotal: 417ms\tremaining: 732ms\n",
+      "363:\tlearn: 13296.9148709\ttotal: 418ms\tremaining: 731ms\n",
+      "364:\tlearn: 13272.4474116\ttotal: 419ms\tremaining: 730ms\n",
+      "365:\tlearn: 13243.2915384\ttotal: 421ms\tremaining: 729ms\n",
+      "366:\tlearn: 13227.5511985\ttotal: 422ms\tremaining: 728ms\n",
+      "367:\tlearn: 13200.0537609\ttotal: 423ms\tremaining: 726ms\n",
+      "368:\tlearn: 13178.6644011\ttotal: 424ms\tremaining: 725ms\n",
+      "369:\tlearn: 13163.4538127\ttotal: 425ms\tremaining: 724ms\n",
+      "370:\tlearn: 13161.5626780\ttotal: 426ms\tremaining: 723ms\n",
+      "371:\tlearn: 13135.0294040\ttotal: 427ms\tremaining: 721ms\n",
+      "372:\tlearn: 13113.1909409\ttotal: 428ms\tremaining: 720ms\n",
+      "373:\tlearn: 13111.3058531\ttotal: 430ms\tremaining: 719ms\n",
+      "374:\tlearn: 13075.2854878\ttotal: 431ms\tremaining: 718ms\n",
+      "375:\tlearn: 13048.8813604\ttotal: 432ms\tremaining: 717ms\n",
+      "376:\tlearn: 13025.9282349\ttotal: 433ms\tremaining: 715ms\n",
+      "377:\tlearn: 13003.9506336\ttotal: 434ms\tremaining: 714ms\n",
+      "378:\tlearn: 12984.7532116\ttotal: 435ms\tremaining: 713ms\n",
+      "379:\tlearn: 12962.8396967\ttotal: 436ms\tremaining: 712ms\n",
+      "380:\tlearn: 12942.5003551\ttotal: 437ms\tremaining: 711ms\n",
+      "381:\tlearn: 12915.2681543\ttotal: 438ms\tremaining: 709ms\n",
+      "382:\tlearn: 12895.2002279\ttotal: 440ms\tremaining: 708ms\n",
+      "383:\tlearn: 12879.4610794\ttotal: 441ms\tremaining: 707ms\n",
+      "384:\tlearn: 12852.9161629\ttotal: 442ms\tremaining: 706ms\n",
+      "385:\tlearn: 12835.1156077\ttotal: 443ms\tremaining: 705ms\n",
+      "386:\tlearn: 12810.4753559\ttotal: 444ms\tremaining: 703ms\n",
+      "387:\tlearn: 12785.1738565\ttotal: 445ms\tremaining: 702ms\n",
+      "388:\tlearn: 12768.3689388\ttotal: 446ms\tremaining: 701ms\n",
+      "389:\tlearn: 12741.9595956\ttotal: 447ms\tremaining: 700ms\n",
+      "390:\tlearn: 12722.7996125\ttotal: 449ms\tremaining: 699ms\n",
+      "391:\tlearn: 12706.2503701\ttotal: 450ms\tremaining: 698ms\n",
+      "392:\tlearn: 12686.8042151\ttotal: 451ms\tremaining: 696ms\n",
+      "393:\tlearn: 12665.0591896\ttotal: 452ms\tremaining: 695ms\n",
+      "394:\tlearn: 12640.2259842\ttotal: 453ms\tremaining: 694ms\n",
+      "395:\tlearn: 12628.5332052\ttotal: 495ms\tremaining: 755ms\n",
+      "396:\tlearn: 12626.7813211\ttotal: 499ms\tremaining: 757ms\n",
+      "397:\tlearn: 12625.1120466\ttotal: 500ms\tremaining: 757ms\n",
+      "398:\tlearn: 12623.4442794\ttotal: 502ms\tremaining: 756ms\n",
+      "399:\tlearn: 12605.1522764\ttotal: 503ms\tremaining: 755ms\n",
+      "400:\tlearn: 12588.3468443\ttotal: 505ms\tremaining: 754ms\n",
+      "401:\tlearn: 12580.8477427\ttotal: 506ms\tremaining: 753ms\n",
+      "402:\tlearn: 12557.8000063\ttotal: 508ms\tremaining: 752ms\n",
+      "403:\tlearn: 12556.2445208\ttotal: 509ms\tremaining: 751ms\n",
+      "404:\tlearn: 12534.8865345\ttotal: 510ms\tremaining: 750ms\n",
+      "405:\tlearn: 12517.4753954\ttotal: 512ms\tremaining: 748ms\n",
+      "406:\tlearn: 12496.3239192\ttotal: 513ms\tremaining: 747ms\n",
+      "407:\tlearn: 12475.5049038\ttotal: 514ms\tremaining: 746ms\n",
+      "408:\tlearn: 12463.4544829\ttotal: 515ms\tremaining: 745ms\n",
+      "409:\tlearn: 12439.6044994\ttotal: 517ms\tremaining: 743ms\n",
+      "410:\tlearn: 12413.7833909\ttotal: 518ms\tremaining: 742ms\n",
+      "411:\tlearn: 12412.2250785\ttotal: 519ms\tremaining: 741ms\n",
+      "412:\tlearn: 12389.4843113\ttotal: 520ms\tremaining: 740ms\n",
+      "413:\tlearn: 12371.9538265\ttotal: 522ms\tremaining: 738ms\n",
+      "414:\tlearn: 12352.4179608\ttotal: 523ms\tremaining: 737ms\n",
+      "415:\tlearn: 12333.1881816\ttotal: 524ms\tremaining: 736ms\n",
+      "416:\tlearn: 12316.0621425\ttotal: 525ms\tremaining: 735ms\n",
+      "417:\tlearn: 12303.8932317\ttotal: 527ms\tremaining: 733ms\n",
+      "418:\tlearn: 12284.4339899\ttotal: 528ms\tremaining: 732ms\n",
+      "419:\tlearn: 12261.7799901\ttotal: 529ms\tremaining: 731ms\n",
+      "420:\tlearn: 12247.4449385\ttotal: 531ms\tremaining: 730ms\n",
+      "421:\tlearn: 12225.6253556\ttotal: 532ms\tremaining: 729ms\n",
+      "422:\tlearn: 12207.0822627\ttotal: 533ms\tremaining: 727ms\n",
+      "423:\tlearn: 12188.2215919\ttotal: 534ms\tremaining: 726ms\n",
+      "424:\tlearn: 12165.5300213\ttotal: 536ms\tremaining: 725ms\n",
+      "425:\tlearn: 12139.5948067\ttotal: 537ms\tremaining: 724ms\n",
+      "426:\tlearn: 12123.7583369\ttotal: 538ms\tremaining: 722ms\n",
+      "427:\tlearn: 12122.3112327\ttotal: 539ms\tremaining: 721ms\n",
+      "428:\tlearn: 12120.8994750\ttotal: 541ms\tremaining: 720ms\n",
+      "429:\tlearn: 12099.7274431\ttotal: 542ms\tremaining: 718ms\n",
+      "430:\tlearn: 12074.5620472\ttotal: 543ms\tremaining: 717ms\n",
+      "431:\tlearn: 12047.8525900\ttotal: 545ms\tremaining: 716ms\n",
+      "432:\tlearn: 12031.0324407\ttotal: 546ms\tremaining: 715ms\n",
+      "433:\tlearn: 12029.8873458\ttotal: 547ms\tremaining: 713ms\n",
+      "434:\tlearn: 12028.4816838\ttotal: 548ms\tremaining: 712ms\n",
+      "435:\tlearn: 12009.3785848\ttotal: 549ms\tremaining: 711ms\n",
+      "436:\tlearn: 11986.6629706\ttotal: 550ms\tremaining: 709ms\n",
+      "437:\tlearn: 11975.9768926\ttotal: 552ms\tremaining: 708ms\n",
+      "438:\tlearn: 11974.6644550\ttotal: 553ms\tremaining: 707ms\n",
+      "439:\tlearn: 11959.1269779\ttotal: 554ms\tremaining: 706ms\n",
+      "440:\tlearn: 11938.5312842\ttotal: 556ms\tremaining: 704ms\n",
+      "441:\tlearn: 11920.4705843\ttotal: 557ms\tremaining: 703ms\n",
+      "442:\tlearn: 11919.1541636\ttotal: 558ms\tremaining: 702ms\n",
+      "443:\tlearn: 11905.3219869\ttotal: 560ms\tremaining: 701ms\n",
+      "444:\tlearn: 11886.5585358\ttotal: 561ms\tremaining: 700ms\n",
+      "445:\tlearn: 11885.2645048\ttotal: 562ms\tremaining: 698ms\n",
+      "446:\tlearn: 11869.5958886\ttotal: 563ms\tremaining: 697ms\n",
+      "447:\tlearn: 11841.7383069\ttotal: 565ms\tremaining: 696ms\n",
+      "448:\tlearn: 11832.1954107\ttotal: 566ms\tremaining: 695ms\n",
+      "449:\tlearn: 11813.9434128\ttotal: 567ms\tremaining: 694ms\n",
+      "450:\tlearn: 11808.3215353\ttotal: 569ms\tremaining: 692ms\n",
+      "451:\tlearn: 11798.0733180\ttotal: 570ms\tremaining: 691ms\n",
+      "452:\tlearn: 11781.2337216\ttotal: 571ms\tremaining: 690ms\n",
+      "453:\tlearn: 11758.6703526\ttotal: 573ms\tremaining: 689ms\n",
+      "454:\tlearn: 11757.4711840\ttotal: 574ms\tremaining: 687ms\n",
+      "455:\tlearn: 11734.2938982\ttotal: 575ms\tremaining: 686ms\n",
+      "456:\tlearn: 11718.4614734\ttotal: 576ms\tremaining: 685ms\n",
+      "457:\tlearn: 11695.8001153\ttotal: 578ms\tremaining: 684ms\n",
+      "458:\tlearn: 11671.4534579\ttotal: 579ms\tremaining: 683ms\n",
+      "459:\tlearn: 11655.9818494\ttotal: 580ms\tremaining: 681ms\n",
+      "460:\tlearn: 11638.3331150\ttotal: 582ms\tremaining: 680ms\n",
+      "461:\tlearn: 11620.3479225\ttotal: 584ms\tremaining: 680ms\n",
+      "462:\tlearn: 11597.5756371\ttotal: 585ms\tremaining: 679ms\n",
+      "463:\tlearn: 11576.7995765\ttotal: 586ms\tremaining: 677ms\n",
+      "464:\tlearn: 11552.9633857\ttotal: 588ms\tremaining: 676ms\n",
+      "465:\tlearn: 11526.9588952\ttotal: 589ms\tremaining: 675ms\n",
+      "466:\tlearn: 11504.6003166\ttotal: 590ms\tremaining: 673ms\n",
+      "467:\tlearn: 11503.4238968\ttotal: 591ms\tremaining: 672ms\n",
+      "468:\tlearn: 11502.2163051\ttotal: 592ms\tremaining: 670ms\n",
+      "469:\tlearn: 11501.0338233\ttotal: 593ms\tremaining: 669ms\n",
+      "470:\tlearn: 11485.0453149\ttotal: 594ms\tremaining: 667ms\n",
+      "471:\tlearn: 11483.9306416\ttotal: 595ms\tremaining: 666ms\n",
+      "472:\tlearn: 11466.2420262\ttotal: 597ms\tremaining: 665ms\n",
+      "473:\tlearn: 11454.2141913\ttotal: 598ms\tremaining: 664ms\n",
+      "474:\tlearn: 11433.8235552\ttotal: 599ms\tremaining: 663ms\n",
+      "475:\tlearn: 11412.8740945\ttotal: 601ms\tremaining: 661ms\n",
+      "476:\tlearn: 11399.9557191\ttotal: 602ms\tremaining: 660ms\n",
+      "477:\tlearn: 11387.7555007\ttotal: 603ms\tremaining: 658ms\n",
+      "478:\tlearn: 11361.7917910\ttotal: 604ms\tremaining: 657ms\n",
+      "479:\tlearn: 11347.4236171\ttotal: 605ms\tremaining: 655ms\n",
+      "480:\tlearn: 11346.2832538\ttotal: 606ms\tremaining: 654ms\n",
+      "481:\tlearn: 11334.7751484\ttotal: 607ms\tremaining: 652ms\n",
+      "482:\tlearn: 11310.6215350\ttotal: 608ms\tremaining: 651ms\n",
+      "483:\tlearn: 11294.5161961\ttotal: 609ms\tremaining: 650ms\n",
+      "484:\tlearn: 11271.7019917\ttotal: 610ms\tremaining: 648ms\n",
+      "485:\tlearn: 11251.1381199\ttotal: 612ms\tremaining: 647ms\n",
+      "486:\tlearn: 11238.0141349\ttotal: 613ms\tremaining: 645ms\n",
+      "487:\tlearn: 11221.2319698\ttotal: 614ms\tremaining: 644ms\n",
+      "488:\tlearn: 11201.9585584\ttotal: 615ms\tremaining: 643ms\n",
+      "489:\tlearn: 11188.5883147\ttotal: 616ms\tremaining: 641ms\n",
+      "490:\tlearn: 11170.7305953\ttotal: 617ms\tremaining: 640ms\n",
+      "491:\tlearn: 11158.5365729\ttotal: 618ms\tremaining: 638ms\n",
+      "492:\tlearn: 11133.3113729\ttotal: 619ms\tremaining: 637ms\n",
+      "493:\tlearn: 11132.1849065\ttotal: 620ms\tremaining: 635ms\n",
+      "494:\tlearn: 11117.0108027\ttotal: 621ms\tremaining: 634ms\n",
+      "495:\tlearn: 11115.9055252\ttotal: 623ms\tremaining: 633ms\n",
+      "496:\tlearn: 11114.8576221\ttotal: 624ms\tremaining: 631ms\n",
+      "497:\tlearn: 11110.1374333\ttotal: 625ms\tremaining: 630ms\n",
+      "498:\tlearn: 11095.4348789\ttotal: 626ms\tremaining: 628ms\n",
+      "499:\tlearn: 11092.9616087\ttotal: 627ms\tremaining: 627ms\n",
+      "500:\tlearn: 11082.3909670\ttotal: 628ms\tremaining: 625ms\n",
+      "501:\tlearn: 11066.2002147\ttotal: 629ms\tremaining: 624ms\n",
+      "502:\tlearn: 11041.5579642\ttotal: 630ms\tremaining: 623ms\n",
+      "503:\tlearn: 11028.5531919\ttotal: 631ms\tremaining: 621ms\n",
+      "504:\tlearn: 11027.5394607\ttotal: 632ms\tremaining: 620ms\n",
+      "505:\tlearn: 11007.4090884\ttotal: 633ms\tremaining: 618ms\n",
+      "506:\tlearn: 10994.5272624\ttotal: 635ms\tremaining: 617ms\n",
+      "507:\tlearn: 10993.5390340\ttotal: 636ms\tremaining: 616ms\n",
+      "508:\tlearn: 10992.6355554\ttotal: 637ms\tremaining: 614ms\n",
+      "509:\tlearn: 10978.1789427\ttotal: 638ms\tremaining: 613ms\n",
+      "510:\tlearn: 10957.9777745\ttotal: 639ms\tremaining: 611ms\n",
+      "511:\tlearn: 10938.6801856\ttotal: 640ms\tremaining: 610ms\n",
+      "512:\tlearn: 10917.3196726\ttotal: 641ms\tremaining: 609ms\n",
+      "513:\tlearn: 10905.5553620\ttotal: 642ms\tremaining: 607ms\n",
+      "514:\tlearn: 10892.3750448\ttotal: 643ms\tremaining: 606ms\n",
+      "515:\tlearn: 10872.7152892\ttotal: 645ms\tremaining: 605ms\n",
+      "516:\tlearn: 10851.3276338\ttotal: 646ms\tremaining: 603ms\n",
+      "517:\tlearn: 10836.7173699\ttotal: 647ms\tremaining: 602ms\n",
+      "518:\tlearn: 10835.7567090\ttotal: 648ms\tremaining: 600ms\n",
+      "519:\tlearn: 10823.3670082\ttotal: 649ms\tremaining: 599ms\n",
+      "520:\tlearn: 10808.4736825\ttotal: 650ms\tremaining: 598ms\n",
+      "521:\tlearn: 10778.2099198\ttotal: 651ms\tremaining: 596ms\n",
+      "522:\tlearn: 10760.1923614\ttotal: 652ms\tremaining: 595ms\n",
+      "523:\tlearn: 10734.8633278\ttotal: 653ms\tremaining: 594ms\n",
+      "524:\tlearn: 10722.2412774\ttotal: 655ms\tremaining: 592ms\n",
+      "525:\tlearn: 10710.4001685\ttotal: 656ms\tremaining: 591ms\n",
+      "526:\tlearn: 10693.0745271\ttotal: 657ms\tremaining: 589ms\n",
+      "527:\tlearn: 10681.3373441\ttotal: 658ms\tremaining: 588ms\n",
+      "528:\tlearn: 10665.6653008\ttotal: 659ms\tremaining: 587ms\n",
+      "529:\tlearn: 10651.9920806\ttotal: 660ms\tremaining: 585ms\n",
+      "530:\tlearn: 10632.8409025\ttotal: 661ms\tremaining: 584ms\n",
+      "531:\tlearn: 10614.5409510\ttotal: 662ms\tremaining: 583ms\n",
+      "532:\tlearn: 10606.1455515\ttotal: 664ms\tremaining: 581ms\n",
+      "533:\tlearn: 10590.5095634\ttotal: 665ms\tremaining: 580ms\n",
+      "534:\tlearn: 10575.4853333\ttotal: 666ms\tremaining: 579ms\n",
+      "535:\tlearn: 10558.4905203\ttotal: 667ms\tremaining: 577ms\n",
+      "536:\tlearn: 10534.7423627\ttotal: 668ms\tremaining: 576ms\n",
+      "537:\tlearn: 10517.4806015\ttotal: 669ms\tremaining: 575ms\n",
+      "538:\tlearn: 10501.7710119\ttotal: 670ms\tremaining: 573ms\n",
+      "539:\tlearn: 10500.3114321\ttotal: 671ms\tremaining: 572ms\n",
+      "540:\tlearn: 10487.1937557\ttotal: 672ms\tremaining: 571ms\n",
+      "541:\tlearn: 10469.8020266\ttotal: 674ms\tremaining: 569ms\n",
+      "542:\tlearn: 10450.9558167\ttotal: 675ms\tremaining: 568ms\n",
+      "543:\tlearn: 10430.6815160\ttotal: 676ms\tremaining: 567ms\n",
+      "544:\tlearn: 10429.8953188\ttotal: 677ms\tremaining: 565ms\n",
+      "545:\tlearn: 10414.1911829\ttotal: 678ms\tremaining: 564ms\n",
+      "546:\tlearn: 10400.7177437\ttotal: 679ms\tremaining: 563ms\n",
+      "547:\tlearn: 10379.4510621\ttotal: 680ms\tremaining: 561ms\n",
+      "548:\tlearn: 10376.7185857\ttotal: 681ms\tremaining: 560ms\n",
+      "549:\tlearn: 10365.3713360\ttotal: 683ms\tremaining: 558ms\n",
+      "550:\tlearn: 10355.2418162\ttotal: 684ms\tremaining: 557ms\n",
+      "551:\tlearn: 10354.4906451\ttotal: 685ms\tremaining: 556ms\n",
+      "552:\tlearn: 10343.4705966\ttotal: 686ms\tremaining: 554ms\n",
+      "553:\tlearn: 10328.8575741\ttotal: 687ms\tremaining: 553ms\n",
+      "554:\tlearn: 10315.2108357\ttotal: 688ms\tremaining: 552ms\n",
+      "555:\tlearn: 10314.3342909\ttotal: 689ms\tremaining: 550ms\n",
+      "556:\tlearn: 10300.5294069\ttotal: 690ms\tremaining: 549ms\n",
+      "557:\tlearn: 10287.8560672\ttotal: 691ms\tremaining: 548ms\n",
+      "558:\tlearn: 10272.0362849\ttotal: 692ms\tremaining: 546ms\n",
+      "559:\tlearn: 10262.7933043\ttotal: 693ms\tremaining: 545ms\n",
+      "560:\tlearn: 10245.5749346\ttotal: 694ms\tremaining: 543ms\n",
+      "561:\tlearn: 10231.1777488\ttotal: 696ms\tremaining: 542ms\n",
+      "562:\tlearn: 10216.1049825\ttotal: 697ms\tremaining: 541ms\n",
+      "563:\tlearn: 10215.0529308\ttotal: 698ms\tremaining: 539ms\n",
+      "564:\tlearn: 10204.3246821\ttotal: 699ms\tremaining: 538ms\n",
+      "565:\tlearn: 10190.7409341\ttotal: 700ms\tremaining: 537ms\n",
+      "566:\tlearn: 10189.3305032\ttotal: 701ms\tremaining: 535ms\n",
+      "567:\tlearn: 10174.3980659\ttotal: 702ms\tremaining: 534ms\n",
+      "568:\tlearn: 10157.5127432\ttotal: 703ms\tremaining: 533ms\n",
+      "569:\tlearn: 10156.7590214\ttotal: 704ms\tremaining: 531ms\n",
+      "570:\tlearn: 10144.8567001\ttotal: 706ms\tremaining: 530ms\n",
+      "571:\tlearn: 10133.2642019\ttotal: 707ms\tremaining: 529ms\n",
+      "572:\tlearn: 10118.4002567\ttotal: 708ms\tremaining: 528ms\n",
+      "573:\tlearn: 10105.5297454\ttotal: 709ms\tremaining: 526ms\n",
+      "574:\tlearn: 10084.9902359\ttotal: 710ms\tremaining: 525ms\n",
+      "575:\tlearn: 10083.6733856\ttotal: 711ms\tremaining: 524ms\n",
+      "576:\tlearn: 10069.3410607\ttotal: 712ms\tremaining: 522ms\n",
+      "577:\tlearn: 10050.5479738\ttotal: 713ms\tremaining: 521ms\n",
+      "578:\tlearn: 10033.7047288\ttotal: 715ms\tremaining: 520ms\n",
+      "579:\tlearn: 10017.9971461\ttotal: 716ms\tremaining: 518ms\n",
+      "580:\tlearn: 10002.2052600\ttotal: 717ms\tremaining: 517ms\n",
+      "581:\tlearn: 9990.6793443\ttotal: 718ms\tremaining: 516ms\n",
+      "582:\tlearn: 9978.5470481\ttotal: 719ms\tremaining: 514ms\n",
+      "583:\tlearn: 9966.2528121\ttotal: 720ms\tremaining: 513ms\n",
+      "584:\tlearn: 9952.9502169\ttotal: 721ms\tremaining: 512ms\n",
+      "585:\tlearn: 9939.3140783\ttotal: 722ms\tremaining: 510ms\n",
+      "586:\tlearn: 9927.1599247\ttotal: 723ms\tremaining: 509ms\n",
+      "587:\tlearn: 9915.0286051\ttotal: 725ms\tremaining: 508ms\n",
+      "588:\tlearn: 9901.7645443\ttotal: 726ms\tremaining: 506ms\n",
+      "589:\tlearn: 9892.7023129\ttotal: 727ms\tremaining: 505ms\n",
+      "590:\tlearn: 9883.6738125\ttotal: 728ms\tremaining: 504ms\n",
+      "591:\tlearn: 9871.3992651\ttotal: 729ms\tremaining: 502ms\n",
+      "592:\tlearn: 9856.9010611\ttotal: 730ms\tremaining: 501ms\n",
+      "593:\tlearn: 9856.1160124\ttotal: 731ms\tremaining: 500ms\n",
+      "594:\tlearn: 9848.9270886\ttotal: 732ms\tremaining: 498ms\n",
+      "595:\tlearn: 9838.8519421\ttotal: 733ms\tremaining: 497ms\n",
+      "596:\tlearn: 9825.3874295\ttotal: 734ms\tremaining: 496ms\n",
+      "597:\tlearn: 9810.6573282\ttotal: 735ms\tremaining: 494ms\n",
+      "598:\tlearn: 9809.8960638\ttotal: 736ms\tremaining: 493ms\n",
+      "599:\tlearn: 9798.8503414\ttotal: 737ms\tremaining: 492ms\n",
+      "600:\tlearn: 9791.0188071\ttotal: 739ms\tremaining: 490ms\n",
+      "601:\tlearn: 9775.7752943\ttotal: 740ms\tremaining: 489ms\n",
+      "602:\tlearn: 9759.7587800\ttotal: 741ms\tremaining: 488ms\n",
+      "603:\tlearn: 9745.2603960\ttotal: 742ms\tremaining: 486ms\n",
+      "604:\tlearn: 9744.5407412\ttotal: 743ms\tremaining: 485ms\n",
+      "605:\tlearn: 9730.0427179\ttotal: 744ms\tremaining: 484ms\n",
+      "606:\tlearn: 9719.7788921\ttotal: 746ms\tremaining: 483ms\n",
+      "607:\tlearn: 9704.4881338\ttotal: 747ms\tremaining: 482ms\n",
+      "608:\tlearn: 9694.4588488\ttotal: 752ms\tremaining: 483ms\n",
+      "609:\tlearn: 9677.3624030\ttotal: 753ms\tremaining: 482ms\n",
+      "610:\tlearn: 9672.1469755\ttotal: 755ms\tremaining: 480ms\n",
+      "611:\tlearn: 9654.9759254\ttotal: 756ms\tremaining: 480ms\n",
+      "612:\tlearn: 9639.6531062\ttotal: 759ms\tremaining: 479ms\n",
+      "613:\tlearn: 9625.9456460\ttotal: 761ms\tremaining: 478ms\n",
+      "614:\tlearn: 9616.7556653\ttotal: 762ms\tremaining: 477ms\n",
+      "615:\tlearn: 9608.3287209\ttotal: 764ms\tremaining: 476ms\n",
+      "616:\tlearn: 9594.3513513\ttotal: 765ms\tremaining: 475ms\n",
+      "617:\tlearn: 9579.3395970\ttotal: 766ms\tremaining: 474ms\n",
+      "618:\tlearn: 9578.1432400\ttotal: 768ms\tremaining: 472ms\n",
+      "619:\tlearn: 9555.8986786\ttotal: 769ms\tremaining: 471ms\n",
+      "620:\tlearn: 9547.6357981\ttotal: 770ms\tremaining: 470ms\n",
+      "621:\tlearn: 9537.6761400\ttotal: 772ms\tremaining: 469ms\n",
+      "622:\tlearn: 9519.4755458\ttotal: 773ms\tremaining: 468ms\n",
+      "623:\tlearn: 9500.8395371\ttotal: 774ms\tremaining: 467ms\n",
+      "624:\tlearn: 9489.3170032\ttotal: 776ms\tremaining: 465ms\n",
+      "625:\tlearn: 9479.9493479\ttotal: 777ms\tremaining: 464ms\n",
+      "626:\tlearn: 9478.6036171\ttotal: 778ms\tremaining: 463ms\n",
+      "627:\tlearn: 9458.6502453\ttotal: 780ms\tremaining: 462ms\n",
+      "628:\tlearn: 9441.6684980\ttotal: 781ms\tremaining: 461ms\n",
+      "629:\tlearn: 9426.2217527\ttotal: 782ms\tremaining: 459ms\n",
+      "630:\tlearn: 9417.6690140\ttotal: 783ms\tremaining: 458ms\n",
+      "631:\tlearn: 9399.4584696\ttotal: 784ms\tremaining: 457ms\n",
+      "632:\tlearn: 9398.1527160\ttotal: 785ms\tremaining: 455ms\n",
+      "633:\tlearn: 9384.4385248\ttotal: 787ms\tremaining: 454ms\n",
+      "634:\tlearn: 9369.6338675\ttotal: 788ms\tremaining: 453ms\n",
+      "635:\tlearn: 9359.1657220\ttotal: 789ms\tremaining: 452ms\n",
+      "636:\tlearn: 9347.5997867\ttotal: 790ms\tremaining: 450ms\n",
+      "637:\tlearn: 9338.7870894\ttotal: 792ms\tremaining: 449ms\n",
+      "638:\tlearn: 9327.3048591\ttotal: 793ms\tremaining: 448ms\n",
+      "639:\tlearn: 9309.2437011\ttotal: 794ms\tremaining: 447ms\n",
+      "640:\tlearn: 9299.1973100\ttotal: 795ms\tremaining: 445ms\n",
+      "641:\tlearn: 9282.7627603\ttotal: 796ms\tremaining: 444ms\n",
+      "642:\tlearn: 9273.8936711\ttotal: 797ms\tremaining: 443ms\n",
+      "643:\tlearn: 9262.0722888\ttotal: 798ms\tremaining: 441ms\n",
+      "644:\tlearn: 9247.2907430\ttotal: 800ms\tremaining: 440ms\n",
+      "645:\tlearn: 9229.5579671\ttotal: 801ms\tremaining: 439ms\n",
+      "646:\tlearn: 9210.7685150\ttotal: 802ms\tremaining: 437ms\n",
+      "647:\tlearn: 9199.2259964\ttotal: 803ms\tremaining: 436ms\n",
+      "648:\tlearn: 9197.9521636\ttotal: 804ms\tremaining: 435ms\n",
+      "649:\tlearn: 9196.5375159\ttotal: 805ms\tremaining: 434ms\n",
+      "650:\tlearn: 9188.7495646\ttotal: 806ms\tremaining: 432ms\n",
+      "651:\tlearn: 9176.3150549\ttotal: 807ms\tremaining: 431ms\n",
+      "652:\tlearn: 9165.7253312\ttotal: 809ms\tremaining: 430ms\n",
+      "653:\tlearn: 9154.0392849\ttotal: 810ms\tremaining: 428ms\n",
+      "654:\tlearn: 9143.4919641\ttotal: 811ms\tremaining: 427ms\n",
+      "655:\tlearn: 9131.1876742\ttotal: 812ms\tremaining: 426ms\n",
+      "656:\tlearn: 9115.2594383\ttotal: 813ms\tremaining: 424ms\n",
+      "657:\tlearn: 9100.0727897\ttotal: 814ms\tremaining: 423ms\n",
+      "658:\tlearn: 9089.1681158\ttotal: 815ms\tremaining: 422ms\n",
+      "659:\tlearn: 9072.6507459\ttotal: 816ms\tremaining: 421ms\n",
+      "660:\tlearn: 9066.2377221\ttotal: 817ms\tremaining: 419ms\n",
+      "661:\tlearn: 9065.1809279\ttotal: 819ms\tremaining: 418ms\n",
+      "662:\tlearn: 9053.7255232\ttotal: 820ms\tremaining: 417ms\n",
+      "663:\tlearn: 9034.1495900\ttotal: 821ms\tremaining: 415ms\n",
+      "664:\tlearn: 9020.5218903\ttotal: 822ms\tremaining: 414ms\n",
+      "665:\tlearn: 9005.1900319\ttotal: 823ms\tremaining: 413ms\n",
+      "666:\tlearn: 8991.3256081\ttotal: 824ms\tremaining: 412ms\n",
+      "667:\tlearn: 8985.0346026\ttotal: 825ms\tremaining: 410ms\n",
+      "668:\tlearn: 8968.5017761\ttotal: 827ms\tremaining: 409ms\n",
+      "669:\tlearn: 8961.2314167\ttotal: 828ms\tremaining: 408ms\n",
+      "670:\tlearn: 8951.5184338\ttotal: 829ms\tremaining: 406ms\n",
+      "671:\tlearn: 8940.0040378\ttotal: 830ms\tremaining: 405ms\n",
+      "672:\tlearn: 8932.7897672\ttotal: 831ms\tremaining: 404ms\n",
+      "673:\tlearn: 8922.0524388\ttotal: 832ms\tremaining: 403ms\n",
+      "674:\tlearn: 8917.8916161\ttotal: 833ms\tremaining: 401ms\n",
+      "675:\tlearn: 8902.5692835\ttotal: 834ms\tremaining: 400ms\n",
+      "676:\tlearn: 8893.4145511\ttotal: 836ms\tremaining: 399ms\n",
+      "677:\tlearn: 8881.9397334\ttotal: 837ms\tremaining: 397ms\n",
+      "678:\tlearn: 8868.0057111\ttotal: 838ms\tremaining: 396ms\n",
+      "679:\tlearn: 8847.8459188\ttotal: 839ms\tremaining: 395ms\n",
+      "680:\tlearn: 8847.1047970\ttotal: 840ms\tremaining: 393ms\n",
+      "681:\tlearn: 8837.4460018\ttotal: 841ms\tremaining: 392ms\n",
+      "682:\tlearn: 8826.0029136\ttotal: 842ms\tremaining: 391ms\n",
+      "683:\tlearn: 8824.7891974\ttotal: 843ms\tremaining: 390ms\n",
+      "684:\tlearn: 8809.2488966\ttotal: 844ms\tremaining: 388ms\n",
+      "685:\tlearn: 8795.1270670\ttotal: 845ms\tremaining: 387ms\n",
+      "686:\tlearn: 8789.1223211\ttotal: 847ms\tremaining: 386ms\n",
+      "687:\tlearn: 8777.6076218\ttotal: 848ms\tremaining: 384ms\n",
+      "688:\tlearn: 8772.5352749\ttotal: 849ms\tremaining: 383ms\n",
+      "689:\tlearn: 8756.2918781\ttotal: 850ms\tremaining: 382ms\n",
+      "690:\tlearn: 8754.7699452\ttotal: 851ms\tremaining: 381ms\n",
+      "691:\tlearn: 8745.9066553\ttotal: 852ms\tremaining: 379ms\n",
+      "692:\tlearn: 8738.4041196\ttotal: 853ms\tremaining: 378ms\n",
+      "693:\tlearn: 8725.8142000\ttotal: 854ms\tremaining: 377ms\n",
+      "694:\tlearn: 8703.9117446\ttotal: 856ms\tremaining: 375ms\n",
+      "695:\tlearn: 8685.3404967\ttotal: 857ms\tremaining: 374ms\n",
+      "696:\tlearn: 8684.6831625\ttotal: 858ms\tremaining: 373ms\n",
+      "697:\tlearn: 8675.7440412\ttotal: 859ms\tremaining: 372ms\n",
+      "698:\tlearn: 8667.3168239\ttotal: 860ms\tremaining: 370ms\n",
+      "699:\tlearn: 8655.7487094\ttotal: 861ms\tremaining: 369ms\n",
+      "700:\tlearn: 8631.7114576\ttotal: 862ms\tremaining: 368ms\n",
+      "701:\tlearn: 8623.5895063\ttotal: 863ms\tremaining: 367ms\n",
+      "702:\tlearn: 8611.0113334\ttotal: 865ms\tremaining: 365ms\n",
+      "703:\tlearn: 8599.4838623\ttotal: 866ms\tremaining: 364ms\n",
+      "704:\tlearn: 8590.8325219\ttotal: 867ms\tremaining: 363ms\n",
+      "705:\tlearn: 8581.4011424\ttotal: 868ms\tremaining: 361ms\n",
+      "706:\tlearn: 8570.5003173\ttotal: 869ms\tremaining: 360ms\n",
+      "707:\tlearn: 8569.5188481\ttotal: 870ms\tremaining: 359ms\n",
+      "708:\tlearn: 8552.1446437\ttotal: 871ms\tremaining: 358ms\n",
+      "709:\tlearn: 8544.1649340\ttotal: 872ms\tremaining: 356ms\n",
+      "710:\tlearn: 8532.3533866\ttotal: 873ms\tremaining: 355ms\n",
+      "711:\tlearn: 8522.1010596\ttotal: 875ms\tremaining: 354ms\n",
+      "712:\tlearn: 8511.9430637\ttotal: 876ms\tremaining: 352ms\n",
+      "713:\tlearn: 8504.0312162\ttotal: 877ms\tremaining: 351ms\n",
+      "714:\tlearn: 8494.6415071\ttotal: 878ms\tremaining: 350ms\n",
+      "715:\tlearn: 8493.6254698\ttotal: 879ms\tremaining: 349ms\n",
+      "716:\tlearn: 8481.9463079\ttotal: 880ms\tremaining: 347ms\n",
+      "717:\tlearn: 8471.5257750\ttotal: 881ms\tremaining: 346ms\n",
+      "718:\tlearn: 8460.8739797\ttotal: 882ms\tremaining: 345ms\n",
+      "719:\tlearn: 8460.0191178\ttotal: 883ms\tremaining: 344ms\n",
+      "720:\tlearn: 8448.0721044\ttotal: 885ms\tremaining: 342ms\n",
+      "721:\tlearn: 8429.4900585\ttotal: 886ms\tremaining: 341ms\n",
+      "722:\tlearn: 8419.7271251\ttotal: 887ms\tremaining: 340ms\n",
+      "723:\tlearn: 8418.8398260\ttotal: 888ms\tremaining: 339ms\n",
+      "724:\tlearn: 8403.8096463\ttotal: 889ms\tremaining: 337ms\n",
+      "725:\tlearn: 8395.9345451\ttotal: 890ms\tremaining: 336ms\n",
+      "726:\tlearn: 8384.5703843\ttotal: 891ms\tremaining: 335ms\n",
+      "727:\tlearn: 8372.9568715\ttotal: 892ms\tremaining: 333ms\n",
+      "728:\tlearn: 8366.2903049\ttotal: 894ms\tremaining: 332ms\n",
+      "729:\tlearn: 8350.9039514\ttotal: 895ms\tremaining: 331ms\n",
+      "730:\tlearn: 8340.7340077\ttotal: 896ms\tremaining: 330ms\n",
+      "731:\tlearn: 8329.7575990\ttotal: 897ms\tremaining: 328ms\n",
+      "732:\tlearn: 8318.4694848\ttotal: 898ms\tremaining: 327ms\n",
+      "733:\tlearn: 8297.3725416\ttotal: 899ms\tremaining: 326ms\n",
+      "734:\tlearn: 8287.7054647\ttotal: 900ms\tremaining: 325ms\n",
+      "735:\tlearn: 8278.1809733\ttotal: 902ms\tremaining: 323ms\n",
+      "736:\tlearn: 8262.4571523\ttotal: 903ms\tremaining: 322ms\n",
+      "737:\tlearn: 8254.1932652\ttotal: 904ms\tremaining: 321ms\n",
+      "738:\tlearn: 8242.8572241\ttotal: 905ms\tremaining: 320ms\n",
+      "739:\tlearn: 8235.4114466\ttotal: 906ms\tremaining: 318ms\n",
+      "740:\tlearn: 8224.0995507\ttotal: 907ms\tremaining: 317ms\n",
+      "741:\tlearn: 8214.1896076\ttotal: 908ms\tremaining: 316ms\n",
+      "742:\tlearn: 8206.8605839\ttotal: 909ms\tremaining: 315ms\n",
+      "743:\tlearn: 8204.3951557\ttotal: 910ms\tremaining: 313ms\n",
+      "744:\tlearn: 8191.9129774\ttotal: 912ms\tremaining: 312ms\n",
+      "745:\tlearn: 8178.5939325\ttotal: 913ms\tremaining: 311ms\n",
+      "746:\tlearn: 8165.7283828\ttotal: 914ms\tremaining: 310ms\n",
+      "747:\tlearn: 8155.4172535\ttotal: 915ms\tremaining: 308ms\n",
+      "748:\tlearn: 8141.7033317\ttotal: 916ms\tremaining: 307ms\n",
+      "749:\tlearn: 8129.7535821\ttotal: 917ms\tremaining: 306ms\n",
+      "750:\tlearn: 8119.9007696\ttotal: 918ms\tremaining: 304ms\n",
+      "751:\tlearn: 8111.0394419\ttotal: 919ms\tremaining: 303ms\n",
+      "752:\tlearn: 8100.9492272\ttotal: 921ms\tremaining: 302ms\n",
+      "753:\tlearn: 8100.1453158\ttotal: 922ms\tremaining: 301ms\n",
+      "754:\tlearn: 8092.1680490\ttotal: 923ms\tremaining: 300ms\n",
+      "755:\tlearn: 8081.4905267\ttotal: 924ms\tremaining: 298ms\n",
+      "756:\tlearn: 8066.8777993\ttotal: 925ms\tremaining: 297ms\n",
+      "757:\tlearn: 8054.4255471\ttotal: 926ms\tremaining: 296ms\n",
+      "758:\tlearn: 8038.7559880\ttotal: 928ms\tremaining: 295ms\n",
+      "759:\tlearn: 8029.8718028\ttotal: 929ms\tremaining: 293ms\n",
+      "760:\tlearn: 8019.5481297\ttotal: 930ms\tremaining: 292ms\n",
+      "761:\tlearn: 8004.5016145\ttotal: 931ms\tremaining: 291ms\n",
+      "762:\tlearn: 7988.6922507\ttotal: 932ms\tremaining: 290ms\n",
+      "763:\tlearn: 7973.7864266\ttotal: 934ms\tremaining: 288ms\n",
+      "764:\tlearn: 7960.5746237\ttotal: 935ms\tremaining: 287ms\n",
+      "765:\tlearn: 7953.6163421\ttotal: 936ms\tremaining: 286ms\n",
+      "766:\tlearn: 7948.6319346\ttotal: 938ms\tremaining: 285ms\n",
+      "767:\tlearn: 7942.0550639\ttotal: 939ms\tremaining: 284ms\n",
+      "768:\tlearn: 7927.4413703\ttotal: 941ms\tremaining: 283ms\n",
+      "769:\tlearn: 7914.2728393\ttotal: 942ms\tremaining: 281ms\n",
+      "770:\tlearn: 7905.7689187\ttotal: 943ms\tremaining: 280ms\n",
+      "771:\tlearn: 7897.7235976\ttotal: 944ms\tremaining: 279ms\n",
+      "772:\tlearn: 7885.1211408\ttotal: 946ms\tremaining: 278ms\n",
+      "773:\tlearn: 7871.5807810\ttotal: 947ms\tremaining: 277ms\n",
+      "774:\tlearn: 7866.0734753\ttotal: 948ms\tremaining: 275ms\n",
+      "775:\tlearn: 7856.0181839\ttotal: 950ms\tremaining: 274ms\n",
+      "776:\tlearn: 7843.4970612\ttotal: 951ms\tremaining: 273ms\n",
+      "777:\tlearn: 7834.6179920\ttotal: 952ms\tremaining: 272ms\n",
+      "778:\tlearn: 7820.1299016\ttotal: 954ms\tremaining: 271ms\n",
+      "779:\tlearn: 7804.5746766\ttotal: 955ms\tremaining: 269ms\n",
+      "780:\tlearn: 7800.1194394\ttotal: 956ms\tremaining: 268ms\n",
+      "781:\tlearn: 7789.5989858\ttotal: 958ms\tremaining: 267ms\n",
+      "782:\tlearn: 7771.2688589\ttotal: 959ms\tremaining: 266ms\n",
+      "783:\tlearn: 7763.1028260\ttotal: 960ms\tremaining: 265ms\n",
+      "784:\tlearn: 7750.3757201\ttotal: 962ms\tremaining: 263ms\n",
+      "785:\tlearn: 7738.1249289\ttotal: 963ms\tremaining: 262ms\n",
+      "786:\tlearn: 7729.3033931\ttotal: 965ms\tremaining: 261ms\n",
+      "787:\tlearn: 7719.1386759\ttotal: 966ms\tremaining: 260ms\n",
+      "788:\tlearn: 7703.4297920\ttotal: 967ms\tremaining: 259ms\n",
+      "789:\tlearn: 7691.7709654\ttotal: 969ms\tremaining: 257ms\n",
+      "790:\tlearn: 7682.5536368\ttotal: 970ms\tremaining: 256ms\n",
+      "791:\tlearn: 7674.5609898\ttotal: 971ms\tremaining: 255ms\n",
+      "792:\tlearn: 7663.5867036\ttotal: 973ms\tremaining: 254ms\n",
+      "793:\tlearn: 7654.9458809\ttotal: 973ms\tremaining: 254ms\n",
+      "794:\tlearn: 7644.2657015\ttotal: 976ms\tremaining: 252ms\n",
+      "795:\tlearn: 7632.3713693\ttotal: 979ms\tremaining: 251ms\n",
+      "796:\tlearn: 7626.9285778\ttotal: 981ms\tremaining: 250ms\n",
+      "797:\tlearn: 7619.4777701\ttotal: 982ms\tremaining: 249ms\n",
+      "798:\tlearn: 7599.2815307\ttotal: 984ms\tremaining: 248ms\n",
+      "799:\tlearn: 7592.5861677\ttotal: 986ms\tremaining: 247ms\n",
+      "800:\tlearn: 7576.5027502\ttotal: 988ms\tremaining: 246ms\n",
+      "801:\tlearn: 7565.4497721\ttotal: 989ms\tremaining: 245ms\n",
+      "802:\tlearn: 7558.1688337\ttotal: 991ms\tremaining: 243ms\n",
+      "803:\tlearn: 7553.0135011\ttotal: 992ms\tremaining: 242ms\n",
+      "804:\tlearn: 7537.8708981\ttotal: 994ms\tremaining: 241ms\n",
+      "805:\tlearn: 7537.0629573\ttotal: 995ms\tremaining: 240ms\n",
+      "806:\tlearn: 7527.5715575\ttotal: 997ms\tremaining: 239ms\n",
+      "807:\tlearn: 7518.4173652\ttotal: 998ms\tremaining: 237ms\n",
+      "808:\tlearn: 7512.0439060\ttotal: 999ms\tremaining: 236ms\n",
+      "809:\tlearn: 7507.3952182\ttotal: 1s\tremaining: 235ms\n",
+      "810:\tlearn: 7494.6608823\ttotal: 1s\tremaining: 234ms\n",
+      "811:\tlearn: 7485.0488719\ttotal: 1s\tremaining: 233ms\n",
+      "812:\tlearn: 7483.7597985\ttotal: 1s\tremaining: 231ms\n",
+      "813:\tlearn: 7474.5382892\ttotal: 1s\tremaining: 230ms\n",
+      "814:\tlearn: 7463.7623945\ttotal: 1.01s\tremaining: 229ms\n",
+      "815:\tlearn: 7461.8040922\ttotal: 1.01s\tremaining: 228ms\n",
+      "816:\tlearn: 7450.9823837\ttotal: 1.01s\tremaining: 226ms\n",
+      "817:\tlearn: 7438.0749689\ttotal: 1.01s\tremaining: 225ms\n",
+      "818:\tlearn: 7426.1461952\ttotal: 1.01s\tremaining: 224ms\n",
+      "819:\tlearn: 7420.8100921\ttotal: 1.01s\tremaining: 223ms\n",
+      "820:\tlearn: 7416.8759052\ttotal: 1.01s\tremaining: 221ms\n",
+      "821:\tlearn: 7406.1797654\ttotal: 1.01s\tremaining: 220ms\n",
+      "822:\tlearn: 7397.5914192\ttotal: 1.02s\tremaining: 219ms\n",
+      "823:\tlearn: 7390.2504478\ttotal: 1.02s\tremaining: 218ms\n",
+      "824:\tlearn: 7381.6743031\ttotal: 1.02s\tremaining: 217ms\n",
+      "825:\tlearn: 7370.4551705\ttotal: 1.02s\tremaining: 215ms\n",
+      "826:\tlearn: 7360.7739058\ttotal: 1.02s\tremaining: 214ms\n",
+      "827:\tlearn: 7351.8954370\ttotal: 1.02s\tremaining: 213ms\n",
+      "828:\tlearn: 7345.8400711\ttotal: 1.02s\tremaining: 212ms\n",
+      "829:\tlearn: 7332.6057696\ttotal: 1.03s\tremaining: 210ms\n",
+      "830:\tlearn: 7324.3040778\ttotal: 1.03s\tremaining: 209ms\n",
+      "831:\tlearn: 7315.7806606\ttotal: 1.03s\tremaining: 208ms\n",
+      "832:\tlearn: 7308.5627576\ttotal: 1.03s\tremaining: 207ms\n",
+      "833:\tlearn: 7300.7140927\ttotal: 1.03s\tremaining: 206ms\n",
+      "834:\tlearn: 7294.2186730\ttotal: 1.03s\tremaining: 205ms\n",
+      "835:\tlearn: 7285.1889469\ttotal: 1.04s\tremaining: 204ms\n",
+      "836:\tlearn: 7279.1405173\ttotal: 1.04s\tremaining: 202ms\n",
+      "837:\tlearn: 7268.4303701\ttotal: 1.04s\tremaining: 201ms\n",
+      "838:\tlearn: 7259.1690496\ttotal: 1.04s\tremaining: 200ms\n",
+      "839:\tlearn: 7256.1805373\ttotal: 1.04s\tremaining: 199ms\n",
+      "840:\tlearn: 7247.3922603\ttotal: 1.04s\tremaining: 197ms\n",
+      "841:\tlearn: 7236.0187187\ttotal: 1.04s\tremaining: 196ms\n",
+      "842:\tlearn: 7228.5048543\ttotal: 1.04s\tremaining: 195ms\n",
+      "843:\tlearn: 7220.2009787\ttotal: 1.05s\tremaining: 194ms\n",
+      "844:\tlearn: 7218.8875408\ttotal: 1.05s\tremaining: 192ms\n",
+      "845:\tlearn: 7209.2681474\ttotal: 1.05s\tremaining: 191ms\n",
+      "846:\tlearn: 7203.2779582\ttotal: 1.05s\tremaining: 190ms\n",
+      "847:\tlearn: 7193.1807955\ttotal: 1.05s\tremaining: 189ms\n",
+      "848:\tlearn: 7191.2365189\ttotal: 1.05s\tremaining: 187ms\n",
+      "849:\tlearn: 7187.2976628\ttotal: 1.05s\tremaining: 186ms\n",
+      "850:\tlearn: 7176.8288274\ttotal: 1.05s\tremaining: 185ms\n",
+      "851:\tlearn: 7167.9087942\ttotal: 1.06s\tremaining: 184ms\n",
+      "852:\tlearn: 7160.4963676\ttotal: 1.06s\tremaining: 183ms\n",
+      "853:\tlearn: 7150.6507944\ttotal: 1.06s\tremaining: 181ms\n",
+      "854:\tlearn: 7138.4010495\ttotal: 1.06s\tremaining: 180ms\n",
+      "855:\tlearn: 7133.1858647\ttotal: 1.06s\tremaining: 179ms\n",
+      "856:\tlearn: 7123.3993661\ttotal: 1.06s\tremaining: 178ms\n",
+      "857:\tlearn: 7112.5879073\ttotal: 1.06s\tremaining: 176ms\n",
+      "858:\tlearn: 7103.9491346\ttotal: 1.06s\tremaining: 175ms\n",
+      "859:\tlearn: 7097.0598901\ttotal: 1.07s\tremaining: 174ms\n",
+      "860:\tlearn: 7087.9132083\ttotal: 1.07s\tremaining: 173ms\n",
+      "861:\tlearn: 7079.1807502\ttotal: 1.07s\tremaining: 171ms\n",
+      "862:\tlearn: 7069.3976734\ttotal: 1.07s\tremaining: 170ms\n",
+      "863:\tlearn: 7063.2595792\ttotal: 1.07s\tremaining: 169ms\n",
+      "864:\tlearn: 7053.6867590\ttotal: 1.07s\tremaining: 168ms\n",
+      "865:\tlearn: 7044.2992512\ttotal: 1.07s\tremaining: 166ms\n",
+      "866:\tlearn: 7032.0035446\ttotal: 1.07s\tremaining: 165ms\n",
+      "867:\tlearn: 7020.3721691\ttotal: 1.08s\tremaining: 164ms\n",
+      "868:\tlearn: 7012.7066396\ttotal: 1.08s\tremaining: 163ms\n",
+      "869:\tlearn: 7004.4152427\ttotal: 1.08s\tremaining: 162ms\n",
+      "870:\tlearn: 6993.1503718\ttotal: 1.08s\tremaining: 160ms\n",
+      "871:\tlearn: 6987.1329720\ttotal: 1.08s\tremaining: 159ms\n",
+      "872:\tlearn: 6980.8377835\ttotal: 1.08s\tremaining: 158ms\n",
+      "873:\tlearn: 6971.3363723\ttotal: 1.08s\tremaining: 157ms\n",
+      "874:\tlearn: 6965.5850075\ttotal: 1.09s\tremaining: 155ms\n",
+      "875:\tlearn: 6955.9882381\ttotal: 1.09s\tremaining: 154ms\n",
+      "876:\tlearn: 6951.7906696\ttotal: 1.09s\tremaining: 153ms\n",
+      "877:\tlearn: 6944.3112749\ttotal: 1.09s\tremaining: 152ms\n",
+      "878:\tlearn: 6938.0158237\ttotal: 1.09s\tremaining: 150ms\n",
+      "879:\tlearn: 6925.2695180\ttotal: 1.09s\tremaining: 149ms\n",
+      "880:\tlearn: 6915.2234674\ttotal: 1.09s\tremaining: 148ms\n",
+      "881:\tlearn: 6904.8187586\ttotal: 1.09s\tremaining: 147ms\n",
+      "882:\tlearn: 6895.6183944\ttotal: 1.1s\tremaining: 145ms\n",
+      "883:\tlearn: 6889.0549715\ttotal: 1.1s\tremaining: 144ms\n",
+      "884:\tlearn: 6882.3989847\ttotal: 1.1s\tremaining: 143ms\n",
+      "885:\tlearn: 6872.2113802\ttotal: 1.1s\tremaining: 142ms\n",
+      "886:\tlearn: 6865.2703273\ttotal: 1.1s\tremaining: 140ms\n",
+      "887:\tlearn: 6855.1988666\ttotal: 1.1s\tremaining: 139ms\n",
+      "888:\tlearn: 6849.7604874\ttotal: 1.1s\tremaining: 138ms\n",
+      "889:\tlearn: 6844.9557949\ttotal: 1.1s\tremaining: 137ms\n",
+      "890:\tlearn: 6835.3144077\ttotal: 1.11s\tremaining: 136ms\n",
+      "891:\tlearn: 6829.9190796\ttotal: 1.11s\tremaining: 134ms\n",
+      "892:\tlearn: 6817.6960176\ttotal: 1.11s\tremaining: 133ms\n",
+      "893:\tlearn: 6805.8956028\ttotal: 1.11s\tremaining: 132ms\n",
+      "894:\tlearn: 6797.7919863\ttotal: 1.11s\tremaining: 131ms\n",
+      "895:\tlearn: 6786.2765742\ttotal: 1.11s\tremaining: 129ms\n",
+      "896:\tlearn: 6776.9365246\ttotal: 1.11s\tremaining: 128ms\n",
+      "897:\tlearn: 6767.1241241\ttotal: 1.11s\tremaining: 127ms\n",
+      "898:\tlearn: 6763.8496955\ttotal: 1.12s\tremaining: 126ms\n",
+      "899:\tlearn: 6749.5090743\ttotal: 1.12s\tremaining: 124ms\n",
+      "900:\tlearn: 6747.1423205\ttotal: 1.12s\tremaining: 123ms\n",
+      "901:\tlearn: 6742.3457406\ttotal: 1.12s\tremaining: 122ms\n",
+      "902:\tlearn: 6730.9019836\ttotal: 1.12s\tremaining: 121ms\n",
+      "903:\tlearn: 6730.3459960\ttotal: 1.12s\tremaining: 119ms\n",
+      "904:\tlearn: 6717.4439767\ttotal: 1.12s\tremaining: 118ms\n",
+      "905:\tlearn: 6710.8917808\ttotal: 1.13s\tremaining: 117ms\n",
+      "906:\tlearn: 6704.8088544\ttotal: 1.13s\tremaining: 116ms\n",
+      "907:\tlearn: 6695.0519901\ttotal: 1.13s\tremaining: 114ms\n",
+      "908:\tlearn: 6689.1681022\ttotal: 1.13s\tremaining: 113ms\n",
+      "909:\tlearn: 6685.3632058\ttotal: 1.13s\tremaining: 112ms\n",
+      "910:\tlearn: 6678.7059703\ttotal: 1.13s\tremaining: 111ms\n",
+      "911:\tlearn: 6672.7351774\ttotal: 1.13s\tremaining: 109ms\n",
+      "912:\tlearn: 6670.2427513\ttotal: 1.13s\tremaining: 108ms\n",
+      "913:\tlearn: 6665.2009351\ttotal: 1.13s\tremaining: 107ms\n",
+      "914:\tlearn: 6656.4643673\ttotal: 1.14s\tremaining: 106ms\n",
+      "915:\tlearn: 6645.5616055\ttotal: 1.14s\tremaining: 104ms\n",
+      "916:\tlearn: 6637.7110120\ttotal: 1.14s\tremaining: 103ms\n",
+      "917:\tlearn: 6627.3629520\ttotal: 1.14s\tremaining: 102ms\n",
+      "918:\tlearn: 6622.0924727\ttotal: 1.14s\tremaining: 101ms\n",
+      "919:\tlearn: 6610.3315336\ttotal: 1.14s\tremaining: 99.3ms\n",
+      "920:\tlearn: 6604.2241306\ttotal: 1.14s\tremaining: 98.1ms\n",
+      "921:\tlearn: 6597.4373323\ttotal: 1.14s\tremaining: 96.8ms\n",
+      "922:\tlearn: 6588.7407895\ttotal: 1.14s\tremaining: 95.6ms\n",
+      "923:\tlearn: 6582.3289793\ttotal: 1.15s\tremaining: 94.3ms\n",
+      "924:\tlearn: 6577.7093877\ttotal: 1.15s\tremaining: 93.1ms\n",
+      "925:\tlearn: 6573.2801961\ttotal: 1.15s\tremaining: 91.8ms\n",
+      "926:\tlearn: 6565.4768570\ttotal: 1.15s\tremaining: 90.6ms\n",
+      "927:\tlearn: 6556.2790277\ttotal: 1.15s\tremaining: 89.3ms\n",
+      "928:\tlearn: 6545.1797991\ttotal: 1.15s\tremaining: 88.1ms\n",
+      "929:\tlearn: 6535.4815432\ttotal: 1.15s\tremaining: 86.8ms\n",
+      "930:\tlearn: 6534.0335310\ttotal: 1.15s\tremaining: 85.5ms\n",
+      "931:\tlearn: 6526.6083619\ttotal: 1.15s\tremaining: 84.3ms\n",
+      "932:\tlearn: 6517.8203695\ttotal: 1.16s\tremaining: 83.1ms\n",
+      "933:\tlearn: 6506.3244364\ttotal: 1.16s\tremaining: 81.8ms\n",
+      "934:\tlearn: 6496.5196795\ttotal: 1.16s\tremaining: 80.6ms\n",
+      "935:\tlearn: 6491.2095743\ttotal: 1.16s\tremaining: 79.3ms\n",
+      "936:\tlearn: 6485.5866188\ttotal: 1.16s\tremaining: 78.1ms\n",
+      "937:\tlearn: 6474.7648012\ttotal: 1.16s\tremaining: 76.8ms\n",
+      "938:\tlearn: 6467.6438066\ttotal: 1.16s\tremaining: 75.6ms\n",
+      "939:\tlearn: 6458.9823049\ttotal: 1.16s\tremaining: 74.3ms\n",
+      "940:\tlearn: 6453.9713146\ttotal: 1.16s\tremaining: 73.1ms\n",
+      "941:\tlearn: 6445.2775888\ttotal: 1.17s\tremaining: 71.8ms\n",
+      "942:\tlearn: 6438.8608398\ttotal: 1.17s\tremaining: 70.6ms\n",
+      "943:\tlearn: 6430.0119008\ttotal: 1.17s\tremaining: 69.4ms\n",
+      "944:\tlearn: 6423.3820413\ttotal: 1.17s\tremaining: 68.1ms\n",
+      "945:\tlearn: 6415.6201188\ttotal: 1.17s\tremaining: 66.9ms\n",
+      "946:\tlearn: 6410.5162578\ttotal: 1.17s\tremaining: 65.6ms\n",
+      "947:\tlearn: 6404.5849646\ttotal: 1.17s\tremaining: 64.4ms\n",
+      "948:\tlearn: 6398.1275677\ttotal: 1.17s\tremaining: 63.1ms\n",
+      "949:\tlearn: 6390.0094696\ttotal: 1.17s\tremaining: 61.9ms\n",
+      "950:\tlearn: 6380.4997392\ttotal: 1.18s\tremaining: 60.6ms\n",
+      "951:\tlearn: 6370.8354868\ttotal: 1.18s\tremaining: 59.4ms\n",
+      "952:\tlearn: 6364.6799363\ttotal: 1.18s\tremaining: 58.2ms\n",
+      "953:\tlearn: 6355.4052333\ttotal: 1.18s\tremaining: 56.9ms\n",
+      "954:\tlearn: 6347.5124313\ttotal: 1.18s\tremaining: 55.7ms\n",
+      "955:\tlearn: 6339.9327603\ttotal: 1.18s\tremaining: 54.4ms\n",
+      "956:\tlearn: 6331.3383855\ttotal: 1.19s\tremaining: 53.4ms\n",
+      "957:\tlearn: 6330.9572635\ttotal: 1.19s\tremaining: 52.1ms\n",
+      "958:\tlearn: 6330.2665697\ttotal: 1.19s\tremaining: 50.9ms\n",
+      "959:\tlearn: 6320.7585423\ttotal: 1.19s\tremaining: 49.7ms\n",
+      "960:\tlearn: 6316.9367863\ttotal: 1.19s\tremaining: 48.4ms\n",
+      "961:\tlearn: 6305.9665433\ttotal: 1.19s\tremaining: 47.2ms\n",
+      "962:\tlearn: 6295.7829613\ttotal: 1.2s\tremaining: 46ms\n",
+      "963:\tlearn: 6286.7316400\ttotal: 1.2s\tremaining: 44.7ms\n",
+      "964:\tlearn: 6280.6179405\ttotal: 1.2s\tremaining: 43.5ms\n",
+      "965:\tlearn: 6271.0846240\ttotal: 1.2s\tremaining: 42.2ms\n",
+      "966:\tlearn: 6265.6089616\ttotal: 1.2s\tremaining: 41ms\n",
+      "967:\tlearn: 6258.4067024\ttotal: 1.2s\tremaining: 39.8ms\n",
+      "968:\tlearn: 6252.0546347\ttotal: 1.2s\tremaining: 38.5ms\n",
+      "969:\tlearn: 6240.2716763\ttotal: 1.2s\tremaining: 37.3ms\n",
+      "970:\tlearn: 6237.6141029\ttotal: 1.21s\tremaining: 36ms\n",
+      "971:\tlearn: 6231.1637922\ttotal: 1.21s\tremaining: 34.8ms\n",
+      "972:\tlearn: 6224.2049094\ttotal: 1.21s\tremaining: 33.6ms\n",
+      "973:\tlearn: 6220.1043889\ttotal: 1.21s\tremaining: 32.3ms\n",
+      "974:\tlearn: 6212.0830355\ttotal: 1.21s\tremaining: 31.1ms\n",
+      "975:\tlearn: 6206.6198126\ttotal: 1.21s\tremaining: 29.8ms\n",
+      "976:\tlearn: 6199.4668787\ttotal: 1.21s\tremaining: 28.6ms\n",
+      "977:\tlearn: 6193.3445984\ttotal: 1.22s\tremaining: 27.4ms\n",
+      "978:\tlearn: 6185.2858031\ttotal: 1.22s\tremaining: 26.1ms\n",
+      "979:\tlearn: 6176.4350292\ttotal: 1.22s\tremaining: 24.9ms\n",
+      "980:\tlearn: 6174.9165040\ttotal: 1.22s\tremaining: 23.6ms\n",
+      "981:\tlearn: 6169.5612371\ttotal: 1.22s\tremaining: 22.4ms\n",
+      "982:\tlearn: 6162.3769541\ttotal: 1.22s\tremaining: 21.2ms\n",
+      "983:\tlearn: 6155.4632066\ttotal: 1.22s\tremaining: 19.9ms\n",
+      "984:\tlearn: 6147.4709298\ttotal: 1.23s\tremaining: 18.7ms\n",
+      "985:\tlearn: 6137.8897793\ttotal: 1.23s\tremaining: 17.4ms\n",
+      "986:\tlearn: 6133.6333416\ttotal: 1.23s\tremaining: 16.2ms\n",
+      "987:\tlearn: 6125.8396440\ttotal: 1.23s\tremaining: 14.9ms\n",
+      "988:\tlearn: 6118.9306186\ttotal: 1.23s\tremaining: 13.7ms\n",
+      "989:\tlearn: 6112.1254087\ttotal: 1.23s\tremaining: 12.5ms\n",
+      "990:\tlearn: 6106.8206628\ttotal: 1.23s\tremaining: 11.2ms\n",
+      "991:\tlearn: 6099.1192698\ttotal: 1.23s\tremaining: 9.97ms\n",
+      "992:\tlearn: 6094.3557838\ttotal: 1.24s\tremaining: 8.72ms\n",
+      "993:\tlearn: 6087.2310912\ttotal: 1.24s\tremaining: 7.48ms\n",
+      "994:\tlearn: 6079.5095364\ttotal: 1.24s\tremaining: 6.23ms\n",
+      "995:\tlearn: 6073.4962157\ttotal: 1.24s\tremaining: 4.99ms\n",
+      "996:\tlearn: 6065.7144217\ttotal: 1.24s\tremaining: 3.74ms\n",
+      "997:\tlearn: 6056.9512733\ttotal: 1.24s\tremaining: 2.49ms\n",
+      "998:\tlearn: 6049.9622604\ttotal: 1.24s\tremaining: 1.25ms\n",
+      "999:\tlearn: 6046.2216818\ttotal: 1.25s\tremaining: 0us\n"
+     ]
+    },
     {
      "data": {
       "text/html": [
-       "Finishing last run (ID:37zdocsk) before initializing another..."
+       "Finishing last run (ID:urhpx3kj) before initializing another..."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -949,7 +4811,7 @@
     {
      "data": {
       "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108461<br/>Program ended successfully."
+       "<br/>Waiting for W&B process to finish, PID 248087<br/>Program ended successfully."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -961,12 +4823,12 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "05c1906485ec4fb3b148b36707afae62",
+       "model_id": "90da50e73000409d9a27d8d1a1c7281f",
        "version_major": 2,
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.98653788321…"
+       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
       ]
      },
      "metadata": {},
@@ -974,50 +4836,25 @@
     }
    ],
    "source": [
-    "for col_name in list(X.columns):\n",
+    "for model in models:\n",
     "    try:\n",
-    "        X = X_old.copy()\n",
-    "        X = fe(X,col_name)\n",
-    "        train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
+    "        train(model[1](),X,X,y,y,name=f'{model[0]}')\n",
     "    except:\n",
     "        pass"
    ]
   },
   {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "18da7858-3bf4-4639-ab12-87cdd08abf78",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "X = X_old.copy()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "38925d4b-60a6-4f56-9032-71fca45b4b24",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "X_corr = X_old.corr()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "1eb9628b-e2d3-4813-a29d-21b69c433115",
+   "cell_type": "markdown",
+   "id": "3b8e70f7-b7bd-4f65-95b1-40cfad5ee1d6",
    "metadata": {},
-   "outputs": [],
    "source": [
-    "plt.figure(figsize=(12,7))\n",
-    "sns.heatmap(X_corr)"
+    "## Random Search"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "156dd7dd-42dc-49b7-b652-e24c264f5793",
+   "id": "e8494e9a-8189-4b03-a5ea-21ce23d014da",
    "metadata": {},
    "outputs": [],
    "source": []
diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
index 9c286e3..b16276e 120000
--- a/wandb/debug-internal.log
+++ b/wandb/debug-internal.log
@@ -1 +1 @@
-run-20210825_105632-sgmyybmk/logs/debug-internal.log
\ No newline at end of file
+run-20210825_150359-1jzdois3/logs/debug-internal.log
\ No newline at end of file
diff --git a/wandb/debug.log b/wandb/debug.log
index 8002f7c..7148adc 120000
--- a/wandb/debug.log
+++ b/wandb/debug.log
@@ -1 +1 @@
-run-20210825_105632-sgmyybmk/logs/debug.log
\ No newline at end of file
+run-20210825_150359-1jzdois3/logs/debug.log
\ No newline at end of file
diff --git a/wandb/latest-run b/wandb/latest-run
index 9382411..3f2fe99 120000
--- a/wandb/latest-run
+++ b/wandb/latest-run
@@ -1 +1 @@
-run-20210825_105632-sgmyybmk
\ No newline at end of file
+run-20210825_150359-1jzdois3
\ No newline at end of file
diff --git a/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml b/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
index e69de29..a509d5f 100644
--- a/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+++ b/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
@@ -0,0 +1,486 @@
+name: base
+channels:
+  - defaults
+dependencies:
+  - _anaconda_depends=2019.10=py37_0
+  - _ipyw_jlab_nb_ext_conf=0.1.0=py37_0
+  - _libgcc_mutex=0.1=main
+  - _pytorch_select=0.1=cpu_0
+  - alabaster=0.7.12=py37_0
+  - anaconda=custom=py37_1
+  - anaconda-client=1.7.2=py37_0
+  - anaconda-navigator=1.9.12=py37_0
+  - anaconda-project=0.10.0=pyhd3eb1b0_0
+  - anyio=2.2.0=py37h06a4308_1
+  - appdirs=1.4.4=py_0
+  - argon2-cffi=20.1.0=py37h27cfd23_1
+  - asn1crypto=1.4.0=py_0
+  - astroid=2.5=py37h06a4308_1
+  - astropy=4.2.1=py37h27cfd23_1
+  - async_generator=1.10=py37h28b3542_0
+  - atomicwrites=1.4.0=py_0
+  - attrs=21.2.0=pyhd3eb1b0_0
+  - babel=2.9.1=pyhd3eb1b0_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - backports=1.0=pyhd3eb1b0_2
+  - backports.functools_lru_cache=1.6.4=pyhd3eb1b0_0
+  - backports.os=0.1.1=py37_1002
+  - backports.shutil_get_terminal_size=1.0.0=pyhd3eb1b0_3
+  - backports.tempfile=1.0=pyhd3eb1b0_1
+  - backports.weakref=1.0.post1=py_1
+  - beautifulsoup4=4.9.3=pyha847dfd_0
+  - bitarray=2.1.0=py37h27cfd23_1
+  - bkcharts=0.2=py37_0
+  - blas=1.0=mkl
+  - bleach=3.3.0=pyhd3eb1b0_0
+  - blosc=1.21.0=h8c45485_0
+  - bokeh=2.3.2=py37h06a4308_0
+  - boto=2.49.0=py37_0
+  - bottleneck=1.3.2=py37heb32a55_1
+  - brotlipy=0.7.0=py37h27cfd23_1003
+  - bzip2=1.0.8=h7b6447c_0
+  - c-ares=1.17.1=h27cfd23_0
+  - ca-certificates=2021.7.5=h06a4308_1
+  - cairo=1.16.0=hf32fb01_1
+  - certifi=2021.5.30=py37h06a4308_0
+  - cffi=1.14.5=py37h261ae71_0
+  - cloudpickle=1.6.0=py_0
+  - clyent=1.2.2=py37_1
+  - colorama=0.4.4=pyhd3eb1b0_0
+  - conda=4.10.3=py37h06a4308_0
+  - conda-build=3.18.11=py37_0
+  - conda-env=2.6.0=1
+  - conda-pack=0.6.0=pyhd3eb1b0_0
+  - conda-package-handling=1.7.3=py37h27cfd23_1
+  - conda-verify=3.4.2=py_1
+  - contextlib2=0.6.0.post1=py_0
+  - cryptography=3.4.7=py37hd23ed53_0
+  - cudatoolkit=10.1.243=h6bb024c_0
+  - curl=7.71.1=hbc83047_1
+  - cycler=0.10.0=py37_0
+  - cython=0.29.23=py37h2531618_0
+  - cytoolz=0.11.0=py37h7b6447c_0
+  - dask=2021.5.1=pyhd3eb1b0_0
+  - dask-core=2021.5.1=pyhd3eb1b0_0
+  - dbus=1.13.18=hb2f20db_0
+  - decorator=4.4.2=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - distributed=2021.5.1=py37h06a4308_0
+  - docutils=0.17.1=py37h06a4308_1
+  - entrypoints=0.3=py37_0
+  - et_xmlfile=1.1.0=py37h06a4308_0
+  - expat=2.4.1=h2531618_2
+  - fastcache=1.1.0=py37h7b6447c_0
+  - filelock=3.0.12=pyhd3eb1b0_1
+  - fontconfig=2.13.1=h6c09931_0
+  - freetype=2.10.4=h5ab3b9f_0
+  - fribidi=1.0.10=h7b6447c_0
+  - fsspec=0.9.0=pyhd3eb1b0_0
+  - future=0.18.2=py37_1
+  - get_terminal_size=1.0.0=haa9412d_0
+  - gevent=21.1.2=py37h27cfd23_1
+  - glib=2.68.2=h36276a3_0
+  - glob2=0.7=pyhd3eb1b0_0
+  - gmp=6.2.1=h2531618_2
+  - gmpy2=2.0.8=py37h10f8cd9_2
+  - graphite2=1.3.14=h23475e2_0
+  - greenlet=1.1.0=py37h2531618_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - h5py=2.10.0=py37h7918eee_0
+  - harfbuzz=2.8.1=h6f93f22_0
+  - hdf5=1.10.4=hb1b8bf9_0
+  - heapdict=1.0.1=py_0
+  - html5lib=1.1=py_0
+  - hypothesis=6.13.11=pyhd3eb1b0_0
+  - icu=58.2=he6710b0_3
+  - idna=2.10=pyhd3eb1b0_0
+  - imageio=2.9.0=pyhd3eb1b0_0
+  - imagesize=1.2.0=pyhd3eb1b0_0
+  - importlib-metadata=3.10.0=py37h06a4308_0
+  - importlib_metadata=3.10.0=hd3eb1b0_0
+  - iniconfig=1.1.1=pyhd3eb1b0_0
+  - intel-openmp=2019.4=243
+  - ipykernel=5.3.4=py37h5ca1d4c_0
+  - ipython=7.22.0=py37hb070fc8_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.3=pyhd3eb1b0_1
+  - isort=5.8.0=pyhd3eb1b0_0
+  - itsdangerous=2.0.1=pyhd3eb1b0_0
+  - jbig=2.1=hdba287a_0
+  - jdcal=1.4.1=py_0
+  - jeepney=0.6.0=pyhd3eb1b0_0
+  - jinja2=3.0.0=pyhd3eb1b0_0
+  - joblib=1.0.1=pyhd3eb1b0_0
+  - jpeg=9b=h024ee3a_2
+  - json5=0.9.5=py_0
+  - jsonschema=3.2.0=py_2
+  - jupyter=1.0.0=py37_7
+  - jupyter-packaging=0.7.12=pyhd3eb1b0_0
+  - jupyter_client=6.1.12=pyhd3eb1b0_0
+  - jupyter_console=6.4.0=pyhd3eb1b0_0
+  - jupyter_core=4.7.1=py37h06a4308_0
+  - jupyter_server=1.4.1=py37h06a4308_0
+  - jupyterlab=3.0.14=pyhd3eb1b0_1
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.4.0=pyhd3eb1b0_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - keyring=23.0.1=py37h06a4308_0
+  - kiwisolver=1.3.1=py37h2531618_0
+  - krb5=1.18.2=h173b8e3_0
+  - lazy-object-proxy=1.6.0=py37h27cfd23_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.33.1=h53a641e_7
+  - libarchive=3.4.2=h62408e4_0
+  - libcurl=7.71.1=h20c2e04_1
+  - libedit=3.1.20210216=h27cfd23_1
+  - libev=4.33=h7b6447c_0
+  - libffi=3.3=he6710b0_2
+  - libgcc-ng=9.1.0=hdf63c60_0
+  - libgfortran-ng=7.3.0=hdf63c60_0
+  - liblief=0.10.1=he6710b0_0
+  - libllvm10=10.0.1=hbcb73fb_5
+  - libmklml=2019.0.5=0
+  - libpng=1.6.37=hbc83047_0
+  - libsodium=1.0.18=h7b6447c_0
+  - libssh2=1.9.0=h1ba5d50_1
+  - libstdcxx-ng=9.1.0=hdf63c60_0
+  - libtiff=4.2.0=h85742a9_0
+  - libtool=2.4.6=h7b6447c_1005
+  - libuuid=1.0.3=h1bed415_2
+  - libuv=1.40.0=h7b6447c_0
+  - libwebp-base=1.2.0=h27cfd23_0
+  - libxcb=1.14=h7b6447c_0
+  - libxml2=2.9.10=hb55368b_3
+  - libxslt=1.1.34=hc22bd24_0
+  - llvmlite=0.36.0=py37h612dafd_4
+  - locket=0.2.1=py37h06a4308_1
+  - lxml=4.6.3=py37h9120a33_0
+  - lz4-c=1.9.3=h2531618_0
+  - lzo=2.10=h7b6447c_2
+  - markupsafe=2.0.1=py37h27cfd23_0
+  - matplotlib-base=3.3.4=py37h62a2d02_0
+  - mccabe=0.6.1=py37_1
+  - mistune=0.8.4=py37h14c3975_1001
+  - mkl=2020.2=256
+  - mkl-service=2.3.0=py37he8ac12f_0
+  - mkl_fft=1.3.0=py37h54f3939_0
+  - mkl_random=1.1.1=py37h0573a6f_0
+  - mock=4.0.3=pyhd3eb1b0_0
+  - more-itertools=8.8.0=pyhd3eb1b0_0
+  - mpc=1.1.0=h10f8cd9_1
+  - mpfr=4.0.2=hb69a4c5_1
+  - mpmath=1.2.1=py37h06a4308_0
+  - msgpack-python=1.0.2=py37hff7bd54_1
+  - multipledispatch=0.6.0=py37_0
+  - mypy_extensions=0.4.3=py37_0
+  - navigator-updater=0.2.1=py37_0
+  - nbclassic=0.2.6=pyhd3eb1b0_0
+  - nbclient=0.5.3=pyhd3eb1b0_0
+  - nbconvert=6.0.7=py37_0
+  - nbformat=5.1.3=pyhd3eb1b0_0
+  - ncurses=6.2=he6710b0_1
+  - nest-asyncio=1.5.1=pyhd3eb1b0_0
+  - networkx=2.5.1=pyhd3eb1b0_0
+  - ninja=1.10.2=hff7bd54_1
+  - nltk=3.6.2=pyhd3eb1b0_0
+  - nose=1.3.7=pyhd3eb1b0_1006
+  - notebook=6.4.0=py37h06a4308_0
+  - numba=0.53.1=py37ha9443f7_0
+  - numexpr=2.7.3=py37hb2eb853_0
+  - numpy-base=1.19.2=py37hfa32c7d_0
+  - numpydoc=1.1.0=pyhd3eb1b0_1
+  - olefile=0.46=py37_0
+  - openpyxl=3.0.7=pyhd3eb1b0_0
+  - openssl=1.1.1k=h27cfd23_0
+  - packaging=20.9=pyhd3eb1b0_0
+  - pandas=1.2.4=py37h2531618_0
+  - pandoc=2.12=h06a4308_0
+  - pandocfilters=1.4.3=py37h06a4308_1
+  - pango=1.45.3=hd140c19_0
+  - parso=0.8.2=pyhd3eb1b0_0
+  - partd=1.2.0=pyhd3eb1b0_0
+  - patchelf=0.12=h2531618_1
+  - path=15.1.2=py37h06a4308_0
+  - path.py=12.5.0=0
+  - pathlib2=2.3.5=py37h06a4308_2
+  - patsy=0.5.1=py37_0
+  - pcre=8.44=he6710b0_0
+  - pep8=1.7.1=py37_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=8.2.0=py37he98fc37_0
+  - pip=21.1.1=py37h06a4308_0
+  - pixman=0.40.0=h7b6447c_0
+  - pkginfo=1.7.0=py37h06a4308_0
+  - pluggy=0.13.1=py37h06a4308_0
+  - ply=3.11=py37_0
+  - prometheus_client=0.10.1=pyhd3eb1b0_0
+  - prompt-toolkit=3.0.17=pyh06a4308_0
+  - prompt_toolkit=3.0.17=hd3eb1b0_0
+  - psutil=5.8.0=py37h27cfd23_1
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - py=1.10.0=pyhd3eb1b0_0
+  - py-lief=0.10.1=py37h403a769_0
+  - pycodestyle=2.7.0=pyhd3eb1b0_0
+  - pycosat=0.6.3=py37h27cfd23_0
+  - pycparser=2.20=py_2
+  - pycrypto=2.6.1=py37h7b6447c_10
+  - pycurl=7.43.0.6=py37h1ba5d50_0
+  - pyerfa=1.7.3=py37h27cfd23_0
+  - pyflakes=2.3.1=pyhd3eb1b0_0
+  - pygments=2.9.0=pyhd3eb1b0_0
+  - pylint=2.7.4=py37h06a4308_1
+  - pyodbc=4.0.30=py37he6710b0_0
+  - pyopenssl=20.0.1=pyhd3eb1b0_1
+  - pyparsing=2.4.7=pyhd3eb1b0_0
+  - pyqt=5.9.2=py37h05f1152_2
+  - pyrsistent=0.17.3=py37h7b6447c_0
+  - pysocks=1.7.1=py37_1
+  - pytables=3.6.1=py37h71ec239_0
+  - pytest=6.2.3=py37h06a4308_2
+  - pytest-arraydiff=0.3=py37h39e3cac_0
+  - pytest-astropy=0.8.0=pyhd3eb1b0_0
+  - pytest-astropy-header=0.1.2=pyhd3eb1b0_0
+  - pytest-doctestplus=0.9.0=pyhd3eb1b0_0
+  - pytest-openfiles=0.5.0=pyhd3eb1b0_0
+  - pytest-remotedata=0.3.2=py37_0
+  - python=3.7.7=hcff3b4d_5
+  - python-dateutil=2.8.1=pyhd3eb1b0_0
+  - python-libarchive-c=2.9=pyhd3eb1b0_1
+  - pytz=2021.1=pyhd3eb1b0_0
+  - pywavelets=1.1.1=py37h7b6447c_2
+  - pyzmq=20.0.0=py37h2531618_1
+  - qt=5.9.7=h5867ecd_1
+  - qtawesome=1.0.2=pyhd3eb1b0_0
+  - qtconsole=5.0.3=pyhd3eb1b0_0
+  - qtpy=1.9.0=py_0
+  - readline=8.1=h27cfd23_0
+  - regex=2021.4.4=py37h27cfd23_0
+  - requests=2.25.1=pyhd3eb1b0_0
+  - ripgrep=12.1.1=0
+  - rope=0.18.0=py_0
+  - ruamel_yaml=0.15.100=py37h27cfd23_0
+  - scikit-image=0.16.2=py37h0573a6f_0
+  - scikit-learn=0.24.2=py37ha9443f7_0
+  - scipy=1.6.2=py37h91f5cce_0
+  - seaborn=0.11.1=pyhd3eb1b0_0
+  - secretstorage=3.3.1=py37h06a4308_0
+  - send2trash=1.5.0=pyhd3eb1b0_1
+  - setuptools=52.0.0=py37h06a4308_0
+  - simplegeneric=0.8.1=py37_2
+  - singledispatch=3.6.1=pyhd3eb1b0_1001
+  - sip=4.19.8=py37hf484d3e_0
+  - six=1.15.0=py37h06a4308_0
+  - snappy=1.1.8=he6710b0_0
+  - sniffio=1.2.0=py37h06a4308_1
+  - snowballstemmer=2.1.0=pyhd3eb1b0_0
+  - sortedcollections=2.1.0=pyhd3eb1b0_0
+  - sortedcontainers=2.3.0=pyhd3eb1b0_0
+  - soupsieve=2.2.1=pyhd3eb1b0_0
+  - sphinx=4.0.1=pyhd3eb1b0_0
+  - sphinxcontrib=1.0=py37_1
+  - sphinxcontrib-applehelp=1.0.2=pyhd3eb1b0_0
+  - sphinxcontrib-devhelp=1.0.2=pyhd3eb1b0_0
+  - sphinxcontrib-htmlhelp=1.0.3=pyhd3eb1b0_0
+  - sphinxcontrib-jsmath=1.0.1=pyhd3eb1b0_0
+  - sphinxcontrib-qthelp=1.0.3=pyhd3eb1b0_0
+  - sphinxcontrib-serializinghtml=1.1.4=pyhd3eb1b0_0
+  - sphinxcontrib-websupport=1.2.4=py_0
+  - spyder=3.3.6=py37_0
+  - spyder-kernels=0.5.2=py37_0
+  - sqlalchemy=1.4.15=py37h27cfd23_0
+  - sqlite=3.35.4=hdfb4753_0
+  - statsmodels=0.12.2=py37h27cfd23_0
+  - sympy=1.8=py37h06a4308_0
+  - tbb=2020.3=hfd86e86_0
+  - tblib=1.7.0=py_0
+  - terminado=0.9.4=py37h06a4308_0
+  - testpath=0.4.4=pyhd3eb1b0_0
+  - threadpoolctl=2.1.0=pyh5ca1d4c_0
+  - tk=8.6.10=hbc83047_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - toolz=0.11.1=pyhd3eb1b0_0
+  - tornado=6.1=py37h27cfd23_0
+  - tqdm=4.59.0=pyhd3eb1b0_1
+  - traitlets=5.0.5=pyhd3eb1b0_0
+  - typed-ast=1.4.2=py37h27cfd23_1
+  - typing_extensions=3.7.4.3=pyh06a4308_0
+  - unicodecsv=0.14.1=py37_0
+  - unixodbc=2.3.9=h7b6447c_0
+  - urllib3=1.26.4=pyhd3eb1b0_0
+  - wcwidth=0.2.5=py_0
+  - webencodings=0.5.1=py37_1
+  - wheel=0.36.2=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.1=py37_0
+  - wrapt=1.12.1=py37h7b6447c_1
+  - wurlitzer=2.1.0=py37h06a4308_0
+  - xlrd=2.0.1=pyhd3eb1b0_0
+  - xlsxwriter=1.3.8=pyhd3eb1b0_0
+  - xlwt=1.3.0=py37_0
+  - xmltodict=0.12.0=py_0
+  - xz=5.2.5=h7b6447c_0
+  - yaml=0.2.5=h7b6447c_0
+  - zeromq=4.3.4=h2531618_0
+  - zict=2.0.0=pyhd3eb1b0_0
+  - zipp=3.4.1=pyhd3eb1b0_0
+  - zlib=1.2.11=h7b6447c_3
+  - zope=1.0=py37_1
+  - zope.event=4.5.0=py37_0
+  - zope.interface=5.3.0=py37h27cfd23_0
+  - zstd=1.4.9=haebb681_0
+  - pip:
+    - aiohttp==3.7.4.post0
+    - aiohttp-cors==0.7.0
+    - aioredis==1.3.1
+    - altair==4.1.0
+    - aniso8601==9.0.1
+    - async-timeout==3.0.1
+    - backoff==1.11.1
+    - base58==2.1.0
+    - black==21.7b0
+    - blessings==1.7
+    - blinker==1.4
+    - cachecontrol==0.12.6
+    - camera==1.3.0
+    - catboost==0.26
+    - chardet==3.0.4
+    - clearml==1.0.4
+    - click==7.1.2
+    - colorful==0.5.4
+    - configparser==5.0.2
+    - deprecated==1.2.12
+    - detectron2==0.4+cu101
+    - distlib==0.3.2
+    - distro==1.6.0
+    - dlib==19.22.0
+    - dnspython==1.16.0
+    - docker-pycreds==0.4.0
+    - docopt==0.6.2
+    - face-recognition==1.3.0
+    - face-recognition-models==0.3.0
+    - firebase==3.0.1
+    - firebase-admin==5.0.1
+    - flaml==0.5.12
+    - flask==2.0.1
+    - flask-restful==0.3.9
+    - flask-simple-geoip==0.2.4
+    - furl==2.1.2
+    - futures==3.1.1
+    - fvcore==0.1.3.post20210317
+    - gcloud==0.18.3
+    - gender-guesser==0.4.0
+    - gitdb==4.0.7
+    - gitpython==3.1.17
+    - google-api-core==1.30.0
+    - google-api-python-client==2.15.0
+    - google-auth==1.30.1
+    - google-auth-httplib2==0.1.0
+    - google-cloud-core==1.7.2
+    - google-cloud-firestore==2.2.0
+    - google-cloud-storage==1.41.1
+    - google-crc32c==1.1.2
+    - google-resumable-media==1.3.3
+    - googleapis-common-protos==1.53.0
+    - googletrans==3.1.0a0
+    - gpustat==0.6.0
+    - grpcio==1.38.0
+    - gunicorn==20.0.4
+    - h11==0.9.0
+    - h2==3.2.0
+    - hiredis==2.0.0
+    - hpack==3.0.0
+    - hstspreload==2021.7.5
+    - httpcore==0.9.1
+    - httplib2==0.19.1
+    - httpx==0.13.3
+    - huggingface-hub==0.0.12
+    - humanfriendly==9.2
+    - hyperframe==5.2.0
+    - imageio-ffmpeg==0.4.4
+    - imutils==0.5.4
+    - iopath==0.1.8
+    - ipaddress==1.0.23
+    - jedi==0.18.0
+    - js2py==0.71
+    - jwcrypto==1.0
+    - lightgbm==3.2.1
+    - mailer==0.8.1
+    - matplotlib==3.4.2
+    - moviepy==1.0.3
+    - multidict==5.1.0
+    - numpy==1.20.3
+    - nvidia-ml-py3==7.352.0
+    - oauth2client==4.1.3
+    - omegaconf==2.0.6
+    - opencensus==0.7.13
+    - opencensus-context==0.1.2
+    - opencv-contrib-python==4.5.2.52
+    - orderedmultidict==1.0.1
+    - pandas-read-xml==0.3.1
+    - pathspec==0.9.0
+    - pathtools==0.1.2
+    - phonenumbers==8.12.28
+    - pipwin==0.5.1
+    - plotly==5.1.0
+    - portalocker==2.3.0
+    - proglog==0.1.9
+    - promise==2.3
+    - proto-plus==1.19.0
+    - protobuf==3.17.2
+    - py-spy==0.3.7
+    - pyarrow==4.0.1
+    - pycocotools==2.0.2
+    - pydantic==1.8.2
+    - pydeck==0.6.2
+    - pydot==1.4.2
+    - pygeoip==0.3.2
+    - pyjsparser==2.7.1
+    - pyjwt==1.7.1
+    - pymongo==3.12.0
+    - pyprind==2.11.3
+    - pysmartdl==1.3.4
+    - pyspin==1.1.1
+    - python-graphviz==0.16
+    - python-jwt==3.3.0
+    - pyyaml==5.1
+    - ray==1.4.1
+    - redis==3.5.3
+    - requests-toolbelt==0.9.1
+    - rfc3986==1.5.0
+    - sacremoses==0.0.45
+    - sentry-sdk==1.1.0
+    - shortuuid==1.0.1
+    - simple-geoip==0.1.1
+    - smmap==4.0.0
+    - speechrecognition==3.8.1
+    - sseclient==0.0.27
+    - streamlit==0.84.1
+    - stripe==2.60.0
+    - subprocess32==3.5.4
+    - tabulate==0.8.9
+    - tenacity==7.0.0
+    - tensorboard==2.5.0
+    - tensorboard-data-server==0.6.1
+    - tensorboard-plugin-wit==1.8.0
+    - tensorboardx==2.4
+    - tokenizers==0.10.3
+    - tomli==1.2.1
+    - torch==1.7.1+cu110
+    - torchaudio==0.7.2
+    - torchvision==0.8.2+cu110
+    - transformers==4.9.2
+    - twilio==6.62.1
+    - typing-extensions==3.10.0.0
+    - tzlocal==2.1
+    - uritemplate==3.0.1
+    - validators==0.18.2
+    - vonage==2.5.5
+    - wandb==0.12.0
+    - watchdog==2.1.3
+    - werkzeug==2.0.1
+    - xgboost==1.4.2
+    - yacs==0.1.8
+    - yarl==1.6.3
+    - zipfile36==0.1.3
+prefix: /home/indika/anaconda3
diff --git a/wandb/run-20210825_105632-sgmyybmk/files/config.yaml b/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
index 415cd40..b0ea479 100644
--- a/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
+++ b/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
@@ -16,6 +16,14 @@ _wandb:
       - 6
       - 7
       - 8
+      2:
+      - 1
+      - 5
+      - 6
+      - 7
+      - 8
+      3:
+      - 2
       4: 3.7.7
       5: 0.12.0
       8:
diff --git a/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json b/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
index 9e26dfe..13ed209 100644
--- a/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
+++ b/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
@@ -1 +1 @@
-{}
\ No newline at end of file
+{"_wandb": {"runtime": 7}}
\ No newline at end of file
diff --git a/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log b/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log
index f2c80cd..a3c357b 100644
--- a/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log
+++ b/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log
@@ -22,3 +22,152 @@
 2021-08-25 10:57:00,191 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/requirements.txt
 2021-08-25 10:57:00,192 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
 2021-08-25 10:57:00,192 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+2021-08-25 10:57:05,194 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/output.log
+2021-08-25 10:57:06,525 DEBUG   HandlerThread:109081 [meta.py:_save_conda():86] save conda done
+2021-08-25 10:57:06,525 DEBUG   HandlerThread:109081 [meta.py:probe():252] probe done
+2021-08-25 10:57:06,547 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: stop_status
+2021-08-25 10:57:06,548 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:06,548 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: stop_status
+2021-08-25 10:57:06,904 DEBUG   SenderThread:109081 [sender.py:send():182] send: telemetry
+2021-08-25 10:57:06,904 DEBUG   SenderThread:109081 [sender.py:send():182] send: exit
+2021-08-25 10:57:06,904 INFO    SenderThread:109081 [sender.py:send_exit():291] handling exit code: 0
+2021-08-25 10:57:06,904 INFO    SenderThread:109081 [sender.py:send_exit():293] handling runtime: 7
+2021-08-25 10:57:06,907 INFO    SenderThread:109081 [sender.py:_save_file():873] saving file wandb-summary.json with policy end
+2021-08-25 10:57:06,907 INFO    SenderThread:109081 [sender.py:send_exit():303] send defer
+2021-08-25 10:57:06,907 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:06,907 DEBUG   SenderThread:109081 [sender.py:send():182] send: files
+2021-08-25 10:57:06,908 INFO    SenderThread:109081 [sender.py:_save_file():873] saving file wandb-metadata.json with policy now
+2021-08-25 10:57:06,908 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,908 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 0
+2021-08-25 10:57:06,908 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,909 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 0
+2021-08-25 10:57:06,909 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 1
+2021-08-25 10:57:06,909 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,909 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 1
+2021-08-25 10:57:06,970 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,970 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 1
+2021-08-25 10:57:06,970 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 2
+2021-08-25 10:57:06,970 DEBUG   SenderThread:109081 [sender.py:send():182] send: stats
+2021-08-25 10:57:06,971 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,971 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 2
+2021-08-25 10:57:06,971 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,971 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 2
+2021-08-25 10:57:06,971 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 3
+2021-08-25 10:57:06,971 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,971 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 3
+2021-08-25 10:57:06,971 DEBUG   SenderThread:109081 [sender.py:send():182] send: summary
+2021-08-25 10:57:06,971 INFO    SenderThread:109081 [sender.py:_save_file():873] saving file wandb-summary.json with policy end
+2021-08-25 10:57:06,972 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,972 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 3
+2021-08-25 10:57:06,972 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 4
+2021-08-25 10:57:06,972 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,972 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 4
+2021-08-25 10:57:06,972 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,972 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 4
+2021-08-25 10:57:07,013 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:07,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_modified():229] file/dir modified: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
+2021-08-25 10:57:07,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_modified():229] file/dir modified: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+2021-08-25 10:57:07,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-metadata.json
+2021-08-25 10:57:07,386 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 5
+2021-08-25 10:57:07,386 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:07,387 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:07,387 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 5
+2021-08-25 10:57:07,387 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:07,387 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 5
+2021-08-25 10:57:07,387 INFO    SenderThread:109081 [dir_watcher.py:finish():282] shutting down directory watcher
+2021-08-25 10:57:07,489 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:07,789 INFO    Thread-11 :109081 [upload_job.py:push():137] Uploaded file /tmp/tmpj76p0lzjwandb/22h9mbg6-wandb-metadata.json
+2021-08-25 10:57:08,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_modified():229] file/dir modified: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
+2021-08-25 10:57:08,196 INFO    SenderThread:109081 [dir_watcher.py:finish():312] scan: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files
+2021-08-25 10:57:08,196 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json wandb-summary.json
+2021-08-25 10:57:08,196 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml conda-environment.yaml
+2021-08-25 10:57:08,197 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/requirements.txt requirements.txt
+2021-08-25 10:57:08,201 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-metadata.json wandb-metadata.json
+2021-08-25 10:57:08,201 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/config.yaml config.yaml
+2021-08-25 10:57:08,206 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/output.log output.log
+2021-08-25 10:57:08,210 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 6
+2021-08-25 10:57:08,210 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,211 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:08,211 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 6
+2021-08-25 10:57:08,216 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:08,216 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 6
+2021-08-25 10:57:08,216 INFO    SenderThread:109081 [file_pusher.py:finish():177] shutting down file pusher
+2021-08-25 10:57:08,318 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,318 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,420 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,420 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,521 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,521 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,622 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,623 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,724 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,724 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,826 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,827 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,929 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,929 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,030 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,031 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,133 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,133 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,235 INFO    Thread-13 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+2021-08-25 10:57:09,235 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,238 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,266 INFO    Thread-12 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
+2021-08-25 10:57:09,340 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,340 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,441 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,441 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,543 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,543 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,644 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,644 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,658 INFO    Thread-14 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/requirements.txt
+2021-08-25 10:57:09,745 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,745 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,847 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,847 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,948 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,949 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,050 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,050 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,151 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,152 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,253 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,253 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,258 INFO    Thread-15 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
+2021-08-25 10:57:10,355 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,355 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,456 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,456 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,459 INFO    Thread-7  :109081 [sender.py:transition_state():316] send defer: 7
+2021-08-25 10:57:10,459 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:10,459 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 7
+2021-08-25 10:57:10,459 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:10,460 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 7
+2021-08-25 10:57:10,558 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,718 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 8
+2021-08-25 10:57:10,718 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,718 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:10,718 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 8
+2021-08-25 10:57:10,719 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:10,719 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 8
+2021-08-25 10:57:10,719 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 9
+2021-08-25 10:57:10,719 DEBUG   SenderThread:109081 [sender.py:send():182] send: final
+2021-08-25 10:57:10,719 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:10,719 DEBUG   SenderThread:109081 [sender.py:send():182] send: footer
+2021-08-25 10:57:10,719 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 9
+2021-08-25 10:57:10,720 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:10,720 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 9
+2021-08-25 10:57:10,820 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,820 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,820 INFO    SenderThread:109081 [file_pusher.py:join():182] waiting for file pusher
+2021-08-25 10:57:10,821 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: get_summary
+2021-08-25 10:57:10,822 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: sampled_history
+2021-08-25 10:57:10,823 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: shutdown
+2021-08-25 10:57:10,823 INFO    HandlerThread:109081 [handler.py:finish():677] shutting down handler
+2021-08-25 10:57:11,720 INFO    WriterThread:109081 [datastore.py:close():281] close: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb
+2021-08-25 10:57:11,820 INFO    SenderThread:109081 [sender.py:finish():979] shutting down sender
+2021-08-25 10:57:11,820 INFO    SenderThread:109081 [file_pusher.py:finish():177] shutting down file pusher
+2021-08-25 10:57:11,820 INFO    SenderThread:109081 [file_pusher.py:join():182] waiting for file pusher
+2021-08-25 10:57:11,822 INFO    MainThread:109081 [internal.py:handle_exit():76] Internal process exited
diff --git a/wandb/run-20210825_105632-sgmyybmk/logs/debug.log b/wandb/run-20210825_105632-sgmyybmk/logs/debug.log
index 83e53ab..ae41b8c 100644
--- a/wandb/run-20210825_105632-sgmyybmk/logs/debug.log
+++ b/wandb/run-20210825_105632-sgmyybmk/logs/debug.log
@@ -380,3 +380,18 @@ pusher_stats {
 2021-08-25 10:56:58,706 INFO    MainThread:107641 [wandb_init.py:init():505] got version response 
 2021-08-25 10:56:58,707 INFO    MainThread:107641 [wandb_init.py:init():513] communicating run to backend with 30 second timeout
 2021-08-25 10:56:59,189 INFO    MainThread:107641 [wandb_init.py:init():540] starting run threads in backend
+2021-08-25 10:57:04,196 INFO    MainThread:107641 [wandb_run.py:_console_start():1584] atexit reg
+2021-08-25 10:57:04,196 INFO    MainThread:107641 [wandb_run.py:_redirect():1458] redirect: SettingsConsole.WRAP
+2021-08-25 10:57:04,196 INFO    MainThread:107641 [wandb_run.py:_redirect():1495] Wrapping output streams.
+2021-08-25 10:57:04,197 INFO    MainThread:107641 [wandb_run.py:_redirect():1519] Redirects installed.
+2021-08-25 10:57:04,197 INFO    MainThread:107641 [wandb_init.py:init():565] run started, returning control to user process
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_setup.py:_flush():69] setting env: {}
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_init.py:_log_setup():342] Logging user logs to /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105704-330avsvp/logs/debug.log
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_init.py:_log_setup():343] Logging internal logs to /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105704-330avsvp/logs/debug-internal.log
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:_jupyter_setup():294] configuring jupyter hooks <wandb.sdk.wandb_init._WandbInit object at 0x7fe1740bef90>
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:init():375] calling init triggers
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:init():382] wandb.init called with sweep_config: {}
+config: {}
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:init():397] re-initializing run, found existing run on stack: sgmyybmk
+2021-08-25 10:57:04,213 INFO    MainThread:107641 [wandb_run.py:finish():1254] finishing run ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/sgmyybmk
diff --git a/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb b/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb
index e69de29..846d64d 100644
Binary files a/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb and b/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb differ
