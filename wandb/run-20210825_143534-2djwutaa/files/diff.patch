diff --git a/.ipynb_checkpoints/00-checkpoint.ipynb b/.ipynb_checkpoints/00-checkpoint.ipynb
index 58a3956..16d80fd 100644
--- a/.ipynb_checkpoints/00-checkpoint.ipynb
+++ b/.ipynb_checkpoints/00-checkpoint.ipynb
@@ -37,7 +37,7 @@
     {
      "data": {
       "text/plain": [
-       "<torch._C.Generator at 0x7fe2469f8890>"
+       "<torch._C.Generator at 0x7f4a2c2b3890>"
       ]
      },
      "execution_count": 1,
@@ -187,11 +187,13 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "def fe(data,col):\n",
-    "    max_num = data[col].quantile(0.95)\n",
-    "    min_num = data[col].quantile(0.05)\n",
-    "    data = data[data[col] > max_num]\n",
-    "    data = data[data[col] < min_num]\n",
+    "def fe(data,col,quantile_max_num=0.99,quantile_min_num=0.05):\n",
+    "    max_num = data[col].quantile(quantile_max_num)\n",
+    "    min_num = data[col].quantile(quantile_min_num)\n",
+    "    print(max_num)\n",
+    "    print(min_num)\n",
+    "    data = data[data[col] < max_num]\n",
+    "    data = data[data[col] > min_num]\n",
     "    return data"
    ]
   },
@@ -611,45 +613,9 @@
    "execution_count": 21,
    "id": "cc774b5c-864c-4ca1-98a5-9c15c3f34662",
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mranuga-d\u001b[0m (use `wandb login --relogin` to force relogin)\n"
-     ]
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-without-fe</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "GradientBoostingRegressor()"
-      ]
-     },
-     "execution_count": 21,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
+    "# train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
    ]
   },
   {
@@ -662,340 +628,44 @@
     "X_old = X.copy()"
    ]
   },
+  {
+   "cell_type": "markdown",
+   "id": "4d4e016e-2cb6-47b3-bb2c-f5303038fe9c",
+   "metadata": {},
+   "source": [
+    "## FE"
+   ]
+  },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 23,
    "id": "4a327805-8a37-4c22-880d-2154022c6900",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:2va7zg47) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 107778<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.04MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run summary:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>mean_absolute_error</td><td>10827.12407</td></tr><tr><td>mean_squared_error</td><td>226354142.17452</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629869143</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>10827.12407</td></tr><tr><td>val mean_squared_error</td><td>226354142.17452</td></tr></table>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run history:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-without-fe</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:2va7zg47). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:5klsxrom) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108219<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:5klsxrom). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-MSSubClass</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105618-37zdocsk</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:37zdocsk) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108461<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "05c1906485ec4fb3b148b36707afae62",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.98653788321…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "for col_name in list(X.columns):\n",
-    "    try:\n",
-    "        X = X_old.copy()\n",
-    "        X = fe(X,col_name)\n",
-    "        train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
-    "    except:\n",
-    "        pass"
+    "# for col_name in list(X.columns):\n",
+    "#     try:\n",
+    "#         X = X_old.copy()\n",
+    "#         X = fe(X,col_name)\n",
+    "#         train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
+    "#     except:\n",
+    "#         print('*'*50)\n",
+    "#         print('*'*50)"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 24,
    "id": "18da7858-3bf4-4639-ab12-87cdd08abf78",
    "metadata": {},
    "outputs": [],
    "source": [
-    "X = X_old.copy()"
+    "# X = X_old.copy()"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 25,
    "id": "38925d4b-60a6-4f56-9032-71fca45b4b24",
    "metadata": {},
    "outputs": [],
@@ -1005,21 +675,438 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 26,
+   "id": "6609b3f9-eb00-413a-9fa8-fca9412b0926",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "keep_cols = []"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "06f773a1-48c1-4363-9a49-d30ec7b0d8a5",
+   "metadata": {},
+   "source": [
+    "## Data.corr()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "id": "b98375e9-9c7d-4a25-96e3-0097f2a50134",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for key,val in zip(X_corr.to_dict().keys(),X_corr.to_dict().values()):\n",
+    "#     for val_key,val_vals in zip(val.keys(),val.values()):\n",
+    "#         if val_key == key:\n",
+    "#             pass\n",
+    "#         else:\n",
+    "#             if val_vals > 0.0:\n",
+    "#                 if val_key not in keep_cols:\n",
+    "#                     print(val_vals)\n",
+    "#                     keep_cols.append(val_key)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
    "id": "1eb9628b-e2d3-4813-a29d-21b69c433115",
    "metadata": {},
    "outputs": [],
    "source": [
-    "plt.figure(figsize=(12,7))\n",
-    "sns.heatmap(X_corr)"
+    "# fig,ax = plt.subplots(figsize=(25,12))\n",
+    "# ax = sns.heatmap(X_corr,annot=True,linewidths=0.5,fmt='.2f',cmap='YlGnBu')"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 29,
    "id": "156dd7dd-42dc-49b7-b652-e24c264f5793",
    "metadata": {},
    "outputs": [],
+   "source": [
+    "# keep_cols"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "id": "78fa85e9-8b4c-48cd-9fdb-d75466353819",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# len(keep_cols)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "f6cac9c7-7a7d-4e73-94f0-88110636fbcc",
+   "metadata": {},
+   "source": [
+    "## Analytics"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "id": "38293ea8-66b4-47d6-8978-3c74717e3c58",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Id</th>\n",
+       "      <th>MSSubClass</th>\n",
+       "      <th>MSZoning</th>\n",
+       "      <th>LotFrontage</th>\n",
+       "      <th>LotArea</th>\n",
+       "      <th>Street</th>\n",
+       "      <th>Alley</th>\n",
+       "      <th>LotShape</th>\n",
+       "      <th>LandContour</th>\n",
+       "      <th>Utilities</th>\n",
+       "      <th>...</th>\n",
+       "      <th>ScreenPorch</th>\n",
+       "      <th>PoolArea</th>\n",
+       "      <th>PoolQC</th>\n",
+       "      <th>Fence</th>\n",
+       "      <th>MiscFeature</th>\n",
+       "      <th>MiscVal</th>\n",
+       "      <th>MoSold</th>\n",
+       "      <th>YrSold</th>\n",
+       "      <th>SaleType</th>\n",
+       "      <th>SaleCondition</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>65.0</td>\n",
+       "      <td>8450</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>2</td>\n",
+       "      <td>20</td>\n",
+       "      <td>0</td>\n",
+       "      <td>80.0</td>\n",
+       "      <td>9600</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>5</td>\n",
+       "      <td>2007</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>3</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>68.0</td>\n",
+       "      <td>11250</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>4</td>\n",
+       "      <td>70</td>\n",
+       "      <td>0</td>\n",
+       "      <td>60.0</td>\n",
+       "      <td>9550</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2006</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>5</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>84.0</td>\n",
+       "      <td>14260</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>12</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>5 rows × 80 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "   Id  MSSubClass  MSZoning  LotFrontage  LotArea  Street  Alley  LotShape  \\\n",
+       "0   1          60         0         65.0     8450       0      0         0   \n",
+       "1   2          20         0         80.0     9600       0      0         0   \n",
+       "2   3          60         0         68.0    11250       0      0         1   \n",
+       "3   4          70         0         60.0     9550       0      0         1   \n",
+       "4   5          60         0         84.0    14260       0      0         1   \n",
+       "\n",
+       "   LandContour  Utilities  ...  ScreenPorch  PoolArea  PoolQC  Fence  \\\n",
+       "0            0          0  ...            0         0       0      0   \n",
+       "1            0          0  ...            0         0       0      0   \n",
+       "2            0          0  ...            0         0       0      0   \n",
+       "3            0          0  ...            0         0       0      0   \n",
+       "4            0          0  ...            0         0       0      0   \n",
+       "\n",
+       "   MiscFeature  MiscVal  MoSold  YrSold  SaleType  SaleCondition  \n",
+       "0            0        0       2    2008         0              0  \n",
+       "1            0        0       5    2007         0              0  \n",
+       "2            0        0       9    2008         0              0  \n",
+       "3            0        0       2    2006         0              1  \n",
+       "4            0        0      12    2008         0              0  \n",
+       "\n",
+       "[5 rows x 80 columns]"
+      ]
+     },
+     "execution_count": 31,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "X.head()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "b1bbdd3b-7bdf-4952-837f-590aac4f4913",
+   "metadata": {},
+   "source": [
+    "## Preproccessing"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 32,
+   "id": "55582a60-6b50-4c0e-9828-c447125cfacf",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_old = X.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 33,
+   "id": "e91f6a7d-0428-4aba-943a-cfe85e427cd1",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for preproccessing in preproccessings:\n",
+    "#     X = X_old.copy()\n",
+    "#     preproccessing = preproccessing()\n",
+    "#     X = preproccessing.fit_transform(X)\n",
+    "#     train(GradientBoostingRegressor(),X,X,y,y,name=f'{preproccessing}-preproccessing')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 34,
+   "id": "dc4e18e1-db0c-4674-9223-3f58d448f5ca",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 35,
+   "id": "43c60d85-74d2-4483-89ab-a9ef94a8b00c",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 36,
+   "id": "6dd96d0f-dc01-4f26-863c-fbd6525cccf2",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=True,select_k_best=False,rfecv=False)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=True-select_k_best=False-rfecv=False-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 37,
+   "id": "e01142e6-681e-44bc-8e7f-26381af4020d",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 38,
+   "id": "d34c8787-9ef7-41ec-92f7-647484d7e207",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "b583e5fa-ffea-4e58-a19e-8294848640a5",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=False,select_k_best=False,rfecv=True)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=False-select_k_best=False-rfecv=True-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "e9deaaed-087d-4592-8a5e-dbaca167b3a6",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "fa280dec-4410-4986-9319-de078331dfe7",
+   "metadata": {},
+   "source": [
+    "## Modelling"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "id": "e9cb2055-bbee-41cc-a543-c1ae6b8df0d9",
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'modle' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;32m<ipython-input-41-c42f5069d227>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmodels\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodle\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34mf'{model[0]}'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m: name 'modle' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "for model in models:\n",
+    "    train(model[1](),X,X,y,y,name=f'{model[0]}')"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "3b8e70f7-b7bd-4f65-95b1-40cfad5ee1d6",
+   "metadata": {},
+   "source": [
+    "## Random Search"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "e8494e9a-8189-4b03-a5ea-21ce23d014da",
+   "metadata": {},
+   "outputs": [],
    "source": []
   }
  ],
diff --git a/00.ipynb b/00.ipynb
index 58a3956..16d80fd 100644
--- a/00.ipynb
+++ b/00.ipynb
@@ -37,7 +37,7 @@
     {
      "data": {
       "text/plain": [
-       "<torch._C.Generator at 0x7fe2469f8890>"
+       "<torch._C.Generator at 0x7f4a2c2b3890>"
       ]
      },
      "execution_count": 1,
@@ -187,11 +187,13 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "def fe(data,col):\n",
-    "    max_num = data[col].quantile(0.95)\n",
-    "    min_num = data[col].quantile(0.05)\n",
-    "    data = data[data[col] > max_num]\n",
-    "    data = data[data[col] < min_num]\n",
+    "def fe(data,col,quantile_max_num=0.99,quantile_min_num=0.05):\n",
+    "    max_num = data[col].quantile(quantile_max_num)\n",
+    "    min_num = data[col].quantile(quantile_min_num)\n",
+    "    print(max_num)\n",
+    "    print(min_num)\n",
+    "    data = data[data[col] < max_num]\n",
+    "    data = data[data[col] > min_num]\n",
     "    return data"
    ]
   },
@@ -611,45 +613,9 @@
    "execution_count": 21,
    "id": "cc774b5c-864c-4ca1-98a5-9c15c3f34662",
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mranuga-d\u001b[0m (use `wandb login --relogin` to force relogin)\n"
-     ]
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-without-fe</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "GradientBoostingRegressor()"
-      ]
-     },
-     "execution_count": 21,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
+    "# train(GradientBoostingRegressor(),X,X,y,y,name='baseline-without-fe')"
    ]
   },
   {
@@ -662,340 +628,44 @@
     "X_old = X.copy()"
    ]
   },
+  {
+   "cell_type": "markdown",
+   "id": "4d4e016e-2cb6-47b3-bb2c-f5303038fe9c",
+   "metadata": {},
+   "source": [
+    "## FE"
+   ]
+  },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 23,
    "id": "4a327805-8a37-4c22-880d-2154022c6900",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:2va7zg47) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 107778<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.04MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105536-2va7zg47/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run summary:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>mean_absolute_error</td><td>10827.12407</td></tr><tr><td>mean_squared_error</td><td>226354142.17452</td></tr><tr><td>_runtime</td><td>7</td></tr><tr><td>_timestamp</td><td>1629869143</td></tr><tr><td>_step</td><td>1</td></tr><tr><td>val mean_absolute_error</td><td>10827.12407</td></tr><tr><td>val mean_squared_error</td><td>226354142.17452</td></tr></table>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run history:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>mean_absolute_error</td><td>▁</td></tr><tr><td>mean_squared_error</td><td>▁</td></tr><tr><td>_runtime</td><td>▁▁</td></tr><tr><td>_timestamp</td><td>▁▁</td></tr><tr><td>_step</td><td>▁█</td></tr><tr><td>val mean_absolute_error</td><td>▁</td></tr><tr><td>val mean_squared_error</td><td>▁</td></tr></table><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-without-fe</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/2va7zg47</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:2va7zg47). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:5klsxrom) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108219<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105544-5klsxrom/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">baseline-with-fe-Id</strong>: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/5klsxrom</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:5klsxrom). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.12.0<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">baseline-with-fe-MSSubClass</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk\" target=\"_blank\">https://wandb.ai/ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/runs/37zdocsk</a><br/>\n",
-       "                Run data is saved locally in <code>/home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105618-37zdocsk</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:37zdocsk) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 108461<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "05c1906485ec4fb3b148b36707afae62",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.05MB of 0.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=0.98653788321…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "for col_name in list(X.columns):\n",
-    "    try:\n",
-    "        X = X_old.copy()\n",
-    "        X = fe(X,col_name)\n",
-    "        train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
-    "    except:\n",
-    "        pass"
+    "# for col_name in list(X.columns):\n",
+    "#     try:\n",
+    "#         X = X_old.copy()\n",
+    "#         X = fe(X,col_name)\n",
+    "#         train(GradientBoostingRegressor(),X,X,y,y,name=f'baseline-with-fe-{col_name}')\n",
+    "#     except:\n",
+    "#         print('*'*50)\n",
+    "#         print('*'*50)"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 24,
    "id": "18da7858-3bf4-4639-ab12-87cdd08abf78",
    "metadata": {},
    "outputs": [],
    "source": [
-    "X = X_old.copy()"
+    "# X = X_old.copy()"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 25,
    "id": "38925d4b-60a6-4f56-9032-71fca45b4b24",
    "metadata": {},
    "outputs": [],
@@ -1005,21 +675,438 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 26,
+   "id": "6609b3f9-eb00-413a-9fa8-fca9412b0926",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "keep_cols = []"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "06f773a1-48c1-4363-9a49-d30ec7b0d8a5",
+   "metadata": {},
+   "source": [
+    "## Data.corr()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "id": "b98375e9-9c7d-4a25-96e3-0097f2a50134",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for key,val in zip(X_corr.to_dict().keys(),X_corr.to_dict().values()):\n",
+    "#     for val_key,val_vals in zip(val.keys(),val.values()):\n",
+    "#         if val_key == key:\n",
+    "#             pass\n",
+    "#         else:\n",
+    "#             if val_vals > 0.0:\n",
+    "#                 if val_key not in keep_cols:\n",
+    "#                     print(val_vals)\n",
+    "#                     keep_cols.append(val_key)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
    "id": "1eb9628b-e2d3-4813-a29d-21b69c433115",
    "metadata": {},
    "outputs": [],
    "source": [
-    "plt.figure(figsize=(12,7))\n",
-    "sns.heatmap(X_corr)"
+    "# fig,ax = plt.subplots(figsize=(25,12))\n",
+    "# ax = sns.heatmap(X_corr,annot=True,linewidths=0.5,fmt='.2f',cmap='YlGnBu')"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 29,
    "id": "156dd7dd-42dc-49b7-b652-e24c264f5793",
    "metadata": {},
    "outputs": [],
+   "source": [
+    "# keep_cols"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "id": "78fa85e9-8b4c-48cd-9fdb-d75466353819",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# len(keep_cols)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "f6cac9c7-7a7d-4e73-94f0-88110636fbcc",
+   "metadata": {},
+   "source": [
+    "## Analytics"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "id": "38293ea8-66b4-47d6-8978-3c74717e3c58",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Id</th>\n",
+       "      <th>MSSubClass</th>\n",
+       "      <th>MSZoning</th>\n",
+       "      <th>LotFrontage</th>\n",
+       "      <th>LotArea</th>\n",
+       "      <th>Street</th>\n",
+       "      <th>Alley</th>\n",
+       "      <th>LotShape</th>\n",
+       "      <th>LandContour</th>\n",
+       "      <th>Utilities</th>\n",
+       "      <th>...</th>\n",
+       "      <th>ScreenPorch</th>\n",
+       "      <th>PoolArea</th>\n",
+       "      <th>PoolQC</th>\n",
+       "      <th>Fence</th>\n",
+       "      <th>MiscFeature</th>\n",
+       "      <th>MiscVal</th>\n",
+       "      <th>MoSold</th>\n",
+       "      <th>YrSold</th>\n",
+       "      <th>SaleType</th>\n",
+       "      <th>SaleCondition</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>65.0</td>\n",
+       "      <td>8450</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>2</td>\n",
+       "      <td>20</td>\n",
+       "      <td>0</td>\n",
+       "      <td>80.0</td>\n",
+       "      <td>9600</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>5</td>\n",
+       "      <td>2007</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>3</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>68.0</td>\n",
+       "      <td>11250</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>4</td>\n",
+       "      <td>70</td>\n",
+       "      <td>0</td>\n",
+       "      <td>60.0</td>\n",
+       "      <td>9550</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2006</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>5</td>\n",
+       "      <td>60</td>\n",
+       "      <td>0</td>\n",
+       "      <td>84.0</td>\n",
+       "      <td>14260</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>12</td>\n",
+       "      <td>2008</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>5 rows × 80 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "   Id  MSSubClass  MSZoning  LotFrontage  LotArea  Street  Alley  LotShape  \\\n",
+       "0   1          60         0         65.0     8450       0      0         0   \n",
+       "1   2          20         0         80.0     9600       0      0         0   \n",
+       "2   3          60         0         68.0    11250       0      0         1   \n",
+       "3   4          70         0         60.0     9550       0      0         1   \n",
+       "4   5          60         0         84.0    14260       0      0         1   \n",
+       "\n",
+       "   LandContour  Utilities  ...  ScreenPorch  PoolArea  PoolQC  Fence  \\\n",
+       "0            0          0  ...            0         0       0      0   \n",
+       "1            0          0  ...            0         0       0      0   \n",
+       "2            0          0  ...            0         0       0      0   \n",
+       "3            0          0  ...            0         0       0      0   \n",
+       "4            0          0  ...            0         0       0      0   \n",
+       "\n",
+       "   MiscFeature  MiscVal  MoSold  YrSold  SaleType  SaleCondition  \n",
+       "0            0        0       2    2008         0              0  \n",
+       "1            0        0       5    2007         0              0  \n",
+       "2            0        0       9    2008         0              0  \n",
+       "3            0        0       2    2006         0              1  \n",
+       "4            0        0      12    2008         0              0  \n",
+       "\n",
+       "[5 rows x 80 columns]"
+      ]
+     },
+     "execution_count": 31,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "X.head()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "b1bbdd3b-7bdf-4952-837f-590aac4f4913",
+   "metadata": {},
+   "source": [
+    "## Preproccessing"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 32,
+   "id": "55582a60-6b50-4c0e-9828-c447125cfacf",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X_old = X.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 33,
+   "id": "e91f6a7d-0428-4aba-943a-cfe85e427cd1",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# for preproccessing in preproccessings:\n",
+    "#     X = X_old.copy()\n",
+    "#     preproccessing = preproccessing()\n",
+    "#     X = preproccessing.fit_transform(X)\n",
+    "#     train(GradientBoostingRegressor(),X,X,y,y,name=f'{preproccessing}-preproccessing')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 34,
+   "id": "dc4e18e1-db0c-4674-9223-3f58d448f5ca",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 35,
+   "id": "43c60d85-74d2-4483-89ab-a9ef94a8b00c",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 36,
+   "id": "6dd96d0f-dc01-4f26-863c-fbd6525cccf2",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=True,select_k_best=False,rfecv=False)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=True-select_k_best=False-rfecv=False-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 37,
+   "id": "e01142e6-681e-44bc-8e7f-26381af4020d",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 38,
+   "id": "d34c8787-9ef7-41ec-92f7-647484d7e207",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "b583e5fa-ffea-4e58-a19e-8294848640a5",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# X = feature_selection_prep_data(GradientBoostingRegressor(),X,y,select_from_model=False,variance_threshold=False,select_k_best=False,rfecv=True)\n",
+    "# train(GradientBoostingRegressor(),X,X,y,y,name=f'select_from_model=False-variance_threshold=False-select_k_best=False-rfecv=True-decomposition')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "e9deaaed-087d-4592-8a5e-dbaca167b3a6",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "X = X_old.copy()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "fa280dec-4410-4986-9319-de078331dfe7",
+   "metadata": {},
+   "source": [
+    "## Modelling"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "id": "e9cb2055-bbee-41cc-a543-c1ae6b8df0d9",
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'modle' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;32m<ipython-input-41-c42f5069d227>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmodels\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodle\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34mf'{model[0]}'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m: name 'modle' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "for model in models:\n",
+    "    train(model[1](),X,X,y,y,name=f'{model[0]}')"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "id": "3b8e70f7-b7bd-4f65-95b1-40cfad5ee1d6",
+   "metadata": {},
+   "source": [
+    "## Random Search"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "e8494e9a-8189-4b03-a5ea-21ce23d014da",
+   "metadata": {},
+   "outputs": [],
    "source": []
   }
  ],
diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
index 9c286e3..a9cded6 120000
--- a/wandb/debug-internal.log
+++ b/wandb/debug-internal.log
@@ -1 +1 @@
-run-20210825_105632-sgmyybmk/logs/debug-internal.log
\ No newline at end of file
+run-20210825_143534-2djwutaa/logs/debug-internal.log
\ No newline at end of file
diff --git a/wandb/debug.log b/wandb/debug.log
index 8002f7c..8f86835 120000
--- a/wandb/debug.log
+++ b/wandb/debug.log
@@ -1 +1 @@
-run-20210825_105632-sgmyybmk/logs/debug.log
\ No newline at end of file
+run-20210825_143534-2djwutaa/logs/debug.log
\ No newline at end of file
diff --git a/wandb/latest-run b/wandb/latest-run
index 9382411..d758dae 120000
--- a/wandb/latest-run
+++ b/wandb/latest-run
@@ -1 +1 @@
-run-20210825_105632-sgmyybmk
\ No newline at end of file
+run-20210825_143534-2djwutaa
\ No newline at end of file
diff --git a/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml b/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
index e69de29..a509d5f 100644
--- a/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+++ b/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
@@ -0,0 +1,486 @@
+name: base
+channels:
+  - defaults
+dependencies:
+  - _anaconda_depends=2019.10=py37_0
+  - _ipyw_jlab_nb_ext_conf=0.1.0=py37_0
+  - _libgcc_mutex=0.1=main
+  - _pytorch_select=0.1=cpu_0
+  - alabaster=0.7.12=py37_0
+  - anaconda=custom=py37_1
+  - anaconda-client=1.7.2=py37_0
+  - anaconda-navigator=1.9.12=py37_0
+  - anaconda-project=0.10.0=pyhd3eb1b0_0
+  - anyio=2.2.0=py37h06a4308_1
+  - appdirs=1.4.4=py_0
+  - argon2-cffi=20.1.0=py37h27cfd23_1
+  - asn1crypto=1.4.0=py_0
+  - astroid=2.5=py37h06a4308_1
+  - astropy=4.2.1=py37h27cfd23_1
+  - async_generator=1.10=py37h28b3542_0
+  - atomicwrites=1.4.0=py_0
+  - attrs=21.2.0=pyhd3eb1b0_0
+  - babel=2.9.1=pyhd3eb1b0_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - backports=1.0=pyhd3eb1b0_2
+  - backports.functools_lru_cache=1.6.4=pyhd3eb1b0_0
+  - backports.os=0.1.1=py37_1002
+  - backports.shutil_get_terminal_size=1.0.0=pyhd3eb1b0_3
+  - backports.tempfile=1.0=pyhd3eb1b0_1
+  - backports.weakref=1.0.post1=py_1
+  - beautifulsoup4=4.9.3=pyha847dfd_0
+  - bitarray=2.1.0=py37h27cfd23_1
+  - bkcharts=0.2=py37_0
+  - blas=1.0=mkl
+  - bleach=3.3.0=pyhd3eb1b0_0
+  - blosc=1.21.0=h8c45485_0
+  - bokeh=2.3.2=py37h06a4308_0
+  - boto=2.49.0=py37_0
+  - bottleneck=1.3.2=py37heb32a55_1
+  - brotlipy=0.7.0=py37h27cfd23_1003
+  - bzip2=1.0.8=h7b6447c_0
+  - c-ares=1.17.1=h27cfd23_0
+  - ca-certificates=2021.7.5=h06a4308_1
+  - cairo=1.16.0=hf32fb01_1
+  - certifi=2021.5.30=py37h06a4308_0
+  - cffi=1.14.5=py37h261ae71_0
+  - cloudpickle=1.6.0=py_0
+  - clyent=1.2.2=py37_1
+  - colorama=0.4.4=pyhd3eb1b0_0
+  - conda=4.10.3=py37h06a4308_0
+  - conda-build=3.18.11=py37_0
+  - conda-env=2.6.0=1
+  - conda-pack=0.6.0=pyhd3eb1b0_0
+  - conda-package-handling=1.7.3=py37h27cfd23_1
+  - conda-verify=3.4.2=py_1
+  - contextlib2=0.6.0.post1=py_0
+  - cryptography=3.4.7=py37hd23ed53_0
+  - cudatoolkit=10.1.243=h6bb024c_0
+  - curl=7.71.1=hbc83047_1
+  - cycler=0.10.0=py37_0
+  - cython=0.29.23=py37h2531618_0
+  - cytoolz=0.11.0=py37h7b6447c_0
+  - dask=2021.5.1=pyhd3eb1b0_0
+  - dask-core=2021.5.1=pyhd3eb1b0_0
+  - dbus=1.13.18=hb2f20db_0
+  - decorator=4.4.2=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - distributed=2021.5.1=py37h06a4308_0
+  - docutils=0.17.1=py37h06a4308_1
+  - entrypoints=0.3=py37_0
+  - et_xmlfile=1.1.0=py37h06a4308_0
+  - expat=2.4.1=h2531618_2
+  - fastcache=1.1.0=py37h7b6447c_0
+  - filelock=3.0.12=pyhd3eb1b0_1
+  - fontconfig=2.13.1=h6c09931_0
+  - freetype=2.10.4=h5ab3b9f_0
+  - fribidi=1.0.10=h7b6447c_0
+  - fsspec=0.9.0=pyhd3eb1b0_0
+  - future=0.18.2=py37_1
+  - get_terminal_size=1.0.0=haa9412d_0
+  - gevent=21.1.2=py37h27cfd23_1
+  - glib=2.68.2=h36276a3_0
+  - glob2=0.7=pyhd3eb1b0_0
+  - gmp=6.2.1=h2531618_2
+  - gmpy2=2.0.8=py37h10f8cd9_2
+  - graphite2=1.3.14=h23475e2_0
+  - greenlet=1.1.0=py37h2531618_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - h5py=2.10.0=py37h7918eee_0
+  - harfbuzz=2.8.1=h6f93f22_0
+  - hdf5=1.10.4=hb1b8bf9_0
+  - heapdict=1.0.1=py_0
+  - html5lib=1.1=py_0
+  - hypothesis=6.13.11=pyhd3eb1b0_0
+  - icu=58.2=he6710b0_3
+  - idna=2.10=pyhd3eb1b0_0
+  - imageio=2.9.0=pyhd3eb1b0_0
+  - imagesize=1.2.0=pyhd3eb1b0_0
+  - importlib-metadata=3.10.0=py37h06a4308_0
+  - importlib_metadata=3.10.0=hd3eb1b0_0
+  - iniconfig=1.1.1=pyhd3eb1b0_0
+  - intel-openmp=2019.4=243
+  - ipykernel=5.3.4=py37h5ca1d4c_0
+  - ipython=7.22.0=py37hb070fc8_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.3=pyhd3eb1b0_1
+  - isort=5.8.0=pyhd3eb1b0_0
+  - itsdangerous=2.0.1=pyhd3eb1b0_0
+  - jbig=2.1=hdba287a_0
+  - jdcal=1.4.1=py_0
+  - jeepney=0.6.0=pyhd3eb1b0_0
+  - jinja2=3.0.0=pyhd3eb1b0_0
+  - joblib=1.0.1=pyhd3eb1b0_0
+  - jpeg=9b=h024ee3a_2
+  - json5=0.9.5=py_0
+  - jsonschema=3.2.0=py_2
+  - jupyter=1.0.0=py37_7
+  - jupyter-packaging=0.7.12=pyhd3eb1b0_0
+  - jupyter_client=6.1.12=pyhd3eb1b0_0
+  - jupyter_console=6.4.0=pyhd3eb1b0_0
+  - jupyter_core=4.7.1=py37h06a4308_0
+  - jupyter_server=1.4.1=py37h06a4308_0
+  - jupyterlab=3.0.14=pyhd3eb1b0_1
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.4.0=pyhd3eb1b0_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - keyring=23.0.1=py37h06a4308_0
+  - kiwisolver=1.3.1=py37h2531618_0
+  - krb5=1.18.2=h173b8e3_0
+  - lazy-object-proxy=1.6.0=py37h27cfd23_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.33.1=h53a641e_7
+  - libarchive=3.4.2=h62408e4_0
+  - libcurl=7.71.1=h20c2e04_1
+  - libedit=3.1.20210216=h27cfd23_1
+  - libev=4.33=h7b6447c_0
+  - libffi=3.3=he6710b0_2
+  - libgcc-ng=9.1.0=hdf63c60_0
+  - libgfortran-ng=7.3.0=hdf63c60_0
+  - liblief=0.10.1=he6710b0_0
+  - libllvm10=10.0.1=hbcb73fb_5
+  - libmklml=2019.0.5=0
+  - libpng=1.6.37=hbc83047_0
+  - libsodium=1.0.18=h7b6447c_0
+  - libssh2=1.9.0=h1ba5d50_1
+  - libstdcxx-ng=9.1.0=hdf63c60_0
+  - libtiff=4.2.0=h85742a9_0
+  - libtool=2.4.6=h7b6447c_1005
+  - libuuid=1.0.3=h1bed415_2
+  - libuv=1.40.0=h7b6447c_0
+  - libwebp-base=1.2.0=h27cfd23_0
+  - libxcb=1.14=h7b6447c_0
+  - libxml2=2.9.10=hb55368b_3
+  - libxslt=1.1.34=hc22bd24_0
+  - llvmlite=0.36.0=py37h612dafd_4
+  - locket=0.2.1=py37h06a4308_1
+  - lxml=4.6.3=py37h9120a33_0
+  - lz4-c=1.9.3=h2531618_0
+  - lzo=2.10=h7b6447c_2
+  - markupsafe=2.0.1=py37h27cfd23_0
+  - matplotlib-base=3.3.4=py37h62a2d02_0
+  - mccabe=0.6.1=py37_1
+  - mistune=0.8.4=py37h14c3975_1001
+  - mkl=2020.2=256
+  - mkl-service=2.3.0=py37he8ac12f_0
+  - mkl_fft=1.3.0=py37h54f3939_0
+  - mkl_random=1.1.1=py37h0573a6f_0
+  - mock=4.0.3=pyhd3eb1b0_0
+  - more-itertools=8.8.0=pyhd3eb1b0_0
+  - mpc=1.1.0=h10f8cd9_1
+  - mpfr=4.0.2=hb69a4c5_1
+  - mpmath=1.2.1=py37h06a4308_0
+  - msgpack-python=1.0.2=py37hff7bd54_1
+  - multipledispatch=0.6.0=py37_0
+  - mypy_extensions=0.4.3=py37_0
+  - navigator-updater=0.2.1=py37_0
+  - nbclassic=0.2.6=pyhd3eb1b0_0
+  - nbclient=0.5.3=pyhd3eb1b0_0
+  - nbconvert=6.0.7=py37_0
+  - nbformat=5.1.3=pyhd3eb1b0_0
+  - ncurses=6.2=he6710b0_1
+  - nest-asyncio=1.5.1=pyhd3eb1b0_0
+  - networkx=2.5.1=pyhd3eb1b0_0
+  - ninja=1.10.2=hff7bd54_1
+  - nltk=3.6.2=pyhd3eb1b0_0
+  - nose=1.3.7=pyhd3eb1b0_1006
+  - notebook=6.4.0=py37h06a4308_0
+  - numba=0.53.1=py37ha9443f7_0
+  - numexpr=2.7.3=py37hb2eb853_0
+  - numpy-base=1.19.2=py37hfa32c7d_0
+  - numpydoc=1.1.0=pyhd3eb1b0_1
+  - olefile=0.46=py37_0
+  - openpyxl=3.0.7=pyhd3eb1b0_0
+  - openssl=1.1.1k=h27cfd23_0
+  - packaging=20.9=pyhd3eb1b0_0
+  - pandas=1.2.4=py37h2531618_0
+  - pandoc=2.12=h06a4308_0
+  - pandocfilters=1.4.3=py37h06a4308_1
+  - pango=1.45.3=hd140c19_0
+  - parso=0.8.2=pyhd3eb1b0_0
+  - partd=1.2.0=pyhd3eb1b0_0
+  - patchelf=0.12=h2531618_1
+  - path=15.1.2=py37h06a4308_0
+  - path.py=12.5.0=0
+  - pathlib2=2.3.5=py37h06a4308_2
+  - patsy=0.5.1=py37_0
+  - pcre=8.44=he6710b0_0
+  - pep8=1.7.1=py37_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=8.2.0=py37he98fc37_0
+  - pip=21.1.1=py37h06a4308_0
+  - pixman=0.40.0=h7b6447c_0
+  - pkginfo=1.7.0=py37h06a4308_0
+  - pluggy=0.13.1=py37h06a4308_0
+  - ply=3.11=py37_0
+  - prometheus_client=0.10.1=pyhd3eb1b0_0
+  - prompt-toolkit=3.0.17=pyh06a4308_0
+  - prompt_toolkit=3.0.17=hd3eb1b0_0
+  - psutil=5.8.0=py37h27cfd23_1
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - py=1.10.0=pyhd3eb1b0_0
+  - py-lief=0.10.1=py37h403a769_0
+  - pycodestyle=2.7.0=pyhd3eb1b0_0
+  - pycosat=0.6.3=py37h27cfd23_0
+  - pycparser=2.20=py_2
+  - pycrypto=2.6.1=py37h7b6447c_10
+  - pycurl=7.43.0.6=py37h1ba5d50_0
+  - pyerfa=1.7.3=py37h27cfd23_0
+  - pyflakes=2.3.1=pyhd3eb1b0_0
+  - pygments=2.9.0=pyhd3eb1b0_0
+  - pylint=2.7.4=py37h06a4308_1
+  - pyodbc=4.0.30=py37he6710b0_0
+  - pyopenssl=20.0.1=pyhd3eb1b0_1
+  - pyparsing=2.4.7=pyhd3eb1b0_0
+  - pyqt=5.9.2=py37h05f1152_2
+  - pyrsistent=0.17.3=py37h7b6447c_0
+  - pysocks=1.7.1=py37_1
+  - pytables=3.6.1=py37h71ec239_0
+  - pytest=6.2.3=py37h06a4308_2
+  - pytest-arraydiff=0.3=py37h39e3cac_0
+  - pytest-astropy=0.8.0=pyhd3eb1b0_0
+  - pytest-astropy-header=0.1.2=pyhd3eb1b0_0
+  - pytest-doctestplus=0.9.0=pyhd3eb1b0_0
+  - pytest-openfiles=0.5.0=pyhd3eb1b0_0
+  - pytest-remotedata=0.3.2=py37_0
+  - python=3.7.7=hcff3b4d_5
+  - python-dateutil=2.8.1=pyhd3eb1b0_0
+  - python-libarchive-c=2.9=pyhd3eb1b0_1
+  - pytz=2021.1=pyhd3eb1b0_0
+  - pywavelets=1.1.1=py37h7b6447c_2
+  - pyzmq=20.0.0=py37h2531618_1
+  - qt=5.9.7=h5867ecd_1
+  - qtawesome=1.0.2=pyhd3eb1b0_0
+  - qtconsole=5.0.3=pyhd3eb1b0_0
+  - qtpy=1.9.0=py_0
+  - readline=8.1=h27cfd23_0
+  - regex=2021.4.4=py37h27cfd23_0
+  - requests=2.25.1=pyhd3eb1b0_0
+  - ripgrep=12.1.1=0
+  - rope=0.18.0=py_0
+  - ruamel_yaml=0.15.100=py37h27cfd23_0
+  - scikit-image=0.16.2=py37h0573a6f_0
+  - scikit-learn=0.24.2=py37ha9443f7_0
+  - scipy=1.6.2=py37h91f5cce_0
+  - seaborn=0.11.1=pyhd3eb1b0_0
+  - secretstorage=3.3.1=py37h06a4308_0
+  - send2trash=1.5.0=pyhd3eb1b0_1
+  - setuptools=52.0.0=py37h06a4308_0
+  - simplegeneric=0.8.1=py37_2
+  - singledispatch=3.6.1=pyhd3eb1b0_1001
+  - sip=4.19.8=py37hf484d3e_0
+  - six=1.15.0=py37h06a4308_0
+  - snappy=1.1.8=he6710b0_0
+  - sniffio=1.2.0=py37h06a4308_1
+  - snowballstemmer=2.1.0=pyhd3eb1b0_0
+  - sortedcollections=2.1.0=pyhd3eb1b0_0
+  - sortedcontainers=2.3.0=pyhd3eb1b0_0
+  - soupsieve=2.2.1=pyhd3eb1b0_0
+  - sphinx=4.0.1=pyhd3eb1b0_0
+  - sphinxcontrib=1.0=py37_1
+  - sphinxcontrib-applehelp=1.0.2=pyhd3eb1b0_0
+  - sphinxcontrib-devhelp=1.0.2=pyhd3eb1b0_0
+  - sphinxcontrib-htmlhelp=1.0.3=pyhd3eb1b0_0
+  - sphinxcontrib-jsmath=1.0.1=pyhd3eb1b0_0
+  - sphinxcontrib-qthelp=1.0.3=pyhd3eb1b0_0
+  - sphinxcontrib-serializinghtml=1.1.4=pyhd3eb1b0_0
+  - sphinxcontrib-websupport=1.2.4=py_0
+  - spyder=3.3.6=py37_0
+  - spyder-kernels=0.5.2=py37_0
+  - sqlalchemy=1.4.15=py37h27cfd23_0
+  - sqlite=3.35.4=hdfb4753_0
+  - statsmodels=0.12.2=py37h27cfd23_0
+  - sympy=1.8=py37h06a4308_0
+  - tbb=2020.3=hfd86e86_0
+  - tblib=1.7.0=py_0
+  - terminado=0.9.4=py37h06a4308_0
+  - testpath=0.4.4=pyhd3eb1b0_0
+  - threadpoolctl=2.1.0=pyh5ca1d4c_0
+  - tk=8.6.10=hbc83047_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - toolz=0.11.1=pyhd3eb1b0_0
+  - tornado=6.1=py37h27cfd23_0
+  - tqdm=4.59.0=pyhd3eb1b0_1
+  - traitlets=5.0.5=pyhd3eb1b0_0
+  - typed-ast=1.4.2=py37h27cfd23_1
+  - typing_extensions=3.7.4.3=pyh06a4308_0
+  - unicodecsv=0.14.1=py37_0
+  - unixodbc=2.3.9=h7b6447c_0
+  - urllib3=1.26.4=pyhd3eb1b0_0
+  - wcwidth=0.2.5=py_0
+  - webencodings=0.5.1=py37_1
+  - wheel=0.36.2=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.1=py37_0
+  - wrapt=1.12.1=py37h7b6447c_1
+  - wurlitzer=2.1.0=py37h06a4308_0
+  - xlrd=2.0.1=pyhd3eb1b0_0
+  - xlsxwriter=1.3.8=pyhd3eb1b0_0
+  - xlwt=1.3.0=py37_0
+  - xmltodict=0.12.0=py_0
+  - xz=5.2.5=h7b6447c_0
+  - yaml=0.2.5=h7b6447c_0
+  - zeromq=4.3.4=h2531618_0
+  - zict=2.0.0=pyhd3eb1b0_0
+  - zipp=3.4.1=pyhd3eb1b0_0
+  - zlib=1.2.11=h7b6447c_3
+  - zope=1.0=py37_1
+  - zope.event=4.5.0=py37_0
+  - zope.interface=5.3.0=py37h27cfd23_0
+  - zstd=1.4.9=haebb681_0
+  - pip:
+    - aiohttp==3.7.4.post0
+    - aiohttp-cors==0.7.0
+    - aioredis==1.3.1
+    - altair==4.1.0
+    - aniso8601==9.0.1
+    - async-timeout==3.0.1
+    - backoff==1.11.1
+    - base58==2.1.0
+    - black==21.7b0
+    - blessings==1.7
+    - blinker==1.4
+    - cachecontrol==0.12.6
+    - camera==1.3.0
+    - catboost==0.26
+    - chardet==3.0.4
+    - clearml==1.0.4
+    - click==7.1.2
+    - colorful==0.5.4
+    - configparser==5.0.2
+    - deprecated==1.2.12
+    - detectron2==0.4+cu101
+    - distlib==0.3.2
+    - distro==1.6.0
+    - dlib==19.22.0
+    - dnspython==1.16.0
+    - docker-pycreds==0.4.0
+    - docopt==0.6.2
+    - face-recognition==1.3.0
+    - face-recognition-models==0.3.0
+    - firebase==3.0.1
+    - firebase-admin==5.0.1
+    - flaml==0.5.12
+    - flask==2.0.1
+    - flask-restful==0.3.9
+    - flask-simple-geoip==0.2.4
+    - furl==2.1.2
+    - futures==3.1.1
+    - fvcore==0.1.3.post20210317
+    - gcloud==0.18.3
+    - gender-guesser==0.4.0
+    - gitdb==4.0.7
+    - gitpython==3.1.17
+    - google-api-core==1.30.0
+    - google-api-python-client==2.15.0
+    - google-auth==1.30.1
+    - google-auth-httplib2==0.1.0
+    - google-cloud-core==1.7.2
+    - google-cloud-firestore==2.2.0
+    - google-cloud-storage==1.41.1
+    - google-crc32c==1.1.2
+    - google-resumable-media==1.3.3
+    - googleapis-common-protos==1.53.0
+    - googletrans==3.1.0a0
+    - gpustat==0.6.0
+    - grpcio==1.38.0
+    - gunicorn==20.0.4
+    - h11==0.9.0
+    - h2==3.2.0
+    - hiredis==2.0.0
+    - hpack==3.0.0
+    - hstspreload==2021.7.5
+    - httpcore==0.9.1
+    - httplib2==0.19.1
+    - httpx==0.13.3
+    - huggingface-hub==0.0.12
+    - humanfriendly==9.2
+    - hyperframe==5.2.0
+    - imageio-ffmpeg==0.4.4
+    - imutils==0.5.4
+    - iopath==0.1.8
+    - ipaddress==1.0.23
+    - jedi==0.18.0
+    - js2py==0.71
+    - jwcrypto==1.0
+    - lightgbm==3.2.1
+    - mailer==0.8.1
+    - matplotlib==3.4.2
+    - moviepy==1.0.3
+    - multidict==5.1.0
+    - numpy==1.20.3
+    - nvidia-ml-py3==7.352.0
+    - oauth2client==4.1.3
+    - omegaconf==2.0.6
+    - opencensus==0.7.13
+    - opencensus-context==0.1.2
+    - opencv-contrib-python==4.5.2.52
+    - orderedmultidict==1.0.1
+    - pandas-read-xml==0.3.1
+    - pathspec==0.9.0
+    - pathtools==0.1.2
+    - phonenumbers==8.12.28
+    - pipwin==0.5.1
+    - plotly==5.1.0
+    - portalocker==2.3.0
+    - proglog==0.1.9
+    - promise==2.3
+    - proto-plus==1.19.0
+    - protobuf==3.17.2
+    - py-spy==0.3.7
+    - pyarrow==4.0.1
+    - pycocotools==2.0.2
+    - pydantic==1.8.2
+    - pydeck==0.6.2
+    - pydot==1.4.2
+    - pygeoip==0.3.2
+    - pyjsparser==2.7.1
+    - pyjwt==1.7.1
+    - pymongo==3.12.0
+    - pyprind==2.11.3
+    - pysmartdl==1.3.4
+    - pyspin==1.1.1
+    - python-graphviz==0.16
+    - python-jwt==3.3.0
+    - pyyaml==5.1
+    - ray==1.4.1
+    - redis==3.5.3
+    - requests-toolbelt==0.9.1
+    - rfc3986==1.5.0
+    - sacremoses==0.0.45
+    - sentry-sdk==1.1.0
+    - shortuuid==1.0.1
+    - simple-geoip==0.1.1
+    - smmap==4.0.0
+    - speechrecognition==3.8.1
+    - sseclient==0.0.27
+    - streamlit==0.84.1
+    - stripe==2.60.0
+    - subprocess32==3.5.4
+    - tabulate==0.8.9
+    - tenacity==7.0.0
+    - tensorboard==2.5.0
+    - tensorboard-data-server==0.6.1
+    - tensorboard-plugin-wit==1.8.0
+    - tensorboardx==2.4
+    - tokenizers==0.10.3
+    - tomli==1.2.1
+    - torch==1.7.1+cu110
+    - torchaudio==0.7.2
+    - torchvision==0.8.2+cu110
+    - transformers==4.9.2
+    - twilio==6.62.1
+    - typing-extensions==3.10.0.0
+    - tzlocal==2.1
+    - uritemplate==3.0.1
+    - validators==0.18.2
+    - vonage==2.5.5
+    - wandb==0.12.0
+    - watchdog==2.1.3
+    - werkzeug==2.0.1
+    - xgboost==1.4.2
+    - yacs==0.1.8
+    - yarl==1.6.3
+    - zipfile36==0.1.3
+prefix: /home/indika/anaconda3
diff --git a/wandb/run-20210825_105632-sgmyybmk/files/config.yaml b/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
index 415cd40..b0ea479 100644
--- a/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
+++ b/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
@@ -16,6 +16,14 @@ _wandb:
       - 6
       - 7
       - 8
+      2:
+      - 1
+      - 5
+      - 6
+      - 7
+      - 8
+      3:
+      - 2
       4: 3.7.7
       5: 0.12.0
       8:
diff --git a/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json b/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
index 9e26dfe..13ed209 100644
--- a/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
+++ b/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
@@ -1 +1 @@
-{}
\ No newline at end of file
+{"_wandb": {"runtime": 7}}
\ No newline at end of file
diff --git a/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log b/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log
index f2c80cd..a3c357b 100644
--- a/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log
+++ b/wandb/run-20210825_105632-sgmyybmk/logs/debug-internal.log
@@ -22,3 +22,152 @@
 2021-08-25 10:57:00,191 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/requirements.txt
 2021-08-25 10:57:00,192 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
 2021-08-25 10:57:00,192 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+2021-08-25 10:57:05,194 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/output.log
+2021-08-25 10:57:06,525 DEBUG   HandlerThread:109081 [meta.py:_save_conda():86] save conda done
+2021-08-25 10:57:06,525 DEBUG   HandlerThread:109081 [meta.py:probe():252] probe done
+2021-08-25 10:57:06,547 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: stop_status
+2021-08-25 10:57:06,548 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:06,548 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: stop_status
+2021-08-25 10:57:06,904 DEBUG   SenderThread:109081 [sender.py:send():182] send: telemetry
+2021-08-25 10:57:06,904 DEBUG   SenderThread:109081 [sender.py:send():182] send: exit
+2021-08-25 10:57:06,904 INFO    SenderThread:109081 [sender.py:send_exit():291] handling exit code: 0
+2021-08-25 10:57:06,904 INFO    SenderThread:109081 [sender.py:send_exit():293] handling runtime: 7
+2021-08-25 10:57:06,907 INFO    SenderThread:109081 [sender.py:_save_file():873] saving file wandb-summary.json with policy end
+2021-08-25 10:57:06,907 INFO    SenderThread:109081 [sender.py:send_exit():303] send defer
+2021-08-25 10:57:06,907 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:06,907 DEBUG   SenderThread:109081 [sender.py:send():182] send: files
+2021-08-25 10:57:06,908 INFO    SenderThread:109081 [sender.py:_save_file():873] saving file wandb-metadata.json with policy now
+2021-08-25 10:57:06,908 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,908 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 0
+2021-08-25 10:57:06,908 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,909 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 0
+2021-08-25 10:57:06,909 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 1
+2021-08-25 10:57:06,909 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,909 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 1
+2021-08-25 10:57:06,970 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,970 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 1
+2021-08-25 10:57:06,970 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 2
+2021-08-25 10:57:06,970 DEBUG   SenderThread:109081 [sender.py:send():182] send: stats
+2021-08-25 10:57:06,971 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,971 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 2
+2021-08-25 10:57:06,971 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,971 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 2
+2021-08-25 10:57:06,971 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 3
+2021-08-25 10:57:06,971 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,971 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 3
+2021-08-25 10:57:06,971 DEBUG   SenderThread:109081 [sender.py:send():182] send: summary
+2021-08-25 10:57:06,971 INFO    SenderThread:109081 [sender.py:_save_file():873] saving file wandb-summary.json with policy end
+2021-08-25 10:57:06,972 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,972 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 3
+2021-08-25 10:57:06,972 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 4
+2021-08-25 10:57:06,972 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:06,972 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 4
+2021-08-25 10:57:06,972 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:06,972 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 4
+2021-08-25 10:57:07,013 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:07,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_modified():229] file/dir modified: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
+2021-08-25 10:57:07,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_modified():229] file/dir modified: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+2021-08-25 10:57:07,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_created():216] file/dir created: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-metadata.json
+2021-08-25 10:57:07,386 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 5
+2021-08-25 10:57:07,386 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:07,387 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:07,387 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 5
+2021-08-25 10:57:07,387 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:07,387 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 5
+2021-08-25 10:57:07,387 INFO    SenderThread:109081 [dir_watcher.py:finish():282] shutting down directory watcher
+2021-08-25 10:57:07,489 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:07,789 INFO    Thread-11 :109081 [upload_job.py:push():137] Uploaded file /tmp/tmpj76p0lzjwandb/22h9mbg6-wandb-metadata.json
+2021-08-25 10:57:08,195 INFO    Thread-8  :109081 [dir_watcher.py:_on_file_modified():229] file/dir modified: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
+2021-08-25 10:57:08,196 INFO    SenderThread:109081 [dir_watcher.py:finish():312] scan: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files
+2021-08-25 10:57:08,196 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json wandb-summary.json
+2021-08-25 10:57:08,196 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml conda-environment.yaml
+2021-08-25 10:57:08,197 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/requirements.txt requirements.txt
+2021-08-25 10:57:08,201 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-metadata.json wandb-metadata.json
+2021-08-25 10:57:08,201 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/config.yaml config.yaml
+2021-08-25 10:57:08,206 INFO    SenderThread:109081 [dir_watcher.py:finish():318] scan save: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/output.log output.log
+2021-08-25 10:57:08,210 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 6
+2021-08-25 10:57:08,210 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,211 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:08,211 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 6
+2021-08-25 10:57:08,216 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:08,216 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 6
+2021-08-25 10:57:08,216 INFO    SenderThread:109081 [file_pusher.py:finish():177] shutting down file pusher
+2021-08-25 10:57:08,318 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,318 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,420 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,420 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,521 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,521 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,622 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,623 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,724 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,724 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,826 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,827 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:08,929 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:08,929 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,030 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,031 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,133 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,133 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,235 INFO    Thread-13 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/conda-environment.yaml
+2021-08-25 10:57:09,235 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,238 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,266 INFO    Thread-12 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/wandb-summary.json
+2021-08-25 10:57:09,340 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,340 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,441 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,441 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,543 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,543 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,644 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,644 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,658 INFO    Thread-14 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/requirements.txt
+2021-08-25 10:57:09,745 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,745 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,847 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,847 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:09,948 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:09,949 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,050 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,050 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,151 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,152 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,253 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,253 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,258 INFO    Thread-15 :109081 [upload_job.py:push():137] Uploaded file /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/files/config.yaml
+2021-08-25 10:57:10,355 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,355 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,456 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,456 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,459 INFO    Thread-7  :109081 [sender.py:transition_state():316] send defer: 7
+2021-08-25 10:57:10,459 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:10,459 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 7
+2021-08-25 10:57:10,459 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:10,460 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 7
+2021-08-25 10:57:10,558 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,718 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 8
+2021-08-25 10:57:10,718 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,718 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:10,718 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 8
+2021-08-25 10:57:10,719 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:10,719 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 8
+2021-08-25 10:57:10,719 INFO    SenderThread:109081 [sender.py:transition_state():316] send defer: 9
+2021-08-25 10:57:10,719 DEBUG   SenderThread:109081 [sender.py:send():182] send: final
+2021-08-25 10:57:10,719 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: defer
+2021-08-25 10:57:10,719 DEBUG   SenderThread:109081 [sender.py:send():182] send: footer
+2021-08-25 10:57:10,719 INFO    HandlerThread:109081 [handler.py:handle_request_defer():145] handle defer: 9
+2021-08-25 10:57:10,720 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: defer
+2021-08-25 10:57:10,720 INFO    SenderThread:109081 [sender.py:send_request_defer():312] handle sender defer: 9
+2021-08-25 10:57:10,820 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: poll_exit
+2021-08-25 10:57:10,820 DEBUG   SenderThread:109081 [sender.py:send_request():196] send_request: poll_exit
+2021-08-25 10:57:10,820 INFO    SenderThread:109081 [file_pusher.py:join():182] waiting for file pusher
+2021-08-25 10:57:10,821 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: get_summary
+2021-08-25 10:57:10,822 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: sampled_history
+2021-08-25 10:57:10,823 DEBUG   HandlerThread:109081 [handler.py:handle_request():128] handle_request: shutdown
+2021-08-25 10:57:10,823 INFO    HandlerThread:109081 [handler.py:finish():677] shutting down handler
+2021-08-25 10:57:11,720 INFO    WriterThread:109081 [datastore.py:close():281] close: /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb
+2021-08-25 10:57:11,820 INFO    SenderThread:109081 [sender.py:finish():979] shutting down sender
+2021-08-25 10:57:11,820 INFO    SenderThread:109081 [file_pusher.py:finish():177] shutting down file pusher
+2021-08-25 10:57:11,820 INFO    SenderThread:109081 [file_pusher.py:join():182] waiting for file pusher
+2021-08-25 10:57:11,822 INFO    MainThread:109081 [internal.py:handle_exit():76] Internal process exited
diff --git a/wandb/run-20210825_105632-sgmyybmk/logs/debug.log b/wandb/run-20210825_105632-sgmyybmk/logs/debug.log
index 83e53ab..ae41b8c 100644
--- a/wandb/run-20210825_105632-sgmyybmk/logs/debug.log
+++ b/wandb/run-20210825_105632-sgmyybmk/logs/debug.log
@@ -380,3 +380,18 @@ pusher_stats {
 2021-08-25 10:56:58,706 INFO    MainThread:107641 [wandb_init.py:init():505] got version response 
 2021-08-25 10:56:58,707 INFO    MainThread:107641 [wandb_init.py:init():513] communicating run to backend with 30 second timeout
 2021-08-25 10:56:59,189 INFO    MainThread:107641 [wandb_init.py:init():540] starting run threads in backend
+2021-08-25 10:57:04,196 INFO    MainThread:107641 [wandb_run.py:_console_start():1584] atexit reg
+2021-08-25 10:57:04,196 INFO    MainThread:107641 [wandb_run.py:_redirect():1458] redirect: SettingsConsole.WRAP
+2021-08-25 10:57:04,196 INFO    MainThread:107641 [wandb_run.py:_redirect():1495] Wrapping output streams.
+2021-08-25 10:57:04,197 INFO    MainThread:107641 [wandb_run.py:_redirect():1519] Redirects installed.
+2021-08-25 10:57:04,197 INFO    MainThread:107641 [wandb_init.py:init():565] run started, returning control to user process
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_setup.py:_flush():69] setting env: {}
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_init.py:_log_setup():342] Logging user logs to /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105704-330avsvp/logs/debug.log
+2021-08-25 10:57:04,211 INFO    MainThread:107641 [wandb_init.py:_log_setup():343] Logging internal logs to /home/indika/Programming/Projects/Python/Artifical-Intelligence/Sklearn-PyTorch/House-Prices-Advanced-Regression-Techniques-V9-Competition/wandb/run-20210825_105704-330avsvp/logs/debug-internal.log
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:_jupyter_setup():294] configuring jupyter hooks <wandb.sdk.wandb_init._WandbInit object at 0x7fe1740bef90>
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:init():375] calling init triggers
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:init():382] wandb.init called with sweep_config: {}
+config: {}
+2021-08-25 10:57:04,212 INFO    MainThread:107641 [wandb_init.py:init():397] re-initializing run, found existing run on stack: sgmyybmk
+2021-08-25 10:57:04,213 INFO    MainThread:107641 [wandb_run.py:finish():1254] finishing run ranuga-d/House-Prices-Advanced-Regression-Techniques-V9/sgmyybmk
diff --git a/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb b/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb
index e69de29..846d64d 100644
Binary files a/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb and b/wandb/run-20210825_105632-sgmyybmk/run-sgmyybmk.wandb differ
